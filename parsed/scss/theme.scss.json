{"theme.scss":"/*! Theme: Capacity v1.14.1 */\n// Libraries\n/* scss-combine:../../node_modules/normalize.scss/normalize */\n/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */\n\n/**\n * 1. Set default font family to sans-serif.\n * 2. Prevent iOS text size adjust after orientation change, without disabling\n *    user zoom.\n */\n\nhtml {\n  font-family: sans-serif; /* 1 */\n  -ms-text-size-adjust: 100%; /* 2 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/**\n * Remove default margin.\n */\n\nbody {\n  margin: 0;\n}\n\n/* HTML5 display definitions\n   ========================================================================== */\n\n/**\n * Correct `block` display not defined for any HTML5 element in IE 8/9.\n * Correct `block` display not defined for `details` or `summary` in IE 10/11\n * and Firefox.\n * Correct `block` display not defined for `main` in IE 11.\n */\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n  display: block;\n}\n\n/**\n * 1. Correct `inline-block` display not defined in IE 8/9.\n * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.\n */\n\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block; /* 1 */\n  vertical-align: baseline; /* 2 */\n}\n\n/**\n * Prevent modern browsers from displaying `audio` without controls.\n * Remove excess height in iOS 5 devices.\n */\n\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n\n/**\n * Address `[hidden]` styling not present in IE 8/9/10.\n * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.\n */\n\n[hidden],\ntemplate {\n  display: none;\n}\n\n/* Links\n   ========================================================================== */\n\n/**\n * Remove the gray background color from active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * Improve readability when focused and also mouse hovered in all browsers.\n */\n\na:active,\na:hover {\n  outline: 0;\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Address styling not present in IE 8/9/10/11, Safari, and Chrome.\n */\n\nabbr[title] {\n  border-bottom: 1px dotted;\n}\n\n/**\n * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\n */\n\nb,\nstrong {\n  font-weight: bold;\n}\n\n/**\n * Address styling not present in Safari and Chrome.\n */\n\ndfn {\n  font-style: italic;\n}\n\n/**\n * Address variable `h1` font-size and margin within `section` and `article`\n * contexts in Firefox 4+, Safari, and Chrome.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/**\n * Address styling not present in IE 8/9.\n */\n\nmark {\n  background: #ff0;\n  color: #000;\n}\n\n/**\n * Address inconsistent and variable font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` affecting `line-height` in all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsup {\n  top: -0.5em;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove border when inside `a` element in IE 8/9/10.\n */\n\nimg {\n  border: 0;\n}\n\n/**\n * Correct overflow not hidden in IE 9/10/11.\n */\n\nsvg:not(:root) {\n  overflow: hidden;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * Address margin not present in IE 8/9 and Safari.\n */\n\nfigure {\n  margin: 1em 40px;\n}\n\n/**\n * Address differences between Firefox and other browsers.\n */\n\nhr {\n  -moz-box-sizing: content-box;\n  box-sizing: content-box;\n  height: 0;\n}\n\n/**\n * Contain overflow in all browsers.\n */\n\npre {\n  overflow: auto;\n}\n\n/**\n * Address odd `em`-unit font size rendering in all browsers.\n */\n\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace;\n  font-size: 1em;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * Known limitation: by default, Chrome and Safari on OS X allow very limited\n * styling of `select`, unless a `border` property is set.\n */\n\n/**\n * 1. Correct color not being inherited.\n *    Known issue: affects color of disabled elements.\n * 2. Correct font properties not being inherited.\n * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  color: inherit; /* 1 */\n  font: inherit; /* 2 */\n  margin: 0; /* 3 */\n}\n\n/**\n * Address `overflow` set to `hidden` in IE 8/9/10/11.\n */\n\nbutton {\n  overflow: visible;\n}\n\n/**\n * Address inconsistent `text-transform` inheritance for `button` and `select`.\n * All other form control elements do not inherit `text-transform` values.\n * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.\n * Correct `select` style inheritance in Firefox.\n */\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n/**\n * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\n *    and `video` controls.\n * 2. Correct inability to style clickable `input` types in iOS.\n * 3. Improve usability and consistency of cursor style between image-type\n *    `input` and others.\n */\n\nbutton,\nhtml input[type=\"button\"], /* 1 */\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n  -webkit-appearance: button; /* 2 */\n  cursor: pointer; /* 3 */\n}\n\n/**\n * Re-set default cursor for disabled elements.\n */\n\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default;\n}\n\n/**\n * Remove inner padding and border in Firefox 4+.\n */\n\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  border: 0;\n  padding: 0;\n}\n\n/**\n * Address Firefox 4+ setting `line-height` on `input` using `!important` in\n * the UA stylesheet.\n */\n\ninput {\n  line-height: normal;\n}\n\n/**\n * It's recommended that you don't attempt to style these elements.\n * Firefox's implementation doesn't respect box-sizing, padding, or width.\n *\n * 1. Address box sizing set to `content-box` in IE 8/9/10.\n * 2. Remove excess padding in IE 8/9/10.\n */\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Fix the cursor style for Chrome's increment/decrement buttons. For certain\n * `font-size` values of the `input`, it causes the cursor style of the\n * decrement button to change from `default` to `text`.\n */\n\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Address `appearance` set to `searchfield` in Safari and Chrome.\n * 2. Address `box-sizing` set to `border-box` in Safari and Chrome\n *    (include `-moz` to future-proof).\n */\n\ninput[type=\"search\"] {\n  -webkit-appearance: textfield; /* 1 */\n  -moz-box-sizing: content-box;\n  -webkit-box-sizing: content-box; /* 2 */\n  box-sizing: content-box;\n}\n\n/**\n * Remove inner padding and search cancel button in Safari and Chrome on OS X.\n * Safari (but not Chrome) clips the cancel button when the search input has\n * padding (and `textfield` appearance).\n */\n\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * Define consistent border, margin, and padding.\n */\n\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em;\n}\n\n/**\n * 1. Correct `color` not being inherited in IE 8/9/10/11.\n * 2. Remove padding so people aren't caught out if they zero out fieldsets.\n */\n\nlegend {\n  border: 0; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Remove default vertical scrollbar in IE 8/9/10/11.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * Don't inherit the `font-weight` (applied by a rule above).\n * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.\n */\n\noptgroup {\n  font-weight: bold;\n}\n\n/* Tables\n   ========================================================================== */\n\n/**\n * Remove most spacing between table cells.\n */\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\ntd,\nth {\n  padding: 0;\n}\n\n/* scss-combine:../../node_modules/bc-baseline/baseline */\n/* scss-combine:lib/extends */\n%clearfix {\n  *zoom: 1;\n\n  &:before,\n  &:after {\n    display: table;\n    content: \"\";\n  }\n\n  &:after {\n    clear: both;\n  }\n}\n\n%font-smoothing {\n  -moz-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n}\n\n/* scss-combine:lib/mixins */\n@mixin media($max: false, $min: false) {\n  @if $max {\n    @if $min {\n      @media screen and (max-width: $max - 1) and (min-width: $min) { @content; }\n    } @else {\n      @media screen and (max-width: $max - 1) { @content; }\n    }\n  } @else {\n    @media screen and (min-width: $min) { @content; }\n  }\n}\n\n@mixin hover($color, $property: color) {\n  @if lightness($color) > 10% {\n    #{$property}: darken($color,8%);\n  } @else {\n    #{$property}: lighten($color,10%);\n  }\n}\n\n@mixin button-hover($color, $property: color) {\n  @if lightness($color) > 20% {\n    #{$property}: darken($color,5%);\n  } @else {\n    #{$property}: lighten($color,6%);\n  }\n}\n\n@mixin retina {\n  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n    @content;\n  }\n}\n\n/* scss-combine:lib/text-inputs */\n// https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/addons/_text-inputs.scss\n\n@function assign-inputs($inputs, $pseudo: null) {\n  $list: ();\n\n  @each $input in $inputs {\n    $input: unquote($input);\n    $input: if($pseudo, $input + \":\" + $pseudo, $input);\n    $list: append($list, $input, comma);\n  }\n\n  @return $list;\n}\n\n\n$text-inputs-list: 'input[type=\"color\"]',\n                  'input[type=\"date\"]',\n                  'input[type=\"datetime\"]',\n                  'input[type=\"datetime-local\"]',\n                  'input[type=\"email\"]',\n                  'input[type=\"month\"]',\n                  'input[type=\"number\"]',\n                  'input[type=\"password\"]',\n                  'input[type=\"search\"]',\n                  'input[type=\"tel\"]',\n                  'input[type=\"text\"]',\n                  'input[type=\"time\"]',\n                  'input[type=\"url\"]',\n                  'input[type=\"week\"]',\n                  'input:not([type])',\n                  'textarea';\n\n$all-text-inputs:        assign-inputs($text-inputs-list);\n$all-text-inputs-active: assign-inputs($text-inputs-list, active);\n$all-text-inputs-focus:  assign-inputs($text-inputs-list, focus);\n$all-text-inputs-hover:  assign-inputs($text-inputs-list, hover);\n\n\n/* scss-combine:styles/general */\n// scss-lint:disable VariableForProperty ColorVariable\n\n// Box model\n// See: http://www.paulirish.com/2012/box-sizing-border-box-ftw/\n\nhtml {\n  box-sizing: border-box;\n}\n\n*,\n*:before,\n*:after {\n  box-sizing: inherit;\n}\n\n// - Links\n\na {\n  text-decoration: none;\n}\n\n// - Headers\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  line-height: 1.25;\n}\n\n// - Basic elements\n\nimg {\n  max-width: 100%;\n}\n\nul,\nol,\ndl {\n  padding: 0;\n  margin: 0;\n}\n\nul {\n  list-style: outside none;\n}\n\nol {\n  list-style: outside decimal;\n}\n\nli {\n\n}\n\nhr {\n  height: 2px;\n  border: 0;\n}\n\nblockquote {\n  > *:first-child {\n    margin-top: 0;\n  }\n\n  > *:last-child {\n    margin-bottom: 0;\n  }\n}\n\nfigure {\n  margin: 0;\n}\n\niframe {\n  max-width: 100%;\n  border: 0;\n}\n\npre {\n  padding: 1em;\n  background: #fafafa;\n}\n\n.show-for-sr {\n  // scss-lint:disable ImportantRule\n  position: absolute !important;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  clip: rect(1px, 1px, 1px, 1px);\n}\n\n/* scss-combine:styles/button */\n.button {\n  display: inline-block;\n  line-height: normal;\n  text-align: center;\n  cursor: pointer;\n  border: 0;\n  border-radius: 0;\n  -webkit-appearance: none;\n\n  & + & {\n    margin-left: 5px;\n  }\n}\n\n/* scss-combine:styles/form */\n// scss-lint:disable VariableForProperty ColorVariable\n\n\n.form-fieldset {\n  padding: 0;\n  margin: 0;\n  border: 0;\n}\n\n// - Fields, a wrapper for a label and input\n\n.form-field {}\n\n// - Labels\n\n// <label class=\"form-label\">\n//   <div class=\"form-label-text\">Label</div>\n//   ... inputs ...\n// </label>\n.form-label {\n  display: block;\n}\n\n.form-label-text,\n.form-label-text-inline {\n  display: inline-block;\n}\n\n// - Inputs\n\n// text, email, password, search, telephone, tel, number, textarea, select\n.form-input {\n  display: block;\n  border: 1px solid;\n  border-color: inherit;\n  border-radius: 0;\n  box-sizing: border-box;\n\n  &::placeholder { opacity: 0.8; }\n}\n\ntextarea.form-input { resize: vertical; }\n\n#{$all-text-inputs} {\n  &.form-input {\n    -webkit-appearance: none;\n  }\n}\n\n// Wrapper for checkbox and radio inputs\n// <div class=\"form-field form-inline\">\n//   <label class=\"form-label\">\n//     <span class=\"form-label-text\">Check Me</span>\n//     <input class=\"form-input\" type=\"checkbox\">\n//   </label>\n// </div>\n.form-inline {\n  .form-label-text {\n    display: inline-block;\n    vertical-align: middle;\n  }\n\n  .form-input {\n    display: inline-block;\n  }\n}\n\n/* scss-combine:styles/table */\ntable {\n  margin: 1em 0;\n  background: transparent;\n  border: 1px solid;\n  border-collapse: separate;\n  border-top: 0;\n  border-color: inherit;\n\n  &.table-clean {\n    border: 0;\n    border-radius: 0;\n  }\n}\n\ntd,\nth {\n  padding: 20px;\n  border-top: 1px solid;\n  border-top-color: inherit;\n\n  .table-clean & {\n    border: 0;\n  }\n}\n\nth {\n  font-weight: bold;\n}\n\ntd {\n  border-left: 1px solid;\n  border-left-color: inherit;\n\n  &:first-child {\n    border-left: 0;\n  }\n}\n\n\n/* scss-combine:../../node_modules/susy/sass/susy */\n// Susy\n// ====\n\n/* scss-combine:susy/language/susy */\n// Susy Next Syntax\n// ================\n\n$susy-version: 2.1;\n\n/* scss-combine:../su */\n// Su\n// ==\n\n/* scss-combine:su/utilities */\n// Map Functions\n// =============\n\n\n// Truncate List\n// -------------\n// - Return a list, truncated to a given length\n@function _susy-truncate-list(\n  $list,\n  $length\n) {\n  $_return: ();\n\n  @for $i from 1 through length($list) {\n    $_return: if($i <= $length, append($_return, nth($list, $i)), $_return);\n  }\n\n  @return $_return;\n}\n\n\n// Deep Get\n// --------\n// - Return a value deep in nested maps\n@function _susy-deep-get(\n  $map,\n  $keys...\n) {\n  $_return: $map;\n\n  @each $key in $keys {\n    @if type-of($_return) == map {\n      $_return: map-get($_return, $key);\n    }\n  }\n\n  @return $_return;\n}\n\n\n// Deep Set\n// --------\n// - Set a value deep in nested maps\n@function _susy-deep-set(\n  $map,\n  $keys-value...\n) {\n  $_value: nth($keys-value, -1);\n  $_keys: _susy-truncate-list($keys-value, length($keys-value) - 1);\n  $_length: length($_keys);\n  $_return: ();\n\n  @for $i from 1 through $_length {\n    $_n: 0 - $i;\n    $_level: _susy-truncate-list($_keys, $_length + $_n);\n    $_level: _susy-deep-get($map, $_level...);\n    $_merge: nth($_keys, $_n);\n    $_merge: ($_merge: $_value);\n    $_return: if($_level, map-merge($_level, $_merge), $_merge);\n    $_value: $_return;\n  }\n\n  @return $_return;\n}\n\n\n// Deep Merge\n// ----------\n// Return 2 objects of any depth, merged\n@function _susy-deep-merge(\n  $map1,\n  $map2\n) {\n\n  @if type-of($map1) != map or type-of($map2) != map {\n    $map1: $map2;\n  } @else {\n    @each $key, $value in $map2 {\n      $_new: ($key: _susy_deep-merge(map-get($map1, $key), $value));\n      $map1: map-merge($map1, $_new);\n    }\n  }\n\n  @return $map1;\n}\n\n\n// Deep Has-Key\n// ------------\n// - Return true if a deep key exists\n@function _susy-deep-has-key(\n  $map,\n  $keys...\n) {\n  $_return: null;\n  $_stop: false;\n\n  @each $key in $keys {\n    @if not($_stop) {\n      $_return: map-has-key($map, $key);\n    }\n\n    @if $_return {\n      $map: map-get($map, $key);\n    } @else {\n      $_stop: true;\n    }\n  }\n\n  @return $_return;\n}\n\n/* scss-combine:su/settings */\n// Settings\n// ========\n\n// Version\n// -------\n$su-version: 1.1;\n\n\n// Default Settings\n// ----------------\n// PRIVATE: The basic settings\n$susy-defaults: (\n  columns: 4,\n  gutters: .25,\n);\n\n\n// User Settings\n// -------------\n// - Define the $susy variable with a map of your own settings.\n// - Set EITHER $column-width OR $container\n// - Use $column-width for static layouts\n$susy: () !default;\n\n\n// Susy Defaults\n// -------------\n// PRIVATE: Add defaults to Susy\n@mixin susy-defaults(\n  $defaults\n) {\n  $susy-defaults: map-merge($susy-defaults, $defaults) !global;\n}\n\n\n// Susy Set\n// --------\n// Change one setting\n// - $key   : setting name\n// - $value : setting value\n@mixin susy-set(\n  $key-value...\n) {\n  $susy: _susy-deep-set($susy, $key-value...) !global;\n}\n\n\n// Susy Get\n// --------\n// Return one setting from a grid\n// - $key     : <keyword>\n// - $layout  : <settings>\n@function susy-get(\n  $key,\n  $layout: map-merge($susy-defaults, $susy)\n) {\n  $layout: parse-grid($layout);\n  $_options: $layout $susy $susy-defaults;\n  $_break: false;\n  $_return: null;\n\n  @each $opt in $_options {\n    @if type-of($opt) == map and not($_break) {\n      $_keyset: _susy-deep-has-key($opt, $key...);\n      @if $_keyset {\n        $_return: _susy-deep-get($opt, $key...);\n        $_break: true;\n      }\n    }\n  }\n\n  @return $_return;\n}\n\n/* scss-combine:su/validation */\n// Math Validation\n// ===============\n\n\n// Valid Columns\n// -------------\n// Check that a column setting is valid.\n@function valid-columns(\n  $columns,\n  $silent: false\n) {\n  $type: type-of($columns);\n  $return: null;\n\n  @if $type == number and unitless($columns) {\n    $return: $columns;\n  } @else if $type == list {\n    $fail: null;\n    @each $col in $columns {\n      @if type-of($col) == number {\n        $fail: $fail or if(unitless($col), null, true);\n      } @else {\n        $fail: true;\n      }\n    }\n    $return: if($fail, $return, $columns);\n  }\n\n  @if $return != $columns and not($silent) {\n    $return: null;\n    $warn: '$columns must be a unitless number or list of unitless numbers.';\n    @warn $warn + ' Current value [#{$type}]: #{$columns}';\n  }\n\n  @return $return;\n}\n\n\n// Valid Gutters\n// -------------\n// Check that a gutter setting is valid.\n@function valid-gutters(\n  $gutters,\n  $silent: false\n) {\n  $type: type-of($gutters);\n  $return: null;\n\n  @if $type == number and unitless($gutters) {\n    $return: $gutters;\n  } @else if not($silent) {\n    $warn: '$gutters must be a unitless number.';\n    @warn $warn + ' Current value [#{$type}]: #{$gutters}';\n  }\n\n  @return $return;\n}\n\n/* scss-combine:su/grid */\n// Column math\n// ===========\n\n\n// Is Symmetrical\n// --------------\n// Returns true if a grid is symmetrical.\n// - [$columns]   : <number> | <list>\n@function is-symmetrical(\n  $columns: susy-get(columns)\n) {\n  $columns: valid-columns($columns);\n  @return if(type-of($columns) == number, $columns, null);\n}\n\n\n// Susy Count\n// ----------\n// Find the number of columns in a given layout\n// - [$columns]   : <number> | <list>\n@function susy-count(\n  $columns: susy-get(columns)\n) {\n  $columns: valid-columns($columns);\n  @return is-symmetrical($columns) or length($columns);\n}\n\n\n// Susy Sum\n// --------\n// Find the total sum of column-units in a layout\n// - [$columns]   : <number> | <list>\n// - [$gutters]   : <ratio>\n// - [$spread]    : false/narrow | wide | wider\n@function susy-sum(\n  $columns  : susy-get(columns),\n  $gutters  : susy-get(gutters),\n  $spread   : false\n) {\n  $columns: valid-columns($columns);\n  $gutters: valid-gutters($gutters);\n\n  $spread: if($spread == wide, 0, if($spread == wider, 1, -1));\n  $gutter-sum: (susy-count($columns) + $spread) * $gutters;\n  $column-sum: is-symmetrical($columns);\n\n  @if not($column-sum) {\n    @each $column in $columns {\n      $column-sum: ($column-sum or 0) + $column;\n    }\n  }\n\n  @return $column-sum + $gutter-sum;\n}\n\n\n// Susy Slice\n// ----------\n// Return a subset of columns at a given location.\n// - $span        : <number>\n// - $location    : <number>\n// - [$columns]   : <number> | <list>\n@function susy-slice(\n  $span,\n  $location,\n  $columns: susy-get(columns)\n) {\n  $columns: valid-columns($columns);\n  $sub-columns: $span;\n\n  @if not(is-symmetrical($columns)) {\n    $location: $location or 1;\n    $sub-columns: ();\n    @for $i from $location to ($location + $span) {\n      $sub-columns: append($sub-columns, nth($columns, $i));\n    }\n  }\n\n  @return $sub-columns;\n}\n\n\n// Susy\n// ----\n// Find the sum of a column-span.\n// - $span        : <number>\n// - $location    : <number>\n// - [$columns]   : <number> | <list>\n// - [$gutters]   : <ratio>\n// - [$spread]    : false/narrow | wide | wider\n@function susy(\n  $span,\n  $location     : false,\n  $columns      : susy-get(columns),\n  $gutters      : susy-get(gutters),\n  $spread       : false\n) {\n  $columns: valid-columns($columns);\n  $gutters: valid-gutters($gutters);\n  $span: susy-slice($span, $location, $columns);\n\n  @return susy-sum($span, $gutters, $spread);\n}\n\n\n/* scss-combine:../output/float */\n// Float API\n// =========\n\n/* scss-combine:shared */\n// Shared API\n// ==========\n\n/* scss-combine:support */\n// Susy Browser Support\n// ====================\n\n/* scss-combine:support/support */\n// Browser Support\n// ===============\n\n// Susy Support Defaults\n// ---------------------\n@include susy-defaults((\n  use-custom: (\n    clearfix: false,\n    background-image: true,\n    background-options: false,\n    breakpoint: true,\n    box-sizing: true,\n    rem: true,\n  ),\n));\n\n\n// Susy Support [mixin]\n// --------------------\n// Send property-value pairs to the proper support modules.\n// - $prop  : <css property>\n// - $val   : <css value>\n@mixin susy-support(\n  $prop,\n  $val\n) {\n  // Background Support\n  @if $prop == background-image {\n    @include susy-background-image($val);\n  } @else if $prop == background-size {\n    @include susy-background-size($val);\n  } @else if $prop == background-origin {\n    @include susy-background-origin($val);\n  } @else if $prop == background-clip {\n    @include susy-background-clip($val);\n  }\n\n  // Box-Sizing Support\n  @else if $prop == box-sizing {\n    @include susy-box-sizing($val);\n  }\n\n  // Rem Support\n  @else {\n    @include susy-rem($prop, $val);\n  }\n}\n\n\n// Susy Support [function]\n// -----------------------\n// Check for support of a feature.\n// - $feature       : <string>\n//                    - e.g \"rem\" or \"box-sizing\"\n// - $requirements  : <map>\n//                    - e.g (variable: rem-with-px-fallback, mixin: rem)\n// - $warn          : <bool>\n@function susy-support(\n  $feature,\n  $requirements: (),\n  $warn: true\n) {\n  $_support: susy-get(use-custom $feature);\n\n  @if $_support {\n    $_fail: false;\n\n    @each $_type, $_req in $requirements {\n      @each $_i in $_req {\n        $_pass: call(unquote(\"#{$_type}-exists\"), $_i);\n\n        @if not($_pass) {\n          $_fail: true;\n          @if $warn {\n            @warn \"You requested custom support of #{$feature}, but the #{$_i} #{$_type} is not available.\";\n          }\n        }\n      }\n    }\n\n    $_support: if($_fail, false, $_support);\n  }\n\n  @return $_support;\n}\n\n/* scss-combine:support/prefix */\n// Susy Prefix\n// ===========\n\n// Prefix\n// ------\n// Output simple prefixed properties.\n// - $prop      : <css property>\n// - $val       : <css value>\n// - [$prefix]  : <browser prefix list>\n@mixin susy-prefix(\n  $prop,\n  $val,\n  $prefix: official\n) {\n  @each $fix in $prefix {\n    $fix: if($fix == official or not($fix), $prop, '-#{$fix}-#{$prop}');\n    @include susy-rem($fix, $val);\n  }\n}\n\n/* scss-combine:support/background */\n// Background Properties\n// =====================\n\n// Susy Background Image\n// ---------------------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $image: <background-image>\n@mixin susy-background-image(\n  $image\n) {\n  @if susy-support(background-image, (mixin: background-image), $warn: false) {\n    @include background-image($image...);\n  } @else {\n    background-image: $image;\n  }\n}\n\n// Susy Background Size\n// ---------------------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $image: <background-size>\n@mixin susy-background-size(\n  $size\n) {\n  @if susy-support(background-options, (mixin: background-size)) {\n    @include background-size($size);\n  } @else {\n    background-size: $size;\n  }\n}\n\n// Susy Background Origin\n// ----------------------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $image: <background-origin>\n@mixin susy-background-origin(\n  $origin\n) {\n  @if susy-support(background-options, (mixin: background-origin)) {\n    @include background-origin($origin);\n  } @else {\n    background-origin: $origin;\n  }\n}\n\n// Susy Background Clip\n// --------------------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $image: <background-clip>\n@mixin susy-background-clip(\n  $clip\n) {\n  @if susy-support(background-options, (mixin: background-clip)) {\n    @include background-clip($clip);\n  } @else {\n    background-clip: $clip;\n  }\n}\n\n/* scss-combine:support/box-sizing */\n// Box Sizing\n// ==========\n\n// Box Sizing\n// ----------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $model: <box-sizing>\n@mixin susy-box-sizing(\n  $model: content-box\n) {\n  @if $model {\n    @if susy-support(box-sizing, (mixin: box-sizing), $warn: false) {\n      @include box-sizing($model);\n    } @else {\n      $prefix: (moz, webkit, official);\n      @include susy-prefix(box-sizing, $model, $prefix);\n    }\n  }\n}\n\n/* scss-combine:support/rem */\n// rem Support\n// ===========\n\n// rem\n// ---\n// Check for an existing support mixin, or output directly.\n// - $prop  : <css property>\n// - $val   : <css value>\n@mixin susy-rem(\n  $prop,\n  $val\n) {\n  $_reqs: (\n    variable: rhythm-unit rem-with-px-fallback,\n    mixin: rem,\n  );\n  @if susy-support(rem, $_reqs, $warn: false) and $rhythm-unit == rem {\n    @include rem($prop, $val);\n  } @else {\n    #{$prop}: $val;\n  }\n}\n\n/* scss-combine:support/clearfix */\n// Susy Fallback Clearfix\n// ======================\n\n\n// Clearfix\n// --------\n// Check for an existing support mixin, or provide a simple fallback.\n@mixin susy-clearfix {\n  @if susy-support(clearfix, (mixin: clearfix)) {\n    @include clearfix;\n  } @else {\n    &:after {\n      content: \" \";\n      display: block;\n      clear: both;\n    }\n  }\n}\n\n\n\n/* scss-combine:shared/inspect */\n// Debugging\n// =========\n\n// Susy Inspect\n// ------------\n// Output arguments passed to a inspect.\n// - $mixin  : <susy mixin>\n// - $inspec   : <mixin arguments>\n\n@mixin susy-inspect(\n  $mixin,\n  $inspect\n) {\n  $show: false;\n\n  @each $item in $inspect {\n    @if index($item, inspect) {\n      $show: true;\n    }\n  }\n\n  @if $show or susy-get(debug inspect) {\n    -susy-#{$mixin}: inspect($inspect);\n  }\n}\n\n/* scss-combine:shared/output */\n// Output\n// ======\n\n// Output\n// ------\n// Output CSS with proper browser support.\n// - $styles  : <map of css property-value pairs>\n@mixin output(\n  $styles\n) {\n  @each $prop, $val in $styles {\n    @include susy-support($prop, $val);\n  }\n}\n\n/* scss-combine:shared/direction */\n// Direction Helpers\n// =================\n\n// Susy Flow Defaults\n// ------------------\n// - PRIVATE\n@include susy-defaults((\n  flow: ltr,\n));\n\n// Get Direction\n// -------------\n// Return the 'from' or 'to' direction of a ltr or rtl flow.\n// - [$flow]  : ltr | rtl\n// - [$key]   : from | to\n@function get-direction(\n  $flow: map-get($susy-defaults, flow),\n  $key: from\n) {\n  $return: if($flow == rtl, (from: right, to: left), (from: left, to: right));\n  @return map-get($return, $key);\n}\n\n// To\n// --\n// Return the 'to' direction of a flow\n// - [$flow]  : ltr | rtl\n@function to(\n  $flow: map-get($susy-defaults, flow)\n) {\n  @return get-direction($flow, to);\n}\n\n// From\n// ----\n// Return the 'from' direction of a flow\n// - [$flow]  : ltr | rtl\n@function from(\n  $flow: map-get($susy-defaults, flow)\n) {\n  @return get-direction($flow, from);\n}\n\n/* scss-combine:shared/background */\n// Grid Background API\n// ===================\n// - Sub-pixel rounding can lead to several pixels variation between browsers.\n\n// Grid Background Output\n// ----------------------\n// - $image: background-image\n// - $size: background-size\n// - $clip: background-clip\n// - [$flow]: ltr | rtl\n@mixin background-grid-output (\n  $image,\n  $size: null,\n  $clip: null,\n  $flow: map-get($susy-defaults, flow)\n) {\n  $output: (\n    background-image: $image,\n    background-size: $size,\n    background-origin: $clip,\n    background-clip: $clip,\n    background-position: from($flow) top,\n  );\n\n  @include output($output);\n}\n\n/* scss-combine:shared/container */\n// Shared Container API\n// ====================\n\n// Container Output\n// ----------------\n// - [$width]         : <length>\n// - [$justify]       : left | center | right\n// - [$math]          : fluid | static\n@mixin container-output(\n  $width,\n  $justify: auto auto,\n  $property: max-width\n) {\n  $output: (\n    #{$property}: $width or 100%,\n    margin-left: nth($justify, 1),\n    margin-right: nth($justify, 2),\n  );\n\n  @include output($output);\n}\n\n/* scss-combine:shared/margins */\n// Margins API\n// ===========\n\n// Margin Output\n// -------------\n// - $before  : <length>\n// - $after   : <length>\n// - [$flow]  : ltr | rtl\n@mixin margin-output(\n  $before,\n  $after,\n  $flow: map-get($susy-defaults, flow)\n) {\n  $to: to($flow);\n  $from: from($flow);\n\n  $output: (\n    margin-#{$from}: $before,\n    margin-#{$to}: $after,\n  );\n\n  @include output($output);\n}\n\n/* scss-combine:shared/padding */\n// Padding API\n// ===========\n\n// Padding Output\n// --------------\n// - $before  : <length>\n// - $after   : <length>\n// - [$flow]  : ltr | rtl\n@mixin padding-output(\n  $before,\n  $after,\n  $flow: map-get($susy-defaults, flow)\n) {\n  $to: to($flow);\n  $from: from($flow);\n\n  $output: (\n    padding-#{$from}: $before,\n    padding-#{$to}: $after,\n  );\n\n  @include output($output);\n}\n\n\n\n\n\n\n/* scss-combine:float/container */\n// Float Container API\n// ===================\n\n// Float Container\n// ---------------\n// - [$width]         : <length>\n// - [$justify]       : left | center | right\n// - [$math]   : fluid | static\n@mixin float-container(\n  $width,\n  $justify: auto auto,\n  $property: max-width\n) {\n  @include susy-clearfix;\n  @include container-output($width, $justify, $property);\n}\n\n/* scss-combine:float/span */\n// Float Span API\n// ==============\n\n// Float Span Output\n// -----------------\n// - $width             : <length>\n// - [$float]           : from | to\n// - [$margin-before]   : <length>\n// - [$margin-after]    : <length>\n// - [$padding-before]  : <length>\n// - [$padding-after]   : <length>\n// - [$flow]            : ltr | rtl\n@mixin float-span-output(\n  $width,\n  $float            : from,\n  $margin-before    : null,\n  $margin-after     : null,\n  $padding-before   : null,\n  $padding-after    : null,\n  $flow             : map-get($susy-defaults, flow)\n) {\n  $to     : to($flow);\n  $from   : from($flow);\n\n  $output: (\n    width: $width,\n    float: if($float == to, $to, null) or if($float == from, $from, null),\n    margin-#{$from}: $margin-before,\n    margin-#{$to}: $margin-after,\n    padding-#{$from}: $padding-before,\n    padding-#{$to}: $padding-after,\n  );\n\n  @include output($output);\n}\n\n/* scss-combine:float/end */\n// Float Ends API\n// ==============\n\n// Susy End Defaults\n// -----------------\n// - PRIVATE\n@include susy-defaults((\n  last-flow: to,\n));\n\n// Float Last\n// ----------\n// - [$flow]  : ltr | rtl\n@mixin float-last(\n  $flow: map-get($susy-defaults, flow),\n  $last-flow: map-get($susy-defaults, last-flow),\n  $margin: 0\n) {\n  $to: to($flow);\n\n  $output: (\n    float: if($last-flow == to, $to, null),\n    margin-#{$to}: $margin,\n  );\n\n  @include output($output);\n}\n\n// Float First\n// -----------\n// - [$flow]  : ltr | rtl\n@mixin float-first(\n  $flow: map-get($susy-defaults, flow)\n) {\n  $output: (\n    margin-#{from($flow)}: 0,\n  );\n\n  @include output($output);\n}\n\n/* scss-combine:float/isolate */\n// Float Isolation API\n// ===================\n\n// Isolate Output\n// --------------\n// - $push    : <length>\n// - [$flow]  : ltr | rtl\n@mixin isolate-output(\n  $push,\n  $flow: map-get($susy-defaults, flow)\n) {\n  $to: to($flow);\n  $from: from($flow);\n\n  $output: (\n    float: $from,\n    margin-#{$from}: $push,\n    margin-#{$to}: -100%,\n  );\n\n  @include output($output);\n}\n\n\n\n/* scss-combine:susy/settings */\n// Susy Settings\n// =============\n\n// Susy Language Defaults\n// ----------------------\n// - PRIVATE\n@include susy-defaults((\n  container: auto,\n  math: fluid,\n  output: float,\n  container-position: center,\n  gutter-position: after,\n  global-box-sizing: content-box,\n  debug: (\n    image: hide,\n    color: rgba(#66f, .25),\n    output: background,\n    toggle: top right,\n  ),\n));\n\n\n// Valid Keyword Values\n// --------------------\n// - PRIVATE: DONT'T TOUCH\n$susy-keywords: (\n  container: auto,\n  math: static fluid,\n  output: isolate float,\n  container-position: left center right,\n  flow: ltr rtl,\n  gutter-position: before after split inside inside-static,\n  box-sizing: border-box content-box,\n  span: full,\n  edge: first alpha last omega full,\n  spread: narrow wide wider,\n  gutter-override: no-gutters no-gutter,\n  role: nest,\n  clear: break nobreak,\n  debug image: show hide show-columns show-baseline,\n  debug output: background overlay,\n);\n\n\n// Parse Susy Keywords and Maps\n// ----------------------------\n@function parse-settings(\n  $short: $susy\n) {\n  $_return: ();\n\n  @if type-of($short) == map {\n    $_return: $short;\n  } @else {\n    @each $item in $short {\n      // strings\n      @if type-of($item) == string {\n        @each $key, $value in $susy-keywords {\n          @if index($value, $item) {\n            $_key-value: append($key, $item);\n            $_return: _susy-deep-set($_return, $_key-value...);\n          }\n        }\n      // maps\n      } @else if type-of($item) == map {\n        $_return: map-merge($_return, $item);\n      }\n    }\n  }\n\n  @return $_return;\n}\n\n\n// Parse Columns & Gutters\n// -----------------------\n@function parse-layout(\n  $short\n) {\n  $_return: ();\n  $_columns: ();\n  $_gutters: null;\n\n  @if not(unitless(nth(nth($short, 1), 1))) {\n    $_gutters: nth($short, 1);\n  } @else {\n    $_columns: (columns: nth($short, 1));\n    $_gutters: if(length($short) > 1, nth($short, 2), $_gutters);\n  }\n\n  @if type-of($_gutters) == list and length($_gutters) > 0 {\n    $_gutters: (\n      gutters: nth($_gutters, 2) / nth($_gutters, 1),\n      column-width: nth($_gutters, 1),\n    );\n  } @else {\n    $_gutters: if($_gutters, (gutters: $_gutters), ());\n  }\n\n  $_return: map-merge($_return, $_columns);\n  $_return: map-merge($_return, $_gutters);\n\n  @return $_return;\n}\n\n\n// Parse Grid/Context\n// ------------------\n@function parse-grid(\n  $short: $susy\n) {\n  $_return: parse-settings($short);\n  $_layout: ();\n\n  @if type-of($short) == map {\n    $_return: $short;\n  } @else {\n    @each $item in $short {\n      // number or list\n      @if type-of($item) == number or type-of($item) == list {\n        @if type-of($item) == list or unitless($item) {\n          $_layout: append($_layout, $item);\n        } @else {\n          $_return: map-merge($_return, (container: $item));\n        }\n      }\n    }\n\n    $_layout: if(length($_layout) > 0, parse-layout($_layout), $_layout);\n  }\n\n  @return map-merge($_return, $_layout);\n}\n\n\n// Parse Span\n// ----------\n@function parse-span(\n  $short,\n  $key: span\n) {\n  $_return: ();\n\n  @if type-of($short) == map {\n    $_return: $short;\n  } @else {\n    $_at: index($short, at);\n\n    @if $_at {\n      $_loci: $_at + 1;\n      $_location: nth($short, $_loci);\n      $_return: map-merge($_return, (location: $_location));\n      $short: set-nth($short, $_at, null);\n      $short: set-nth($short, $_loci, null);\n    }\n\n    $_i: 1;\n    $_span: ();\n\n    @while $_i <= length($short) {\n      $_this: nth($short, $_i);\n\n      @if type-of($_this) == number {\n        $_span: append($_span, $_this);\n        $short: set-nth($short, $_i, null);\n      } @else if $_this == of {\n        $short: set-nth($short, $_i, null);\n        $_i: length($short) + 1;\n      }\n\n      $_i: $_i + 1;\n    }\n\n    @if length($_span) > 0 {\n      $_span: if(length($_span) == 1, nth($_span, 1), $_span);\n      $_return: map-merge($_return, ($key: $_span));\n    }\n\n    $_return: map-merge($_return, parse-grid($short));\n  }\n\n  @return $_return;\n}\n\n\n// Parse Gutters\n// -------------\n@function parse-gutters(\n  $short: $susy\n) {\n  $_gutters: parse-span($short, gutter-override);\n  $_span: susy-get(gutter-override, $_gutters);\n\n  @if $_span and not(map-get($_gutters, columns)) {\n    $_context: ();\n    $_new: ();\n\n    @each $item in $_span {\n      @if type-of($item) == number and unitless($item) {\n        $_context: append($_context, $item);\n      } @else {\n        $_new: append($_new, $item);\n      }\n    }\n\n    $_context: parse-grid($_context);\n    $_new: if(length($_new) == 0, null, $_new);\n    $_new: if(length($_new) == 1, nth($_new, 1), $_new);\n    $_new: (gutter-override: if($_new != $_span, $_new, $_span));\n\n    $_gutters: map-merge($_gutters, $_new);\n    $_gutters: map-merge($_gutters, $_context);\n  }\n\n  @return $_gutters;\n}\n\n/* scss-combine:susy/validation */\n// Validation\n// ==========\n\n\n// Validate Column Math\n// --------------------\n@function valid-column-math(\n  $math,\n  $column-width\n) {\n  @if $math == static and not($column-width) {\n    @error 'Static math requires a valid column-width setting.';\n  }\n\n  @return $column-width;\n}\n\n/* scss-combine:susy/grids */\n// Grid Syntax\n// ===========\n\n\n// Layout\n// ------\n// Set a new layout using a shorthand\n// - $layout: <settings>\n// - $clean: boolean\n@mixin layout(\n  $layout,\n  $clean: false\n) {\n  $inspect  : $layout;\n  $susy     : _get-layout($layout, $clean) !global;\n\n  @include susy-inspect(layout, $inspect);\n}\n\n\n// Use Grid\n// --------\n// Use an arbitrary layout for a section of code\n// - $layout: <settings>\n// - $clean: boolean\n@mixin with-layout(\n  $layout,\n  $clean: false\n) {\n  $inspect  : $layout;\n  $old      : $susy;\n  $susy     : _get-layout($layout, $clean) !global;\n\n  @include susy-inspect(with-layout, $inspect);\n\n  @content;\n\n  $susy: $old !global;\n}\n\n\n// Layout\n// ------\n// Return a parsed layout map based on shorthand syntax\n// - $layout: <settings>\n@function layout(\n  $layout: $susy\n) {\n  @return parse-grid($layout);\n}\n\n\n// Get Layout\n// ----------\n// Return a new layout based on current and given settings\n// - $layout: <settings>\n// - $clean: boolean\n@function _get-layout(\n  $layout,\n  $clean: false\n) {\n  $layout: layout($layout);\n  @return if($clean, $layout, _susy-deep-merge($susy, $layout));\n}\n\n/* scss-combine:susy/box-sizing */\n// Susy Box Sizing\n// =================\n\n// Global Box Sizing\n// -----------------\n// Set a box model globally on all elements.\n// - [$box]: border-box | content-box\n// - [$inherit]: true | false\n@mixin global-box-sizing(\n  $box: susy-get(global-box-sizing),\n  $inherit: false\n) {\n  $inspect: $box;\n\n  @if $inherit {\n    @at-root {\n       html { @include output((box-sizing: $box)); }\n       *, *:before, *:after { box-sizing: inherit; }\n     }\n  } @else {\n    *, *:before, *:after { @include output((box-sizing: $box)); }\n  }\n\n  @include susy-inspect(global-box-sizing, $inspect);\n  @include update-box-model($box);\n}\n\n// Border Box Sizing\n// -----------------\n// A legacy shortcut...\n// - [$inherit]: true | false\n@mixin border-box-sizing(\n  $inherit: false\n) {\n  @include global-box-sizing(border-box, $inherit);\n}\n\n// Update Box Model\n// ----------------\n// PRIVATE: Updates global box model setting\n@mixin update-box-model(\n  $box\n) {\n  @if $box != susy-get(global-box-sizing) {\n  @include susy-set(global-box-sizing, $box);\n  }\n}\n\n/* scss-combine:susy/context */\n// Context Syntax\n// ==============\n\n// Nested [function]\n// -----------------\n// Return a subset grid for nested context.\n// - $context   : <span>\n@function nested(\n  $context\n) {\n  $context    : parse-span($context);\n  $span       : susy-get(span, $context);\n  $location   : get-location($context);\n  $columns    : susy-get(columns, $context);\n\n  @return susy-slice($span, $location, $columns);\n}\n\n// Nested [mixin]\n// --------------\n// Use a subset grid for a nested context\n// - $context   : <span>\n// - @content   : <content>\n@mixin nested(\n  $context\n) {\n  $inspect  : $context;\n  $context  : parse-span($context);\n  $old      : susy-get(columns);\n  $susy     : map-merge($susy, (columns: nested($context))) !global;\n\n  @include susy-inspect(nested, $inspect);\n  @content;\n\n  $susy     : map-merge($susy, (columns: $old)) !global;\n}\n\n/* scss-combine:susy/background */\n// Background Grid Syntax\n// ======================\n\n$susy-overlay-grid-head-exists: false;\n\n\n// Show Grid/s\n// -----------\n// Show grid on any element using either background or overlay.\n// - [$grid]  : <settings>\n@mixin show-grid(\n  $grid: $susy\n) {\n  $inspect: $grid;\n  $_output: debug-get(output, $grid);\n\n  @include susy-inspect(show-grid, $inspect);\n  @if $_output == overlay and susy-get(debug image, $grid) != hide {\n    @include overlay-grid($grid);\n  } @else {\n    @include background-grid($grid);\n  }\n}\n\n@mixin show-grids(\n  $grid: $susy\n) {\n  @include show-grid($grid);\n}\n\n// Background Grid\n// ---------------\n// Show a grid background on any element.\n// - [$grid]  : <settings>\n@mixin background-grid(\n  $grid: $susy\n) {\n  $inspect  : $grid;\n  $_output  : get-background($grid);\n\n  @if length($_output) > 0 {\n    $_flow: susy-get(flow, $grid);\n\n    $_image: ();\n    @each $name, $layer in map-get($_output, image) {\n      $_direction: if($name == baseline, to bottom, to to($_flow));\n      $_image: append($_image, linear-gradient($_direction, $layer), comma);\n    }\n    $_output: map-merge($_output, (image: $_image));\n\n    @include background-grid-output($_output...);\n    @include susy-inspect(background-grid, $inspect);\n  }\n}\n\n\n// Overlay Grid\n// ------------\n// Generate an icon to trigger grid-overlays on any given elements.\n// $grids...  : <selector> [<settings>] [, <selector>]*\n@mixin overlay-grid (\n  $grid: $susy\n) {\n  @if not($susy-overlay-grid-head-exists) {\n    @at-root head { @include overlay-head($grid); }\n    @at-root head:before { @include overlay-trigger; }\n    @at-root head:hover { @include overlay-trigger-hover; }\n    $susy-overlay-grid-head-exists: true !global;\n  }\n\n  head:hover ~ &,\n  head:hover ~ body & {\n    position: relative;\n    &:before {\n      @include grid-overlay-base;\n      @include background-grid($grid);\n    }\n  }\n}\n\n\n// [Private] Overlay Trigger\n// -------------------------\n@mixin overlay-trigger {\n  content: \"|||\";\n  display: block;\n  padding: 5px 10px;\n  font: {\n    family: sans-serif;\n    size: 16px;\n    weight: bold;\n  }\n}\n\n\n// [Private] Overlay Trigger Hover\n// -------------------------------\n@mixin overlay-trigger-hover {\n  background: rgba(white, .5);\n  color: red;\n}\n\n\n// [Private] Overlay Head\n// ----------------------\n// <head> styles to create grid overlay toggle\n@mixin overlay-head (\n  $grid: $susy\n) {\n  $_toggle: debug-get(toggle, $grid);\n  $_horz: null;\n  $_vert: null;\n\n  @each $side in $_toggle {\n    $_horz: if($side == left or $side == right, $side, $_horz);\n    $_vert: if($side == top or $side == bottom, $side, $_vert);\n  }\n\n  display: block;\n  position: fixed;\n  #{$_horz}: 10px;\n  #{$_vert}: 10px;\n  z-index: 999;\n  color: #333;\n  background: rgba(white, .25);\n}\n\n\n// [Private] Grid Overlay Base\n// ---------------------------\n// Base styles for generating a grid overlay\n@mixin grid-overlay-base() {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  content: \" \";\n  z-index: 998;\n}\n\n\n// Get Symmetrical Background\n// --------------------------\n// - $grid: <map>\n@function get-background-sym(\n  $grid\n) {\n  $grid           : parse-grid($grid);\n  $_gutters       : susy-get(gutters, $grid);\n  $_column-width  : susy-get(column-width, $grid);\n  $_math          : susy-get(math, $grid);\n\n  $_color         : debug-get(color);\n  $_trans         : transparent;\n  $_light         : lighten($_color, 15%);\n\n  $_end           : 1 + $_gutters;\n  $_after         : percentage(1/$_end);\n  $_stops         : ();\n  $_size          : span(1 $grid wide);\n\n  @if is-inside($grid) {\n    $_stops: $_color, $_light;\n  } @else if is-split($grid) {\n    $_split: $_gutters/2;\n    $_before: percentage($_split/$_end);\n    $_after: percentage((1 + $_split)/$_end);\n    $_stops: $_trans $_before, $_color $_before, $_light $_after, $_trans $_after;\n  } @else {\n    $_stops: $_color, $_light $_after, $_trans $_after;\n  }\n\n  @if $_math == static {\n    $_size: valid-column-math($_math, $_column-width) * $_end;\n  }\n\n  $_output: (\n    image: (columns: $_stops),\n    size: $_size,\n  );\n\n  @return $_output;\n}\n\n\n// Get Asymmetrical Inside\n// -----------------------\n// - $grid: <settings>\n@function get-asym-inside(\n  $grid\n) {\n  $grid     : parse-grid($grid);\n  $_columns : susy-get(columns, $grid);\n\n  $_color   : debug-get(color);\n  $_light   : lighten($_color, 15%);\n  $_stops   : ();\n\n  @for $location from 1 through susy-count($_columns) {\n    $this-stop: ();\n\n    @if $location == 1 {\n      $this-stop: append($this-stop, $_color, comma);\n    } @else {\n      $start: parse-span(1 at $location $grid);\n      $start: get-isolation($start);\n      $this-stop: append($this-stop, $_color $start, comma);\n    }\n\n    @if $location == susy-count($_columns) {\n      $this-stop: append($this-stop, $_light, comma);\n    } @else {\n      $_end: parse-span(1 at ($location + 1) $grid);\n      $_end: get-isolation($_end);\n      $this-stop: append($this-stop, $_light $_end, comma);\n    }\n\n    $_stops: join($_stops, $this-stop, comma);\n  }\n\n  @return $_stops;\n}\n\n\n// Get Asymmetrical Split\n// ----------------------\n// - $grid: <settings>\n@function get-asym-split(\n  $grid\n) {\n  $grid     : parse-grid($grid);\n  $_columns : susy-get(columns, $grid);\n\n  $_color   : debug-get(color);\n  $_light   : lighten($_color, 15%);\n  $_stops   : ();\n\n  @for $location from 1 through susy-count($_columns) {\n    $this-stop: ();\n\n    $start: parse-span(1 at $location $grid);\n    $start: get-isolation($start);\n    $this-stop: append($this-stop, transparent $start, comma);\n    $this-stop: append($this-stop, $_color $start, comma);\n\n    $_end: $start + span(1 at $location $grid);\n    $this-stop: append($this-stop, $_light $_end, comma);\n    $this-stop: append($this-stop, transparent $_end, comma);\n\n    $_stops: join($_stops, $this-stop, comma);\n  }\n\n  @return $_stops;\n}\n\n\n// Get Asymmetrical Outside\n// ------------------------\n// - $grid: <settings>\n@function get-asym-outside(\n  $grid\n) {\n  $grid     : parse-grid($grid);\n  $_columns : susy-get(columns, $grid);\n\n  $_color   : debug-get(color);\n  $_light   : lighten($_color, 15%);\n  $_trans   : transparent;\n  $_stops   : ();\n\n  @for $location from 1 through susy-count($_columns) {\n    $this-stop: ();\n\n    @if $location == 1 {\n      $this-stop: append($this-stop, $_color, comma);\n    } @else {\n      $start: parse-span(1 at $location $grid);\n      $start: get-isolation($start);\n      $this-stop: append($this-stop, $_color $start, comma);\n    }\n\n    @if $location == susy-count($_columns) {\n      $this-stop: append($this-stop, $_light, comma);\n    } @else {\n      $gutter: get-span-width(first $location $grid);\n\n      $_end: parse-span(1 at ($location + 1) $grid);\n      $_end: get-isolation($_end);\n\n      $gutter: $_light $gutter, $_trans $gutter, $_trans $_end;\n      $this-stop: join($this-stop, $gutter, comma);\n    }\n\n    $_stops: join($_stops, $this-stop, comma);\n  }\n\n  @return $_stops;\n}\n\n\n// Get Asymmetrical Background\n// ---------------------------\n// - $grid: <settings>\n@function get-background-asym(\n  $grid\n) {\n  $_stops: ();\n\n  @if is-inside($grid) {\n    $_stops: get-asym-inside($grid);\n  } @else if is-split($grid) {\n    $_stops: get-asym-split($grid);\n  } @else {\n    $_stops: get-asym-outside($grid);\n  }\n\n  @return (image: (columns: $_stops));\n}\n\n\n// Get Background\n// --------------\n// - $grid: <settings>\n@function get-background(\n  $grid\n) {\n  $grid     : parse-grid($grid);\n  $_show    : susy-get(debug image, $grid);\n  $_return  : ();\n\n  @if $_show and $_show != 'hide' {\n    $_columns: susy-get(columns, $grid);\n\n    @if $_show != 'show-baseline' {\n      $_sym: is-symmetrical($_columns);\n      $_return: if($_sym, get-background-sym($grid), get-background-asym($grid));\n      $_return: map-merge($_return, (clip: content-box));\n    }\n\n    @if $_show != 'show-columns'\n      and global-variable-exists(base-line-height)\n      and type-of($base-line-height) == 'number'\n      and not unitless($base-line-height) {\n      $_color: variable-exists('grid-background-baseline-color');\n      $_color: if($_color, $grid-background-baseline-color, #000);\n\n      $_image: map-get($_return, image);\n      $_size: map-get($_return, size);\n      $_baseline: (baseline: ($_color 1px, transparent 1px));\n      $_baseline-size: 100% $base-line-height;\n\n      $_return: map-merge($_return, (\n        image: if($_image, map-merge($_image, $_baseline), $_baseline),\n        size: if($_size, ($_size, $_baseline-size), $_baseline-size),\n      ));\n\n      @if $_show == 'show' {\n        $_clip: map-get($_return, clip);\n        $_return: map-merge($_return, (clip: join($_clip, border-box, comma)));\n      }\n    } @else if $_show == 'show-baseline' {\n      @warn 'Please provide a $base-line-height with the desired height and units';\n    }\n  }\n\n  @if map-get($_return, image) {\n    $_return: map-merge($_return, (flow: susy-get(flow, $grid)));\n  }\n\n  @return $_return;\n}\n\n\n// Get Debug\n// ---------\n// Return the value of a debug setting\n// - $key: <setting>\n@function debug-get(\n  $key,\n  $grid: $susy\n) {\n  $key: join(debug, $key, space);\n  @return susy-get($key, $grid);\n}\n\n/* scss-combine:susy/container */\n// Container Syntax\n// ================\n\n// Container [mixin]\n// -----------------\n// Set a container element\n// - [$layout]  : <settings>\n@mixin container(\n  $layout: $susy\n) {\n  $inspect    : $layout;\n  $layout     : parse-grid($layout);\n\n  $_width     : get-container-width($layout);\n  $_justify   : parse-container-position(susy-get(container-position, $layout));\n  $_property  : if(susy-get(math, $layout) == static, width, max-width);\n\n  $_box       : susy-get(box-sizing, $layout);\n\n  @if $_box {\n    @include output((box-sizing: $_box));\n  }\n\n  @include susy-inspect(container, $inspect);\n  @include float-container($_width, $_justify, $_property);\n  @include show-grid($layout);\n}\n\n// Container [function]\n// --------------------\n// Return container width\n// - [$layout]  : <settings>\n@function container(\n  $layout: $susy\n) {\n  $layout: parse-grid($layout);\n  @return get-container-width($layout);\n}\n\n// Get Container Width\n// -------------------\n// Calculate the container width\n// - [$layout]: <settings>\n@function get-container-width(\n  $layout: $susy\n) {\n  $layout         : parse-grid($layout);\n  $_width         : susy-get(container, $layout);\n  $_column-width  : susy-get(column-width, $layout);\n  $_math          : susy-get(math, $layout);\n\n  @if not($_width) or $_width == auto {\n    @if valid-column-math($_math, $_column-width) {\n      $_columns   : susy-get(columns, $layout);\n      $_gutters   : susy-get(gutters, $layout);\n      $_spread    : if(is-split($layout), wide, narrow);\n      $_width     : susy-sum($_columns, $_gutters, $_spread) * $_column-width;\n    } @else {\n      $_width: 100%;\n    }\n  }\n\n  @return $_width;\n}\n\n// Parse Container Position\n// ------------------------\n// Parse the $container-position into margin values.\n// - [$justify]   : left | center | right | <length> [<length>]\n@function parse-container-position(\n  $justify: map-get($susy-defaults, container-position)\n) {\n  $_return: if($justify == left, 0, auto) if($justify == right, 0, auto);\n\n  @if not(index(left right center, $justify)) {\n    $_return: nth($justify, 1);\n    $_return: $_return if(length($justify) > 1, nth($justify, 2), $_return);\n  }\n\n  @return $_return;\n}\n\n/* scss-combine:susy/span */\n// Span Syntax\n// ===========\n\n// Span [mixin]\n// ------------\n// Set a spanning element using shorthand syntax.\n// - $span  : <span>\n@mixin span(\n  $span\n) {\n  $inspect: $span;\n  $span: parse-span($span);\n  $output: span-math($span);\n  $nesting: susy-get(span, $span);\n  $clear: susy-get(clear, $span);\n\n  $box: susy-get(box-sizing, $span);\n  $content-box: if(susy-get(global-box-sizing) != 'border-box', true, false);\n  $box: $box or if(is-inside($span) and $content-box, border-box, null);\n\n  @if $clear == break {\n    @include break;\n  } @else if $clear == nobreak {\n    @include nobreak;\n  }\n\n  @include susy-inspect(span, $inspect);\n  @include output((box-sizing: $box));\n  @include float-span-output($output...);\n\n  @if valid-columns($nesting, silent) {\n    @include nested($span) { @content; }\n  } @else {\n    @content;\n  }\n}\n\n// Span [function]\n// ---------------\n// Return the width of a span.\n// - $span  : <span>\n@function span(\n  $span\n) {\n  @return get-span-width($span);\n}\n\n// Span Math\n// ---------\n// Get all the span results.\n// - $span: <map>\n@function span-math(\n  $span\n) {\n  $nest             : if(susy-get(role, $span) == nest, true, false);\n  $split-nest       : if(is-split($span) and $nest, true, false);\n  $edge             : get-edge($span);\n  $location         : get-location($span);\n\n  $float            : from;\n  $padding-before   : null;\n  $padding-after    : null;\n  $margin-before    : null;\n  $margin-after     : null;\n\n  // calculate widths\n  $spread: index(map-values($span), spread);\n  $span: if($split-nest and not($spread), map-merge($span, (spread: wide)), $span);\n  $width: get-span-width($span);\n  $gutters: get-gutters($span);\n\n  // apply gutters\n  @if is-inside($span) {\n    @if not(susy-get(role, $span)) {\n      $padding-before: map-get($gutters, before);\n      $padding-after: map-get($gutters, after);\n    }\n  } @else {\n    @if not($split-nest) {\n      $margin-before: map-get($gutters, before);\n      $margin-after: map-get($gutters, after);\n    }\n  }\n\n  // special margin handling\n  @if susy-get(output, $span) == isolate and $location {\n    $margin-before: get-isolation($span);\n    $margin-after: -100%;\n  } @else if $edge {\n    $is-split: is-split($span);\n    $pos: susy-get(gutter-position, $span);\n\n    @if $edge == last {\n      $float: susy-get(last-flow, $span);\n    }\n\n    @if not($is-split) {\n      @if $edge == full or ($edge == first and $pos == before) {\n        $margin-before: 0;\n      }\n      @if $edge == full or ($edge == last and $pos == after) {\n        $margin-after: 0;\n      }\n    }\n\n  }\n\n  @return (\n    width           : $width,\n    float           : $float,\n    margin-before   : $margin-before,\n    margin-after    : $margin-after,\n    padding-before  : $padding-before,\n    padding-after   : $padding-after,\n    flow            : susy-get(flow, $span),\n  );\n}\n\n// Get Span Width\n// --------------\n// Return span width.\n// - $span: <map>\n@function get-span-width(\n  $span\n) {\n  $span     : parse-span($span);\n\n  $n        : susy-get(span, $span);\n  $location : get-location($span);\n  $columns  : susy-get(columns, $span);\n  $gutters  : susy-get(gutters, $span);\n  $spread   : susy-get(spread, $span);\n\n  $context  : null;\n  $span-sum : null;\n  $width    : null;\n\n  @if $n == 'full' {\n    $pos: susy-get(gutter-position, $span);\n    $role: susy-get(role, $span);\n    $n: if($pos == split and $role != nest, susy-count($columns), 100%);\n  }\n\n  @if type-of($n) != number {\n    @warn \"(#{type-of($n)}) #{$n} is not a valid span.\";\n  } @else if unitless($n) {\n    $context: susy-sum($columns, $gutters, if(is-split($span), wide, narrow));\n    $spread: if(is-inside($span), $spread or wide, $spread);\n    $span-sum: susy($n, $location, $columns, $gutters, $spread);\n\n    $_math: susy-get(math, $span);\n    $_column-width: susy-get(column-width, $span);\n    @if $_math == static {\n      $width: $span-sum * valid-column-math($_math, $_column-width);\n    } @else {\n      $width: percentage($span-sum / $context);\n    }\n  } @else {\n    $width: $n;\n  }\n\n  @return $width;\n}\n\n/* scss-combine:susy/gutters */\n// Gutter Syntax\n// =============\n\n\n// Gutters\n// -------\n// Set gutters on an element.\n// - [$span]   : <settings>\n@mixin gutters(\n  $span: $susy\n) {\n  $inspect  : $span;\n  $span     : parse-gutters($span);\n  $_gutters : get-gutters($span);\n\n  $_output: (\n    before: map-get($_gutters, before),\n    after: map-get($_gutters, after),\n    flow: susy-get(flow, $span),\n  );\n\n  @include susy-inspect(gutters, $inspect);\n\n  @if is-inside($span) {\n    @include padding-output($_output...);\n  } @else {\n    @include margin-output($_output...);\n  }\n}\n\n@mixin gutter(\n  $span: $susy\n) {\n  @include gutters($span);\n}\n\n\n// Gutter\n// ------\n// Return the width of a gutter.\n// - [$span]   : <settings>\n@function gutter(\n  $span: $susy\n) {\n  $span: parse-gutters($span);\n\n  $_gutters: get-gutters($span);\n  $_gutters: map-get($_gutters, before) or map-get($_gutters, after);\n\n  @return $_gutters;\n}\n\n@function gutters(\n  $span: $susy\n) {\n  @return gutter($span);\n}\n\n\n// Get Gutter Width\n// ----------------\n// Return gutter width.\n// - [$context]: <context>\n@function get-gutter-width(\n  $context: $susy\n) {\n  $context  : parse-gutters($context);\n\n  $_gutters : susy-get(gutters, $context);\n  $_gutter  : susy-get(gutter-override, $context);\n\n  @if $_gutters and ($_gutters > 0) and not($_gutter) {\n    $_column-width: susy-get(column-width, $context);\n    $_math: gutter-math($context);\n    @if $_math == static {\n      $_gutter: $_gutters * valid-column-math($_math, $_column-width);\n    } @else {\n      $_columns : susy-get(columns, $context);\n      $_spread  : if(is-split($context), wide, susy-get(spread, $context));\n      $_gutter  : percentage($_gutters / susy-sum($_columns, $_gutters, $_spread));\n    }\n  }\n\n  $_gutter: if($_gutter == 'no-gutters' or $_gutter == 'no-gutter', null, $_gutter);\n\n  @return $_gutter;\n}\n\n\n// Get Gutters\n// -----------\n// Return before and after gutter values.\n// - [$context]: <context>\n@function get-gutters(\n  $context: $susy\n) {\n  $context            : parse-gutters($context);\n\n  $_gutter-position   : susy-get(gutter-position, $context);\n  $_gutter            : get-gutter-width($context);\n\n  $_return            : (before: null, after: null);\n\n  @if is-split($context) and $_gutter {\n    $_gutter: $_gutter / 2;\n    $_return: map-merge($_return, (before: $_gutter, after: $_gutter));\n  } @else {\n    $_return: map-merge($_return, ($_gutter-position: $_gutter));\n  }\n\n  @return $_return;\n}\n\n\n// Is Inside\n// ---------\n// Returns true if gutters are inside.\n// $context: <context>\n@function is-inside(\n  $context\n) {\n  $_inside: inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_inside, $_gutter-position), true, false);\n}\n\n\n// Is Split\n// --------\n// Returns true if gutters are split.\n// $context: <context>\n@function is-split(\n  $context\n) {\n  $_split: split inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_split, $_gutter-position), true, false);\n}\n\n\n// Gutter Math\n// -----------\n// Return the math to use for gutter calculations\n// $context: <context>\n@function gutter-math(\n  $context: $susy\n) {\n  $_return  : susy-get(math, $context);\n  $_return  : if(susy-get(gutter-position, $context) == inside-static, static, $_return);\n\n  @return $_return;\n}\n\n/* scss-combine:susy/isolate */\n// Isolation Syntax\n// ================\n\n\n// Isolate [Mixin]\n// ---------------\n// Set isolation as an override.\n// - $location: <span>\n@mixin isolate(\n  $isolate: 1\n) {\n  $inspect: $isolate;\n\n  $output: (\n    push: isolate($isolate),\n    flow: susy-get(flow, $isolate),\n  );\n\n  @include susy-inspect(isolate, $inspect);\n  @include isolate-output($output...);\n}\n\n\n// Isolate [function]\n// ------------------\n// Return an isolation offset width.\n// - $location: <span>\n@function isolate(\n  $isolate: 1\n) {\n  $isolate: parse-span($isolate);\n  $isolation: susy-get(span, $isolate);\n\n  @if $isolation and not(get-location($isolate)) {\n    $new: (\n      span: null,\n      location: $isolation,\n    );\n    $isolate: map-merge($isolate, $new);\n  }\n\n  @return get-isolation($isolate);\n}\n\n\n// Get Isolation\n// -------------\n// Return the isolation offset width\n// - $input: <map>\n@function get-isolation(\n  $input\n) {\n  $location   : get-location($input);\n  $columns    : susy-get(columns, $input);\n  $width      : null;\n\n  @if type-of($location) == number and not(unitless($location)) {\n    $width: $location;\n  } @else if $location {\n    $push: $location - 1;\n    @if $push > 0 {\n      $push: map-merge($input, (\n        span: $push,\n        location: 1,\n        spread: wide,\n      ));\n      $width: get-span-width($push);\n    }\n  }\n\n  @if susy-get(gutter-position, $input) == split\n      and susy-get(gutters, $input) > 0 {\n    $width: if($width == null, gutters($input), $width + gutters($input));\n  }\n\n  @return $width or 0;\n}\n\n/* scss-combine:susy/gallery */\n// Gallery Syntax\n// ==============\n\n// Gallery\n// -------\n// Create an isolated gallery\n// - $span        : <span>\n// - [$selector]  : child | of-type\n@mixin gallery(\n  $span,\n  $selector: child\n) {\n  $inspect    : $span;\n  $span       : parse-span($span);\n  $span       : map-merge($span, (location: 1));\n\n  $n            : susy-get(span, $span);\n  $columns      : susy-get(columns, $span);\n  $context      : susy-count($columns);\n  $flow         : susy-get(flow, $span);\n\n  $inside       : is-inside($span);\n  $from         : from($flow);\n  $line         : floor($context / $n);\n  $symmetrical  : is-symmetrical($columns);\n\n  $output: (\n    width             : null,\n    float             : from,\n    margin-before     : null,\n    margin-after      : null,\n    padding-before    : null,\n    padding-after     : null,\n    flow              : $flow,\n  );\n\n  @if $inside {\n    $gutters: get-gutters($span);\n    $output: map-merge($output, (\n      padding-before: map-get($gutters, before),\n      padding-after: map-get($gutters, after),\n    ));\n  }\n\n  @if $symmetrical {\n    $output: map-merge($output, (width: get-span-width($span)));\n  }\n\n  $box          : susy-get(box-sizing, $span);\n  $global-box   : if(susy-get(global-box-sizing) == 'border-box', true, false);\n\n  @include susy-inspect(gallery, $inspect);\n\n  // Collective Output\n  @if $box == border-box or ($inside and not($box) and not($global-box)) {\n    @include output((box-sizing: border-box));\n  } @else if $box == content-box {\n    @include output((box-sizing: content-box));\n  }\n\n  @include float-span-output($output...);\n\n  // Individual Loop\n  @for $item from 1 through $line {\n    $nth: '#{$line}n + #{$item}';\n    &:nth-#{$selector}(#{$nth}) {\n      // Individual Prep\n      $output: (\n        width             : if($symmetrical, null, get-span-width($span)),\n        float             : null,\n        margin-before     : get-isolation($span),\n        margin-after      : -100%,\n        padding-before    : null,\n        padding-after     : null,\n        flow              : $flow,\n      );\n\n      // Individual Output\n      @include float-span-output($output...);\n\n      @if get-edge($span) == first {\n        @include break;\n        @include first($span);\n      } @else {\n        @include nobreak;\n      }\n\n      // Individual Location Increment\n      $location: get-location($span) + $n;\n      $location: if($location > $context, 1, $location);\n      $span: map-merge($span, (location: $location));\n    }\n  }\n}\n\n/* scss-combine:susy/rows */\n// Row Start & End\n// ===============\n\n// Break\n// -----\n// Apply to any element that should force a line break.\n@mixin break {\n  @include output((clear: both));\n}\n\n\n// NoBreak\n// -------\n// Cancel the break() effect, e.g. when using media queries.\n@mixin nobreak {\n  @include output((clear: none));\n}\n\n\n// Full\n// ----\n// - [$context]: <layout shorthand>\n@mixin full(\n  $context: $susy\n) {\n  $inspect : $context;\n  @include susy-inspect(full, $inspect);\n  @include span(full of parse-grid($context) break);\n}\n\n\n// First\n// -----\n// - [$context]: <settings>\n@mixin first(\n  $context: $susy\n) {\n  $inspect  : $context;\n  $context  : parse-grid($context);\n  $flow     : susy-get(flow, $context);\n\n  @include susy-inspect(first, $inspect);\n  @if not(is-split($context)) {\n    @include float-first($flow);\n  }\n}\n\n@mixin alpha(\n  $context: $susy\n) {\n  @include first($context);\n}\n\n\n// Last\n// ----\n// - [$context]: <settings>\n@mixin last(\n  $context: $susy\n) {\n  $inspect  : $context;\n  $context  : parse-grid($context);\n\n  @include susy-inspect(last, $inspect);\n\n  $output: (\n    flow: susy-get(flow, $context),\n    last-flow: susy-get(last-flow, $context),\n    margin: if(is-split($context), null, 0),\n  );\n\n  @include float-last($output...);\n}\n\n@mixin omega(\n  $context: $susy\n) {\n  @include last($context);\n}\n\n\n// Get Edge\n// --------\n// Calculate edge value based on location, if possible\n@function get-edge(\n  $span\n) {\n  $span       : parse-span($span);\n  $edge       : susy-get(edge, $span);\n\n  @if not($edge) {\n    $count: susy-count(susy-get(columns, $span));\n    $location: susy-get(location, $span);\n    $n: susy-get(span, $span);\n\n    $number: if(type-of($location) == number, true, false);\n    $index: if($number and unitless($location), true, false);\n\n    @if $n == $count {\n      $edge: full;\n    } @else if $location and $n and $index {\n      @if $location == 1 {\n        $edge: if($n == $count, full, first);\n      } @else if $location + $n - 1 == $count {\n        $edge: last;\n      }\n    }\n  }\n\n  @if $edge == alpha or $edge == omega {\n    $edge: if($edge == alpha, first, last);\n  }\n\n  @return $edge;\n}\n\n\n// Get Location\n// ------------\n// Calculate location value based on edge, if possible\n@function get-location(\n  $span\n) {\n  $span       : parse-span($span);\n  $location   : susy-get(location, $span);\n  $edge       : get-edge($span);\n  $n          : susy-get(span, $span);\n\n  @if $edge and not($location) and type-of($n) == number and unitless($n) {\n    @if $edge == first {\n      $location: 1;\n    } @else if $edge == last {\n      $location: susy-count(susy-get(columns, $span)) - $n + 1;\n    }\n  }\n\n  @return $location\n}\n\n/* scss-combine:susy/margins */\n// Margin Syntax\n// =============\n\n// Pre\n// ---\n// Add spanning-margins before an element.\n// - $span  : <span>\n@mixin pre(\n  $span\n) {\n  $inspect: $span;\n  $span   : map-merge((spread: wide), parse-span($span));\n  $flow   : susy-get(flow, $span);\n  $split  : if(susy-get(gutter-position, $span) == split, true, false);\n  $gutter : gutter($span);\n  $span   : span($span);\n  $width  : if($split and $gutter, $span + $gutter, $span);\n\n  @include susy-inspect(pre, $inspect);\n  @include margin-output($width, null, $flow);\n}\n\n// Post\n// ----\n// Add spanning-margins after an element.\n// - $span  : <span>\n@mixin post(\n  $span\n) {\n  $inspect  : $span;\n  $span     : map-merge((spread: wide), parse-span($span));\n  $flow     : susy-get(flow, $span);\n  $split    : if(susy-get(gutter-position, $span) == split, true, false);\n  $width    : if($split, span($span) + gutter($span), span($span));\n\n  @include susy-inspect(post, $inspect);\n  @include margin-output(null, $width, $flow);\n}\n\n// Push\n// ----\n// Simple synonymn for pre.\n// - $span  : <span>\n@mixin push(\n  $span\n) {\n  @include pre($span);\n}\n\n// Pull\n// ----\n// Add negative spanning-margins before an element.\n// - $span  : <span>\n@mixin pull(\n  $span\n) {\n  $inspect  : $span;\n  $span     : map-merge((spread: wide), parse-span($span));\n  $flow     : susy-get(flow, $span);\n  $split    : if(susy-get(gutter-position, $span) == split, true, false);\n  $width    : if($split, 0 - span($span) + gutter($span), 0 - span($span));\n\n  @include susy-inspect(pull, $inspect);\n  @include margin-output($width, null, $flow);\n}\n\n// Squish\n// ------\n// Add spanning-margins before and after an element.\n// - $pre     : <span>\n// - [$post]  : <span>\n@mixin squish(\n  $pre,\n  $post: false\n) {\n  $inspect      : ($pre, $post);\n  $pre          : map-merge((spread: wide), parse-span($pre));\n\n  @if $post {\n    $post: map-merge((spread: wide), parse-span($post));\n  } @else {\n    $span: susy-get(span, $pre);\n    @if length($span) > 1 {\n      $pre: map-merge($pre, (span: nth($span, 1)));\n      $post: map-merge($pre, (span: nth($span, 2)));\n    } @else {\n      $post: $pre;\n    }\n  }\n\n  @include susy-inspect(squish, $inspect);\n  @include pre($pre);\n  @include post($post);\n}\n\n/* scss-combine:susy/padding */\n// Padding Syntax\n// ==============\n\n// Prefix\n// ------\n// Add spanning-padding before an element.\n// - $span  : <span>\n@mixin prefix(\n  $span\n) {\n  $inspect  : $span;\n  $span     : map-merge((spread: wide), parse-span($span));\n  $flow     : susy-get(flow, $span);\n  $width    : span($span);\n\n  @if is-inside($span) {\n    $gutter: gutter($span);\n    $width: if($gutter and comparable($width, $gutter), $width + $gutter, $width);\n  }\n\n  @include susy-inspect(prefix, $inspect);\n  @include padding-output($width, null, $flow);\n}\n\n// Suffix\n// ------\n// Add spanning-padding after an element.\n// - $span  : <span>\n@mixin suffix(\n  $span\n) {\n  $inspect  : $span;\n  $span     : map-merge((spread: wide), parse-span($span));\n  $flow     : susy-get(flow, $span);\n  $width    : span($span);\n\n  @if is-inside($span) {\n    $gutter: gutter($span);\n    $width: if($gutter and comparable($width, $gutter), $width + $gutter, $width);\n  }\n\n  @include susy-inspect(suffix, $inspect);\n  @include padding-output(null, $width, $flow);\n}\n\n// Pad\n// ---\n// Add spanning-padding before and after an element.\n// - $pre     : <span>\n// - [$post]  : <span>\n@mixin pad(\n  $pre,\n  $post: false\n) {\n  $inspect  : ($pre, $post);\n  $pre      : map-merge((spread: wide), parse-span($pre));\n\n  @if $post {\n    $post: map-merge((spread: wide), parse-span($post));\n  } @else {\n    $span: susy-get(span, $pre);\n    @if length($span) > 1 {\n      $pre: map-merge($pre, (span: nth($span, 1)));\n      $post: map-merge($pre, (span: nth($span, 2)));\n    } @else {\n      $post: $pre;\n    }\n  }\n\n  @include susy-inspect(pad, $inspect);\n  @include prefix($pre);\n  @include suffix($post);\n\n}\n\n/* scss-combine:susy/bleed */\n// Bleed Syntax\n// ============\n\n// Bleed\n// -----\n// Add negative margins, and equal positive padding to create bleed.\n// - $bleed  : <span>\n@mixin bleed(\n  $bleed: 0 gutter()\n) {\n  $inspect  : $bleed;\n  $output   : get-bleed($bleed);\n\n  @if susy-get(global-box-sizing) != content-box {\n    $output: map-merge((box-sizing: content-box), $output);\n  }\n\n  @include susy-inspect(bleed, $inspect);\n  @include output($output);\n}\n\n\n// Bleed-x\n// -------\n// Shortcut for horizontal bleed.\n// - $bleed  : <span>\n@mixin bleed-x(\n  $bleed: gutter()\n) {\n  $bleed  : parse-span($bleed);\n  $trbl   : susy-get(span, $bleed);\n\n  @if length($trbl) == 1 {\n    $bleed: map-merge($bleed, (span: 0 nth($trbl, 1)));\n  } @else if length($trbl) == 2 {\n    $bleed: map-merge($bleed, (span: 0 nth($trbl, 2) 0 nth($trbl, 1)));\n  } @else {\n    @warn 'bleed-x only takes 2 lengths, but #{length($trbl)} were passed.';\n  }\n\n  @include bleed($bleed);\n}\n\n\n// Bleed-y\n// -------\n// Shortcut for vertical bleed.\n// - $bleed  : <span>\n@mixin bleed-y(\n  $bleed: if(function-exists(rhythm), rhythm(1), 1em)\n) {\n  $bleed  : parse-span($bleed);\n  $trbl   : susy-get(span, $bleed);\n\n  @if length($trbl) == 1 {\n    $bleed: map-merge($bleed, (span: nth($trbl, 1) 0));\n  } @else if length($trbl) == 2 {\n    $bleed: map-merge($bleed, (span: nth($trbl, 1) 0 nth($trbl, 2) 0));\n  } @else {\n    @warn 'bleed-y only takes 2 lengths, but #{length($trbl)} were passed.';\n  }\n\n  @include bleed($bleed);\n}\n\n\n// Get Bleed\n// ---------\n// Return bleed output values\n// - $bleed: <span>\n@function get-bleed(\n  $bleed\n) {\n  $bleed    : map-merge((spread: wide), parse-span($bleed));\n  $trbl     : susy-get(span, $bleed);\n  $short    : null;\n  $output   : ();\n\n  @for $i from 1 through length($trbl) {\n    $this: nth($trbl, $i);\n    $new: ();\n    $margin: null;\n    $padding: null;\n    $padding-x: null;\n\n    @if $this > 0 {\n      $this: map-merge($bleed, (span: $this));\n      $margin: span($this);\n      $padding: $margin;\n      $padding-x: $padding;\n    }\n\n    @if $margin and $margin > 0 {\n      $margin: - $margin;\n\n      @if is-inside($this) {\n        $gutter: gutter($this);\n        $join: if($gutter and comparable($padding, $gutter), true, false);\n        $padding-x: if($join and $padding > 0, $padding + $gutter, $padding);\n      }\n    }\n\n    @if $i == 1 {\n      $new: (\n        margin-top: $margin,\n        padding-top: $padding,\n        margin-right: $margin,\n        padding-right: $padding-x,\n        margin-bottom: $margin,\n        padding-bottom: $padding,\n        margin-left: $margin,\n        padding-left: $padding-x,\n      );\n    } @else if $i == 2 {\n      $new: (\n        margin-right: $margin,\n        padding-right: $padding-x,\n        margin-left: $margin,\n        padding-left: $padding-x,\n      );\n    } @else if $i == 3 {\n      $new: (\n        margin-bottom: $margin,\n        padding-bottom: $padding,\n      );\n    } @else if $i == 4 {\n      $new: (\n        margin-left: $margin,\n        padding-left: $padding-x,\n      );\n    }\n\n    $output: map-merge($output, $new);\n  }\n\n  @each $prop, $value in $output {\n    $output: if($value == 0, map-merge($output, ($prop: null)), $output);\n  }\n\n  @return bleed-shorthand($output);\n}\n\n// Bleed Shorthand\n// ---------------\n// Convert bleed output into shorthand when possible.\n// - $bleed: <output map>\n@function bleed-shorthand(\n  $bleed\n) {\n  $margin: ();\n  $padding: ();\n  $return: ();\n\n  @each $key, $value in $bleed {\n    @if str-index($key, margin) {\n      $margin: map-merge($margin, ($key: $value));\n    } @else if str-index($key, padding) > 0 {\n      $padding: map-merge($padding, ($key: $value));\n    }\n  }\n\n  $props: (\n    margin: $margin,\n    padding: $padding,\n  );\n\n  @each $name, $map in $props {\n    $four: if(length(map-keys($map)) == 4, true, false);\n    $null: if(index(map-values($map), null), true, false);\n\n    @if $four and not($null) {\n      $top: map-get($map, '#{$name}-top');\n      $right: map-get($map, '#{$name}-right');\n      $bottom: map-get($map, '#{$name}-bottom');\n      $left: map-get($map, '#{$name}-left');\n\n      $tb: if($top == $bottom, $top, null);\n      $rl: if($right == $left, $right, null);\n      $all: if($tb == $rl, $tb, null);\n\n      $new: if($all, $all, null);\n\n      @if not($new) {\n        @if $tb and $rl {\n          $new: $tb $rl;\n        } @else if $rl {\n          $new: $top $rl $bottom;\n        } @else {\n          $new: $top $right $bottom $left;\n        }\n      }\n\n      $return: map-merge($return, ($name: $new));\n    } @else {\n      $return: map-merge($return, $map);\n    }\n  }\n\n  @return $return;\n}\n\n/* scss-combine:susy/breakpoint-plugin */\n// Breakpoint Integration\n// ======================\n\n$susy-media: () !default;\n$susy-media-fallback: false !default;\n\n$_susy-media-context: ();\n\n\n// Susy Breakpoint\n// ---------------\n// Change grids at different media query breakpoints.\n// - $query     : <min-width> [<max-width>] | <property> <value> | <map>\n// - $layout    : <settings>\n// - $no-query  : <boolean> | <selector>\n@mixin susy-breakpoint(\n  $query,\n  $layout: false,\n  $no-query: $susy-media-fallback\n) {\n  @include susy-media-router($query, $no-query) {\n    @if $layout {\n      @include with-layout($layout) {\n        @content;\n      }\n    } @else {\n      @content;\n    }\n  }\n}\n\n\n// Susy Media\n// ----------\n// - $query: <min-width> [<max-width>] | <property> <value>\n// - $no-query: <boolean> | <selector>\n@mixin susy-media(\n  $query,\n  $no-query: $susy-media-fallback\n) {\n  $old-context: $_susy-media-context;\n  $name: if(map-has-key($susy-media, $query), $query, null);\n  $query: susy-get-media($query);\n  $query: susy-parse-media($query);\n\n  @include susy-media-context($query, $name);\n\n  @if $no-query and type-of($no-query) != string {\n    @content;\n  } @else {\n    @media #{susy-render-media($query)} {\n      @content;\n    }\n\n    @if type-of($no-query) == string {\n      #{$no-query} & {\n        @content;\n      }\n    }\n  }\n\n  @include susy-media-context($old-context, $clean: true);\n}\n\n\n// Media Router\n// ------------\n// Rout media arguments to the correct mixin.\n@mixin susy-media-router(\n  $query,\n  $no-query: $susy-media-fallback\n) {\n  @if susy-support(breakpoint, (mixin: breakpoint), $warn: false) {\n    @include breakpoint($query, $no-query) {\n      @content;\n    }\n  } @else {\n    @include susy-media($query, $no-query) {\n      @content;\n    }\n  }\n}\n\n\n// Update Context\n// -------------\n// Set the new media context\n@mixin susy-media-context(\n  $query,\n  $name: null,\n  $clean: false\n) {\n  $query: map-merge((name: $name), $query);\n\n  @if $clean {\n    $_susy-media-context: $query !global;\n  } @else {\n    $_susy-media-context: map-merge($_susy-media-context, $query) !global;\n  }\n}\n\n\n// Media Context\n// -------------\n// Return the full media context, or a single media property (e.g. min-width)\n@function susy-media-context(\n  $property: false\n) {\n  @if $property {\n    @return map-get($_susy-media-context, $property);\n  } @else {\n    @return $_susy-media-context;\n  }\n}\n\n\n// Get Media\n// ---------\n// Return a named media-query from $susy-media.\n// - $name: <key>\n@function susy-get-media(\n  $name\n) {\n  @if map-has-key($susy-media, $name) {\n    $map-value: map-get($susy-media, $name);\n    @if ($name == $map-value) {\n      $name: $map-value;\n    } @else {\n      $name: susy-get-media($map-value);\n    }\n  }\n\n  @return $name;\n}\n\n\n// Render Media\n// ------------\n// Build a media-query string from various media settings\n@function susy-render-media(\n  $query\n) {\n  $output: null;\n  @each $property, $value in $query {\n    $string: null;\n\n    @if $property == media {\n      $string: $value;\n    } @else {\n      $string: '(#{$property}: #{$value})';\n    }\n\n    $output: if($output, '#{$output} and #{$string}', $string);\n  }\n\n  @return $output;\n}\n\n\n// Parse Media\n// -----------\n// Return parsed media-query settings based on shorthand\n@function susy-parse-media(\n  $query\n) {\n  $mq: null;\n  @if type-of($query) == map {\n    $mq: $query;\n  } @else if type-of($query) == number {\n    $mq: (min-width: $query);\n  } @else if type-of($query) == list and length($query) == 2 {\n    @if type-of(nth($query, 1)) == number {\n      $mq: (\n        min-width: min($query...),\n        max-width: max($query...),\n      );\n    } @else {\n      $mq: (nth($query, 1): nth($query, 2));\n    }\n  } @else {\n    $mq: (media: '#{$query}');\n  }\n\n  @return $mq;\n}\n\n\n\n\n// Variables\n/* scss-combine:vars/colors */\n$white: rgb(255,255,255);\n$black: rgb(0,0,0);\n\n$body-background-color: $white;\n$shadow-color: rgba($black,0.14);\n\n$body-color: stencilColor(\"body_color\");\n$navigation-color: stencilColor(\"navigation_color\");\n$header-color: stencilColor(\"header_color\");\n\n$primary-color: stencilColor(\"primary_color\");\n\n$accent-color: stencilColor(\"accent_color\");\n$border-color: stencilColor(\"border_color\");\n\n$navigation-hover: mix($navigation-color, $accent-color, 50%);\n\n$input-background-color: stencilColor(\"input_background_color\");\n$input-color: stencilColor(\"input_color\");\n$input-border-color: stencilColor(\"input_border_color\");\n\n$page-background-color: stencilColor(\"page_background_color\");\n$banner-background-color: stencilColor(\"banner_background_color\");\n$banner-link-color: stencilColor(\"banner_link_color\");\n\n$heading-color: stencilColor(\"heading_color\");\n\n$footer-background-color: stencilColor(\"footer_background_color\");\n$footer-color: stencilColor(\"footer_color\");\n\n$section-title-color: stencilColor(\"section_title_color\");\n\n$highlight-color: stencilColor(\"highlight_color\");\n$star-color: stencilColor(\"star_color\");\n\n$primary-button-background-color: stencilColor(\"primary_button_background_color\");\n$primary-button-color: $white;\n\n$secondary-button-color: $primary-color;\n\n$disabled-button-background: darken($input-background-color, 10%);\n$disabled-button-color: lighten($input-color, 30%);\n\n$lighter-text: lighten($body-color, 6.5%);\n$lightest-text: lighten($body-color, 20%);\n\n$error-color: stencilColor(\"error_color\");\n\n$promo-color: stencilColor(\"promo_color\");\n\n$mosaic-text-color: stencilColor(\"mosaic_text_color\");\n$mosaic-button-text: stencilColor(\"mosaic_button_text\");\n$mosaic-button-background: stencilColor(\"mosaic_button_background\");\n\n$select-border-color: #e6e6e6;\n$select-border-active: darken($select-border-color, 10%);\n$check-border-color: #bbbbbb;\n\n$breadcrumb-background-color: #f8f8f8;\n\n$placeholder-image-background: lighten($black, 75%);\n\n$alert-success: #54ca83;\n$alert-error: #de5949;\n$alert-info: #a6a6a6;\n\n/* scss-combine:vars/grid */\n// Susy grid settings\n\n$susy: (\n  columns: 12,\n  gutters: 0.6,\n  math: fluid,\n  output: float,\n\n  debug: (\n    image: hide,\n    output: background,\n  ),\n);\n\n$grid-small: (\n  columns: 12,\n  gutters: 0.3,\n\n  debug: (\n    image: hide,\n    output: background,\n  ),\n);\n\n$product: (\n  columns: 16,\n  gutters: 1,\n\n  debug: (\n    image: hide,\n    output: background,\n  ),\n);\n\n$cart-preview: (\n  columns: 12,\n  gutters: 1.5,\n\n  debug: (\n    image: hide,\n    output: background,\n  ),\n);\n\n$mobile-links: (\n  columns: 3,\n  gutters: 0.03,\n  gutter-position: before,\n);\n\n/* scss-combine:vars/typography */\n$primary-font: stencilFontFamily(\"primary-font\");\n$secondary-font: stencilFontFamily(\"secondary-font\");\n$mono-font: \"Monaco\", \"Consolas\", \"Lucida Console\", monospace;\n\n$body-font: $secondary-font;\n\n$heading-font: $primary-font;\n$heading-weight: 700;\n$button-weight: 700;\n\n$main-navigation-font: if(stencilString(\"main_navigation_font\") == \"primary\", $primary-font, $secondary-font);\n$footer-navigation-font: if(stencilString(\"footer_navigation_font\") == \"primary\", $primary-font, $secondary-font);\n$price-font: if(stencilString(\"price_font\") == \"primary\", $primary-font, $secondary-font);\n$button-font: if(stencilString(\"button_font\") == \"primary\", $primary-font, $secondary-font);\n\n$navigation-text-transform: stencilString(\"navigation_text_transform\");\n\n/* scss-combine:vars/variables */\n// Z-index from http://www.smashingmagazine.com/2014/06/sassy-z-index-management-for-complex-layouts/\n\n$elements: product-item-options, product-item-quickshop, blog-image, blog-title, cart-preview, branding, compare-tab, mosaic, primary-navigation, dropdown, active-dropdown, main-header, mobile-nav-mask;\n\n// Sizes\n\n$primary-navigation-height: 80px;\n$mobile-navbar-height: 48px;\n$mobile-nav-tools-height: 45px;\n\n// Background Image\n$site-background-image: stencilString(\"site_background_image\");\n\n$footer-alt-opacity: 0.55;\n\n\n// Library\n/* scss-combine:lib/mixins */\n$max-width: 1300px;\n$font-size: 13px;\n$gutter: 15px;\n$ease-out-quad: cubic-bezier(0.250,0.460,0.450,0.940);\n\n//Breakpoints. These are the low value of the range\n\n$medium: 768px;\n$large: 992px;\n$xlarge: 1160px;\n\n@mixin breakpoint($point) {\n  @if $point == s {\n    @include media($max: $medium) { @content; }\n  }\n  @if $point == m {\n    @include media($max: $large) { @content; }\n  }\n  @if $point == m-only {\n    @include media($min: $medium, $max: $large) { @content; }\n  }\n  @if $point == m-up {\n    @include media($min: $medium) { @content; }\n  }\n  @if $point == l {\n    @include media($max: $xlarge) { @content; }\n  }\n  @if $point == l-only {\n    @include media($min: $large, $max: $xlarge) { @content; }\n  }\n  @if $point == l-up {\n    @include media($min: $large) { @content; }\n  }\n  @if $point == xl-up {\n    @include media($min: $xlarge) { @content; }\n  }\n}\n\n@mixin antialias($font-color) {\n  @if (lightness($font-color) > 50) {\n    -moz-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -o-font-smoothing: antialiased;\n    -webkit-font-smoothing: antialiased;\n  }\n}\n\n// Maintain Aspect Ratio\n@mixin maintain-ratio($ratio: 1 1) {\n  @if length($ratio) < 2 or length($ratio) > 2 {\n    @warn \"$ratio must be a list with two values.\";\n  }\n\n  $width: 100%;\n  $height: percentage(nth($ratio, 2) / nth($ratio, 1));\n\n  width: $width;\n  height: 0;\n  padding-bottom: $height;\n}\n\n/* scss-combine:lib/extends */\n%heading-text-treatment {\n  font-family: $heading-font;\n  font-weight: $heading-weight;\n  color: $heading-color;\n  line-height: 1.45;\n}\n\n%section-title-text-treatment {\n  font-family: $heading-font;\n  font-weight: $heading-weight;\n  color: $section-title-color;\n}\n\n%center {\n  text-align: center;\n}\n\n%full-width {\n  margin: ($gutter * 3) ($gutter * 2) ($gutter * 4);\n\n  @include breakpoint(m) {\n    padding-right: $gutter;\n    padding-left: $gutter;\n    margin-top: $gutter * 2;\n    margin-bottom: $gutter * 2;\n  }\n}\n\n%content-padding {\n  padding-right: $gutter * 4;\n  padding-left: $gutter * 4;\n\n  @include breakpoint(l-only) {\n    padding-right: $gutter * 2;\n    padding-left: $gutter * 2;\n  }\n\n  @include breakpoint(m) {\n    padding-right: $gutter;\n    padding-left: $gutter;\n  }\n}\n\n%background-position-svg {\n  background-position: 50% 50%;\n  background-repeat: no-repeat;\n  background-size: contain;\n}\n\n%antialiased {\n  -moz-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  -o-font-smoothing: antialiased;\n  -webkit-font-smoothing: antialiased;\n}\n\n%button-reset {\n  padding: 0;\n  background: transparent;\n  border: 0;\n  appearance: normal;\n\n  &:focus {\n    outline: none;\n  }\n}\n\n/* scss-combine:lib/functions */\n// Optimize SVG url from http://codepen.io/jakob-e/pen/doMoML\n@function svg-url($svg){\n  //  Chunk up string in order to avoid \"stack level too deep\" error\n  $encoded:'';\n  $slice: 2000;\n  $index: 0;\n  $loops: ceil(str-length($svg)/$slice);\n  @for $i from 1 through $loops {\n    $chunk: str-slice($svg, $index, $index + $slice - 1);\n    //   Encode (may need a few extra replacements)\n    $chunk: str-replace($chunk,'\"','\\'');\n    $chunk: str-replace($chunk,'<','%3C');\n    $chunk: str-replace($chunk,'>','%3E');\n    $chunk: str-replace($chunk,'&','%26');\n    $chunk: str-replace($chunk,'#','%23');\n    $encoded: #{$encoded}#{$chunk};\n    $index: $index + $slice;\n  }\n  @return url(\"data:image/svg+xml;charset=utf8,#{$encoded}\");\n}\n\n//  Helper function to replace characters in a string\n@function str-replace($string, $search, $replace: '') {\n  $index: str-index($string, $search);\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n  }\n  @return $string;\n}\n\n/* scss-combine:lib/icons */\n// todo: try to use sprites instead. convert to @extends where possible.\n\n// SVGs\n@mixin svg-background($size:\"\") {\n  @extend %background-position-svg;\n\n  @if $size != \"\" {\n    //scss-lint:disable ImportantRule\n    background-size: $size !important;\n  }\n\n  display: inline-block;\n  content: \"\";\n}\n\n@mixin icon-arrow-down($fill-color, $size:\"\") {\n  @include svg-background($size);\n  background-image: svg-url('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path fill=\"#{$fill-color}\" d=\"M0.867 4.911l12.133 16.178 12.133-16.178h-24.267z\"></path></svg>');\n}\n\n@mixin icon-chevron-left($fill-color, $size:\"\") {\n  @include svg-background($size);\n  background-image: svg-url('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path fill=\"#{$fill-color}\" d=\"M19.985 23.010l-11-11v1.98l11-11-1.98-1.98-11.99 11.99 11.99 11.99 1.98-1.98z\"></path></svg>');\n}\n\n@mixin icon-chevron-right($fill-color, $size:\"\") {\n  @include svg-background($size);\n  background-image: svg-url('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path fill=\"#{$fill-color}\" d=\"M7.995 24.99l11.99-11.99-11.99-11.99-1.98 1.98 11 11v-1.98l-11 11 1.98 1.98z\"></path></svg>');\n}\n\n@mixin button-bg() {\n  background-image: svg-url('<svg version=\"1.1\" preserveAspectRatio=\"none\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 40 40\"><polygon fill=\"#{rgba($black, 0.15)}\" points=\"0,36 40,4 40,40 0,40 \"/></svg>');\n  background-repeat: no-repeat;\n  background-size: 100%;\n}\n\n@mixin checkbox-unchecked($fill-color: $check-border-color, $size:\"\") {\n  @include svg-background($size);\n  background-image: svg-url('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path fill=\"#{$fill-color}\" d=\"M2.364 4.721v0 16.557c0 1.303 1.056 2.358 2.358 2.358h16.557c1.303 0 2.358-1.056 2.358-2.358v-16.557c0-1.303-1.056-2.358-2.358-2.358h-16.557c-1.303 0-2.358 1.056-2.358 2.358v0zM0 4.721v0c0-2.608 2.113-4.721 4.721-4.721h16.557c2.608 0 4.721 2.113 4.721 4.721v16.557c0 2.608-2.113 4.721-4.721 4.721h-16.557c-2.608 0-4.721-2.113-4.721-4.721v-16.557z\"></path></svg>');\n}\n\n@mixin checkbox-checked($fill-color: $primary-color, $size:\"\") {\n  @include svg-background($size);\n  background-image: svg-url('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path fill=\"#{$fill-color}\" d=\"M0 4.721v0c0-2.608 2.113-4.721 4.721-4.721h16.557c2.608 0 4.721 2.113 4.721 4.721v16.557c0 2.608-2.113 4.721-4.721 4.721h-16.557c-2.608 0-4.721-2.113-4.721-4.721v-16.557z\"></path><path fill=\"rgb(255, 255, 255)\" d=\"M18.864 7.039v0l1.618 1.472-9.403 10.459-5.462-5.462 2.056-2.068 3.828 3.828-1.028 0.027 7.865-8.736 0.527 0.48z\"></path></svg>');\n}\n\n@mixin radio-unchecked($fill-color: $check-border-color, $size:\"\") {\n  @include svg-background($size);\n  background-image: svg-url('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"> <path fill=\"#{$fill-color}\" d=\"M1.857 13v0 0c0 6.142 4.989 11.143 11.143 11.143v0c6.142 0 11.143-4.989 11.143-11.143v0c0-6.142-4.989-11.143-11.143-11.143v0c-6.142 0-11.143 4.989-11.143 11.143v0zM0 13v0c0-7.176 5.829-13 13-13 7.176 0 13 5.829 13 13 0 7.176-5.829 13-13 13-7.176 0-13-5.829-13-13v0z\"></path></svg>');\n}\n\n@mixin radio-checked($fill-color: $primary-color, $size:\"\") {\n  @include svg-background($size);\n  background-image: svg-url('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path fill=\"#{$check-border-color}\" d=\"M1.857 13v0 0c0 6.142 4.989 11.143 11.143 11.143v0c6.142 0 11.143-4.989 11.143-11.143v0c0-6.142-4.989-11.143-11.143-11.143v0c-6.142 0-11.143 4.989-11.143 11.143v0zM0 13v0c0-7.176 5.829-13 13-13 7.176 0 13 5.829 13 13 0 7.176-5.829 13-13 13-7.176 0-13-5.829-13-13v0z\"></path><path fill=\"#{$fill-color}\" d=\"M13 5.571c4.103 0 7.429 3.326 7.429 7.429s-3.326 7.429-7.429 7.429c-4.103 0-7.429-3.326-7.429-7.429s3.326-7.429 7.429-7.429z\"></path></svg>');\n}\n\n@mixin alert-success($fill-color: $white, $size:\"\") {\n  @include svg-background($size);\n  background-image: svg-url('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path fill=\"#{$fill-color}\" d=\"M13 26c7.18 0 13-5.82 13-13s-5.82-13-13-13c-7.18 0-13 5.82-13 13s5.82 13 13 13zM19.161 6.801l1.502 1.367-10.158 11.298-5.578-5.579 1.675-1.684 0.23 0.23 3.592 3.585 8.496-9.437 0.242 0.22z\"></path></svg>');\n}\n\n@mixin alert-info($fill-color: $white, $size:\"\") {\n  @include svg-background($size);\n  background-image: svg-url('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path fill=\"#{$fill-color}\" d=\"M13 26c-7.18 0-13-5.82-13-13s5.82-13 13-13c7.18 0 13 5.82 13 13s-5.82 13-13 13zM14.332 20.185v-9.788h-2.644v9.788h2.644zM14.352 8.806v-2.644h-2.644v2.644h2.644z\"></path></svg>');\n}\n\n@mixin alert-error($fill-color: $white, $size:\"\") {\n  @include svg-background($size);\n  background-image: svg-url('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path fill=\"#{$fill-color}\" d=\"M13 26c-7.18 0-13-5.82-13-13s5.82-13 13-13c7.18 0 13 5.82 13 13s-5.82 13-13 13zM13 14.481l5.403 5.405 1.479-1.479-5.403-5.405 5.403-5.405-1.479-1.479-5.403 5.405-5.403-5.405-1.479 1.479 5.403 5.405-5.403 5.405 1.479 1.479 5.403-5.405z\"></path></svg>');\n}\n\n\n// Module Dependencies\n/* scss-combine:../../node_modules/bc-modal/dist/scss/modal */\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 980;\n  background-color: rgba(#000, 0.3);\n  display: none;\n  opacity: 0;\n\n  &.animating,\n  &.visible {\n    display: block;\n    transition: opacity 0.3s ease;\n  }\n\n  &.visible {\n    opacity: 1;\n  }\n}\n\n.modal-wrapper {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1000;\n  display: none;\n  overflow: hidden;\n  -webkit-overflow-scrolling: touch;\n  outline: 0;\n  opacity: 0;\n\n  &.animating,\n  &.visible {\n    display: block;\n    transition: opacity 0.2s ease;\n  }\n\n  &.animating-in {\n    transition-delay: 0.1s;\n  }\n\n  &.visible {\n    overflow-x: hidden;\n    overflow-y: auto;\n    opacity: 1;\n  }\n}\n\n.modal {\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n\n// Core\n/* scss-combine:core/unavailable */\n.unavailable-container {\n  display: table;\n  text-align: center;\n  width: 100%;\n  height: 100vh;\n  font-size: 14px;\n\n  @media (min-width: 400px) {\n    font-size: 16px;\n  }\n}\n\n.unavailable-container-inner {\n  display: table-cell;\n  padding: 20px;\n  vertical-align: middle;\n}\n\n.unavailable-logo {\n  margin-top: 0;\n}\n\n.unavailable-heading {\n  font-size: 1.5em; // 24px desktop\n}\n\n.unavailable-message {\n  max-width: 400px;\n  margin: 0 auto;\n  font-size: 0.875em; // 14px desktop\n}\n\n\n// General\n/* scss-combine:general/fonts */\n\n@font-face {\n  font-family: \"Social Icons\";\n  src: url(\"/assets/pixelunionsocialicons-regular.eot\");\n  src: url(\"/assets/pixelunionsocialicons-regular.eot?#iefix\") format(\"embedded-opentype\"),\n       url(\"/assets/pixelunionsocialicons-regular.woff\") format(\"woff\");\n  font-weight: normal;\n  font-style: normal;\n}\n\n/* scss-combine:general/general */\n/* General */\n\nbody {\n  font-family: $body-font;\n  font-size: $font-size;\n  line-height: 1.666;\n  color: $body-color;\n  content: \"mobile\";\n\n  @include breakpoint(m-up) {\n    content: \"desktop\";\n  }\n}\n\n/* Links */\n\na {\n  color: $accent-color;\n  transition: color 0.2s $ease-out-quad;\n\n  &:hover {\n    @include hover($accent-color);\n  }\n}\n\n/* Headers */\n\nh1, h2, h3, h4, h5, h6 {\n  @extend %heading-text-treatment;\n}\n\nh1 { font-size: 36px; }\nh2 { font-size: 28px; }\nh3 { font-size: 20px; }\nh4 { font-size: 18px; }\nh5 { font-size: 14px; }\nh6 { font-size: 14px; }\n\n.page-heading {\n  @extend %heading-text-treatment, %center, %full-width;\n  font-size: 20px;\n}\n\n.section-title {\n  @extend %section-title-text-treatment, %center;\n  margin-top: 0;\n  font-size: 20px;\n}\n\n/* Basic elements */\n\nhr {\n  background: $border-color;\n}\n\ncite {\n  color: $accent-color;\n}\n\nimg {\n  height: auto;\n  max-width: 100%;\n}\n\n.main-content {\n  @extend %clearfix;\n  border-top: 1px solid $border-color;\n}\n\n// ---------------------------------------------------------------- */\n// Hiding and Showing Content\n// Snippets borrowed from a11yproject:\n// http://a11yproject.com/posts/how-to-hide-content/\n\n%visually-hidden,\n.visually-hidden {\n  // scss-lint:disable ImportantRule\n  position: absolute !important;\n  width: 1px !important;\n  height: 1px !important;\n  padding: 0 !important;\n  overflow: hidden;\n  clip: rect(1px, 1px, 1px, 1px);\n  border: 0 !important;\n}\n\nbody:hover .visually-hidden a,\nbody:hover .visually-hidden input,\nbody:hover .visually-hidden button {\n  // scss-lint:disable ImportantRule\n  display: none !important;\n}\n\n.hidden {\n  display: none;\n  visibility: hidden;\n}\n\n.visible { display: block; }\n\n// ---------------------------------------------------------------- */\n\n/* Scroll Locking */\n\n.scroll-locked {\n  overflow-y: hidden;\n}\n\n.scroll-locked-medium {\n  @include breakpoint(m) {\n    overflow-y: hidden;\n  }\n}\n\n.show-for-sr {\n  @extend %visually-hidden;\n}\n\n.disabled {\n  // scss-lint:disable ImportantRule\n  cursor: not-allowed !important;\n}\n\n/* scss-combine:general/button */\n.button {\n  min-width: 140px;\n  padding: 12px 30px;\n  font-family: $button-font;\n  font-size: 13px;\n  font-weight: $button-weight;\n  letter-spacing: 0.05em;\n  color: $white;\n  text-align: center;\n  text-transform: uppercase;\n  border: 1px solid;\n  // Todo: add theme setting for border-radius on buttons and inputs\n  border-radius: 3px;\n  transition: all 0.2s $ease-out-quad;\n\n  &.button-primary {\n    @include button-bg();\n    color: $white;\n    background-color: $primary-button-background-color;\n    border-color: darken($primary-button-background-color, 5%);\n\n    &:hover {\n      @include button-hover($primary-button-background-color, background-color);\n      color: $primary-button-color;\n    }\n  }\n\n  &.button-secondary {\n    color: $secondary-button-color;\n    background-color: $white;\n    border-color: $secondary-button-color;\n\n    &:hover {\n      color: $secondary-button-color;\n      background-color: mix($secondary-button-color, $white, 10%);\n    }\n  }\n\n  &.button-tertiary {\n    font-weight: normal;\n    letter-spacing: 0;\n    color: $primary-button-background-color;\n    text-transform: none;\n    background-color: $white;\n    border-color: $white;\n\n    &:hover {\n      color: $secondary-button-color;\n      background-color: $white;\n    }\n  }\n\n  &.button-small {\n    min-width: 100px;\n    padding: 8px 10px;\n    font-size: 11px;\n    font-weight: normal;\n  }\n\n  &.button-disabled {\n    color: $disabled-button-color;\n    cursor: not-allowed;\n    background: $disabled-button-background;\n    border-color: $disabled-button-background;\n\n    &:hover {\n      background-color: darken($disabled-button-background, 10%);\n    }\n  }\n\n  & + & {\n    margin-left: 11px;\n  }\n}\n\n/* scss-combine:general/form */\n.option-unavailable {\n  opacity: 0.5;\n\n  .form-label-text { text-decoration: line-through; }\n}\n\n.form-input {\n  display: block;\n  width: 100%;\n  padding: 10px 15px;\n  color: $input-color;\n  background: $input-background-color;\n  border-color: $input-border-color;\n  border-radius: 3px;\n\n  &::placeholder {\n    //scss-lint:disable VariableForProperty\n    color: lighten($input-color, 20%);\n  }\n\n  &:focus {\n    outline: none;\n  }\n}\n\n// -------------------------- Form Errors -------------------------- //\n// Default error classes, as dictated by validetta.js\n\n.form-inline-message {\n  display: block;\n\n  .form-field-invalid & {\n    color: $error-color;\n  }\n}\n\n// ---------------------------------------------------------------- //\n// Select Wrappers - Provides some additional style control for select elements\n\n.form-select-wrapper {\n  position: relative;\n  display: block;\n  min-height: 40px;\n  padding: 8px ($gutter * 2) 8px $gutter;\n  font-family: $primary-font;\n  font-size: 14px;\n  line-height: 1.6;\n  color: $input-color;\n  cursor: pointer;\n  background-color: $white;\n  border: 1px solid $select-border-color;\n  border-radius: 3px;\n\n  &:after {\n    @include icon-arrow-down($body-color);\n    position: absolute;\n    top: 50%;\n    right: $gutter;\n    width: 7px;\n    height: 7px;\n    transform: translateY(-50%);\n  }\n\n  &.is-focused { border-color: $select-border-active; }\n\n  .form & {\n    font-family: $secondary-font;\n  }\n\n  select {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 2;\n    width: 100%; // needed for Firefox\n    height: 100%; // needed for IE\n    cursor: pointer;\n    opacity: 0;\n    appearance: none;\n  }\n}\n\n.form-selected-text-prefix {\n  margin-right: 5px;\n  font-weight: bold;\n}\n\n// ---------------------------------------------------------------- //\n// Common Form Classes:\n\n// Wraps each field component\n.form-field {\n  margin-bottom: $gutter * 1.5;\n}\n\n// Form label - applied to the label itself. Prefer to style off titles.\n.form-label {}\n\n// Applied to labels that are used as option titles\n.form-field-title {\n  @extend %section-title-text-treatment;\n  display: block;\n  margin-bottom: 5px;\n}\n\n.product-option-title {}\n.form-option-title {}\n\n// Applied to labels used as option text (radios/checkboxes)\n.form-label-text { user-select: none; }\n.product-option-text { user-select: none; }\n.form-option-text { user-select: none; }\n\n// inline inputs\n.form-field-product-list,\n.form-field-checkbox,\n.form-field-radio {\n  .form-field-control {\n    display: inline-block;\n  }\n\n  .form-input {\n    display: inline-block;\n    width: auto;\n  }\n\n  .form-radio,\n  .form-checkbox {\n    @extend %visually-hidden;\n\n    + .form-label-text:before {\n      position: relative;\n      top: 1px;\n      width: 12px;\n      height: 12px;\n      margin-right: 12px;\n      cursor: pointer;\n    }\n  }\n\n  .form-radio {\n    + .form-label-text:before {\n      @include radio-unchecked();\n    }\n\n    &:checked + .form-label-text:before {\n      @include radio-checked();\n    }\n  }\n\n  .form-checkbox {\n    + .form-label-text:before {\n      @include checkbox-unchecked();\n    }\n\n    &:checked + .form-label-text:before {\n      @include checkbox-checked();\n    }\n  }\n}\n\n// Required form element display 'required' text next title\n.required-text {\n  font-size: 0;\n  color: $white;\n\n  &:before {\n    margin-left: -2px;\n    font-size: $font-size;\n    font-weight: bold;\n    color: $highlight-color;\n    content: \"*\";\n  }\n}\n\n\n// ---------------------------------------------------------------- */\n// Swatch: Set of options displaying color / pattern choices\n\n.swatch-value {\n  font-weight: normal;\n\n  em {\n    font-style: normal;\n  }\n}\n\n.form-field-swatch {\n  .form-field-control { @extend %clearfix; }\n\n  .form-label-text { display: none; }\n\n  .swatch-wrap {\n    position: relative;\n    display: block;\n    float: left;\n    margin: 0 ($gutter / 2) ($gutter / 2) 0;\n\n    &:hover {\n      .swatch-pattern-expanded {\n        opacity: 1;\n        transform: translate(-50%, 0);\n        visibility: visible;\n        z-index: 5000;\n      }\n    }\n  }\n\n  // The block that the swatch sits within.\n  .swatch {\n    position: relative;\n    display: block;\n    width: 40px;\n    height: 40px;\n    padding: 2px;\n  }\n\n  // Blocks displaying the pattern / colors\n  .swatch-color {\n    position: absolute;\n    top: 3px;\n    right: 3px;\n    bottom: 3px;\n    left: 3px;\n    background: {\n      position: 50%;\n      repeat: no-repeat;\n      size: cover;\n    }\n\n    &.secondary {\n      left: 50%;\n    }\n\n    &.tertiary {\n      top: 50%;\n      left: 50%;\n    }\n  }\n\n  .swatch-radio {\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 1;\n    width: 100%;\n    height: 100%;\n    cursor: pointer;\n    opacity: 0;\n\n    // Unselected Swatch Items\n    + .swatch {\n      border: 1px solid $select-border-color;\n      border-radius: 3px;\n    }\n\n    // Selected Swatch Item\n    &:checked + .swatch {\n      border-color: $primary-color;\n    }\n  }\n\n  .swatch-pattern-expanded {\n    position: absolute;\n    top: calc(100% + 5px);\n    left: calc(100% + 14px);\n    min-height: 100px;\n    min-width: 100px;\n    padding: 3px;\n    background-color: $body-background-color;\n    border: 1px solid $border-color;\n    border-radius: 3px;\n    opacity: 0;\n    visibility: hidden;\n    transition: opacity 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n\n    @media only screen and (max-device-width: 768px) { display: none; }\n  }\n\n  .swatch-pattern-image {\n    display: block;\n    width: 100px;\n    height: 100px;\n    background: {\n      position: 50%;\n      repeat: no-repeat;\n      size: cover;\n    }\n  }\n}\n\n// ---------------------------------------------------------------- */\n// Date Field Components\n\n.form-field-date {\n  @extend %clearfix;\n\n  .form-date-year,\n  .form-date-month,\n  .form-date-day {\n    float: left;\n  }\n\n  .form-date-year { width: 44%; }\n\n  .form-date-month {\n    width: 25%;\n    margin-right: 3%;\n    margin-left: 3%;\n  }\n\n  .form-date-day { width: 25%; }\n}\n\n.product-event-bounds {\n  display: inline-block;\n  margin-top: 5px;\n}\n\n\n// ---------------------------------------------------------------- */\n// Rectangles - Form options displayed as a series of rectangles with text\n\n.form-field-rectangle {\n  @extend %clearfix;\n\n  .rectangle {\n    position: relative;\n    display: inline-block;\n    float: left;\n    margin: 0 ($gutter / 2) ($gutter / 2) 0;\n  }\n\n  .rectangle-text {\n    display: block;\n    min-width: 40px;\n    padding: 12px;\n    line-height: 1;\n    text-align: center;\n    border: 1px solid $select-border-color;\n    border-radius: 3px;\n  }\n\n  .form-input {\n    position: absolute;\n    z-index: 1;\n    width: 100%;\n    height: 100%;\n    cursor: pointer;\n    opacity: 0;\n\n    // Selected Item\n    &:checked + .rectangle-text {\n      color: $primary-color;\n      border-color: $primary-color;\n    }\n  }\n}\n\n\n// ---------------------------------------------------------------- */\n// File\n\n.form-file-wrapper {\n  display: block;\n  padding: 5px;\n  border: 1px solid $border-color;\n  border-radius: 3px;\n}\n\n.form-file-types,\n.form-file-size {\n  display: inline-block;\n  margin-top: 10px;\n  margin-right: 5px;\n}\n\n\n// ---------------------------------------------------------------- */\n// Pick-Product\n\n.product-picklist-radio {\n  @extend %visually-hidden;\n\n  + .product-picklist-item-body:before {\n    @include radio-unchecked();\n    position: absolute;\n    top: 50%;\n    left: 15px;\n    width: 12px;\n    height: 12px;\n    margin-right: 12px;\n    cursor: pointer;\n    transform: translateY(-50%);\n  }\n\n  &:checked + .product-picklist-item-body:before {\n    @include radio-checked();\n  }\n}\n\n.product-picklist-item {\n  min-width: 350px;\n  border-right: 1px solid $border-color;\n  border-bottom: 1px solid $border-color;\n  border-left: 1px solid $border-color;\n\n  @include breakpoint(s) { min-width: 0; }\n\n  &:first-of-type {\n    border-top: 1px solid $border-color;\n    border-radius: 3px 3px 0 0;\n  }\n\n  &:last-of-type { border-radius: 0 0 3px 3px; }\n}\n\n.product-picklist-item-body {\n  position: relative;\n  z-index: 1;\n  display: table;\n  width: 100%;\n  min-height: $gutter * 3;\n  padding: 10px 20px 10px 5px;\n  cursor: pointer;\n}\n\n.product-picklist-image-wrap {\n  position: absolute;\n  top: 50%;\n  left: 40px;\n  display: block;\n  width: 100%;\n  height: 100%;\n  max-width: 40px;\n  transform: translateY(-50%);\n}\n\n.product-picklist-image {\n  position: absolute;\n  top: 50%;\n  left: 0;\n  max-height: 100%;\n  padding: 3px;\n  transform: translateY(-50%);\n}\n\n.product-picklist-label-text {\n  display: table-cell;\n  padding-left: 90px;\n  line-height: 1.4;\n  color: inherit;\n  vertical-align: middle;\n\n  .picklist-none & { padding-left: 35px; }\n}\n\n// ---------------------------------------------------------------- */\n// Quantity Increment Components\n\n.form-submit-container {\n  margin-bottom: 0;\n  font-size: 0;\n\n  .form-field-quantity-control,\n  .button {\n    height: 46px;\n    padding-top: 0;\n    padding-bottom: 0;\n    margin-bottom: $gutter * 1.5;\n    line-height: 46px;\n  }\n\n  &.add-to-cart-blurred {\n    .form-field-quantity-control,\n    .button {\n      opacity: 0.5;\n    }\n  }\n}\n\n.form-field-quantity-label .form-field-title {\n  display: inline-block;\n  float: left;\n  margin-right: $gutter;\n  margin-bottom: $gutter * 1.5;\n  font-size: 13px;\n  line-height: 40px;\n\n  &:after {\n    content: \":\";\n  }\n}\n\n.form-field-quantity-control {\n  @extend %clearfix;\n  position: relative;\n  display: inline-block;\n  float: left;\n  height: 40px;\n  max-width: 150px;\n  margin-right: $gutter;\n  margin-bottom: $gutter * 1.5;\n  line-height: 40px;\n\n  .form-input {\n    height: 100%;\n    padding-right: $gutter * 2;\n    padding-left: $gutter * 2;\n    font-size: 13px;\n    text-align: center;\n    background-color: lighten($input-background-color, 3%);\n    border-color: lighten($input-background-color, 3%);\n\n    &::-webkit-outer-spin-button,\n    &::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n    }\n  }\n}\n\n.quantity-control {\n  position: absolute;\n  top: 0;\n  display: block;\n  width: $gutter * 2;\n  height: 100%;\n  font-size: 14px;\n  // line-height: 40px;\n  text-align: center;\n  cursor: pointer;\n  user-select: none;\n\n  &:hover {\n    color: $primary-color;\n  }\n\n  &.quantity-increment { right: 0; }\n  &.quantity-decrement { left: 0; }\n  &.quantity-control-blurred { cursor: default; }\n}\n\n/* scss-combine:general/table */\n/* Tables */\n\ntable {\n  color: $body-color;\n  border-color: $border-color;\n}\n\nth {\n  @extend %heading-text-treatment;\n  color: $input-color;\n  background: $input-background-color;\n}\n\n/* scss-combine:general/reviews */\n// Submission Modal\n.review-modal-container {\n  display: none;\n}\n\n// Rating Stars (clickable)\n.input-stars {\n  position: relative;\n  display: inline-block;\n\n  &.form-field-error {\n    padding-bottom: 20px;\n  }\n\n  .star {\n    float: right;\n    width: 20px;\n    height: 20px;\n    color: $star-color;\n    cursor: pointer;\n\n    .star-full { display: none;}\n\n    &:hover,\n    &:hover ~ .star {\n      // scss-lint:disable NestingDepth\n      .star-full { display: block; }\n      .star-empty { display: none; }\n    }\n  }\n\n  > input:checked ~ label {\n    .star-full {\n      display: block;\n    }\n    .star-empty {\n      display: none;\n    }\n  }\n\n  .form-inline-message {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    white-space: nowrap;\n\n    + .form-inline-message { display: none; }\n  }\n}\n\n// Rating Stars (readonly)\n.rating-stars {\n  display: inline-block;\n\n  .star {\n    width: 20px;\n    height: 20px;\n    color: $star-color;\n  }\n\n  .star-empty {\n    fill: rgba($body-color, 0.3);\n  }\n\n  .star-full {\n    fill: $accent-color;\n  }\n}\n\n// Review Modal\n.modal-leave-review .modal-content {\n  @extend %clearfix;\n}\n\n.review-image-column {\n  @include breakpoint(s) { display: none; }\n\n  @include with-layout($product) { @include span(last 7 of 16); }\n}\n\n.review-form-column {\n  @include breakpoint(m-up) {\n    @include with-layout($product) { @include span(first 9 of 16); }\n  }\n}\n\n.review-image-caption {\n  @extend %section-title-text-treatment;\n  font-size: 14px;\n  text-align: center;\n}\n\n/* scss-combine:general/modals */\n.modal-overlay {\n  background-color: rgba($black, 0.5);\n}\n\n.modal {\n  max-width: 840px;\n  max-height: 90%;\n  padding: $gutter * 2;\n  overflow-y: scroll;\n  background-color: $body-background-color;\n  box-shadow: 0 1px 4px 0 $shadow-color;\n}\n\n.modal-heading {\n  padding-bottom: $gutter;\n  margin-top: 0;\n  margin-bottom: $gutter * 1.5;\n  font-size: 20px;\n  border-bottom: 1px solid $border-color;\n}\n\n.modal-content {\n  position: relative;\n\n  .modal-close {\n    position: absolute;\n    top: 0;\n    right: 0;\n    font-size: $font-size;\n    line-height: 1;\n    color: $black;\n\n    svg {\n      width: 16px;\n      height: 16px;\n    }\n  }\n}\n\n/* scss-combine:general/layout */\nbody {\n  background-color: $page-background-color;\n\n  @if ($site-background-image) {\n    background-attachment: fixed;\n    background-image: url(\"#{$site-background-image}\");\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n  }\n\n  @include breakpoint(m-up) {\n    padding: $gutter * 2;\n  }\n\n  @include breakpoint(m-only) {\n    &:before {\n      position: fixed;\n      top: 0;\n      left: 0;\n      z-index: index($elements, mobile-nav-mask);\n      display: block;\n      width: $gutter * 2;\n      height: 100%;\n      background-color: $page-background-color;\n      content: \"\";\n    }\n  }\n}\n\n.page-wrap {\n  width: 100%;\n  max-width: $max-width;\n  margin-right: auto;\n  margin-left: auto;\n  background-color: $body-background-color;\n}\n\n.content {\n  @extend %clearfix;\n  padding: ($gutter * 2) ($gutter * 2) ($gutter * 3);\n  @include breakpoint(m) { padding: $gutter;}\n}\n\n.page-container {\n  @include container(710px);\n  margin-bottom: 70px;\n}\n\n/* scss-combine:general/navigation */\n.primary-navigation {\n  position: relative;\n  z-index: index($elements, primary-navigation);\n  height: $primary-navigation-height;\n  font-family: $main-navigation-font;\n  font-weight: bold;\n}\n\n.main-menu {\n  @extend %heading-text-treatment;\n  font-family: $main-navigation-font;\n}\n\n@include breakpoint(m) {\n  /* scss-combine:navigation-small */\n.primary-navigation {\n  @include antialias($white);\n  height: $mobile-navbar-height;\n  background: $banner-background-color;\n\n  a {\n    color: $white;\n\n    &:hover,\n    &:active {\n      color: mix($white, $banner-background-color, 50%);\n    }\n  }\n\n  &-fixed {\n    position: fixed;\n    top: 0;\n    width: 100%;\n  }\n}\n\n.main-menu {\n  position: fixed;\n  top: $mobile-navbar-height;\n  bottom: 0;\n  display: none;\n  width: 100%;\n  max-width: 324px;\n  background-color: $white;\n  box-shadow: 0 0 0 2000px rgba($white,0);\n\n  &.animating,\n  &.visible {\n    display: block;\n  }\n\n  &.animating {\n    transform: translateX(-100%);\n    transition: all 0.2s $ease-out-quad;\n\n    @include breakpoint(m-only) {\n      transform: translateX(calc(-100% - #{$gutter * 2}));\n    }\n  }\n\n  &.visible {\n    display: block;\n    transform: translateX(0);\n    box-shadow: 0 0 0 2000px $shadow-color;\n  }\n\n  >  ul > li {\n    border-bottom: 1px solid $border-color;\n  }\n\n  a {\n    display: block;\n    padding: $gutter $gutter + 5;\n    color: $accent-color;\n  }\n\n  .nav-tools {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n  }\n\n  .currency-select-wrapper,\n  .customer-links > a {\n    display: block;\n    height: $mobile-nav-tools-height;\n    padding: 0;\n    line-height: $mobile-nav-tools-height;\n    color: $lighter-text;\n    text-align: center;\n    background-color: $border-color;\n\n    @include with-layout($mobile-links) { @include span(1 of 3); }\n  }\n\n  .currency-select-wrapper {\n    @include with-layout($mobile-links) { @include span(first 1); }\n  }\n}\n\n.menu-dropdown {\n  position: relative;\n\n  > a {\n    position: relative;\n    transition: all 0.2s $ease-out-quad;\n  }\n\n  &:not(.active) > a {\n    padding-right: 54px;\n\n    &:after {\n      @include icon-chevron-right($accent-color, 12px);\n      position: absolute;\n      top: 0;\n      right: 0;\n      width: 54px;\n      height: 100%;\n    }\n  }\n\n  &.active > a {\n    padding-left: 39px;\n    color: mix($navigation-color, $banner-background-color, 50%);\n    background-color: lighten($border-color, 3%);\n\n    &:before {\n      @include icon-chevron-left($accent-color, 12px);\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 54px;\n      height: 100%;\n    }\n  }\n}\n\n.menu-dropdown > .dropdown {\n  position: absolute;\n  top: 100%;\n  left: 100%;\n  z-index: index($elements, dropdown);\n  width: 100%;\n  margin-top: 1px;\n  background-color: $white;\n  transition: all 0.2s $ease-out-quad;\n\n  &.visible {\n    transform: translateX(-100%);\n  }\n}\n\n.nav-menu {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: $mobile-nav-tools-height + 2;\n  left: 0;\n  width: 100%;\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n// Drill in styles\n.nav-menu-item {\n  max-height: 150px;\n  opacity: 1;\n  transition: max-height 0.2s $ease-out-quad 0.2s,\n              opacity 0.2s $ease-out-quad 0.4s;\n\n  &.hide-anchor > a{\n    display: none;\n  }\n\n  .dropdown-displayed & {\n    max-height: 0;\n    opacity: 0;\n    transition: opacity 0.2s $ease-out-quad,\n                max-height 0.2s $ease-out-quad 0.2s;\n\n    &.active {\n      max-height: 150px;\n      opacity: 1;\n    }\n  }\n\n  a {\n    letter-spacing: 0.075em;\n    text-transform: $navigation-text-transform;\n  }\n}\n\n.nav-submenu-item {\n  opacity: 1;\n  transition: max-height 0.2s $ease-out-quad 0.2s,\n  opacity 0.2s $ease-out-quad 0.4s;\n\n  &.hide {\n    display: none;\n  }\n\n  &.hide-anchor > a {\n    display: none;\n  }\n\n  > .nav-submenu {\n    display: none;\n\n    &.animating,\n    &.visible {\n      display: block;\n    }\n\n    // initial state for enter transition\n    &.animating-in {\n      transform: translateX(200%);\n      transition: transform 0.3s ease;\n    }\n\n    // initial state for leave transition\n    &.animating-out {\n      opacity: 0;\n      transition: opacity 0.2s ease;\n    }\n\n    // final states for both in and out\n    &.visible {\n      transform: translateX(0);\n      opacity: 1;\n    }\n  }\n\n  .nav-submenu-item:first-of-type {\n    border-top: 1px solid $border-color;\n  }\n\n  > a {\n    position: relative;\n    border-bottom: 1px solid $border-color;\n  }\n\n  > .submenu-trigger:not(.active) {\n    padding-right: 54px;\n\n    &:after {\n      @include icon-chevron-right($accent-color, 12px);\n      position: absolute;\n      top: 0;\n      right: 0;\n      width: 54px;\n      height: 100%;\n    }\n  }\n\n  > .submenu-trigger.active {\n    padding-left: 39px;\n    color: mix($navigation-color, $banner-background-color, 50%);\n    background-color: lighten($border-color, 3%);\n\n    &:before {\n      @include icon-chevron-left($accent-color, 12px);\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 54px;\n      height: 100%;\n    }\n  }\n}\n\n.nav-submenu-item-all,\n.meganav-submenu-header {\n  display: none;\n}\n}\n\n@include breakpoint(l-up) {\n  /* scss-combine:navigation-large */\n.primary-navigation {\n  @include antialias($navigation-color);\n  max-width: 100%;\n\n  a {\n    color: $navigation-color;\n\n    &:hover,\n    &:active {\n      color: $navigation-hover;\n    }\n  }\n}\n\n.main-menu {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  text-align: center;\n  transform: translate(-50%, -50%);\n\n  .currency-select-wrapper,\n  .customer-links {\n    display: none;\n  }\n}\n\n// Styles for the Primary Navigation links\n.nav-menu-item {\n  position: relative;\n  display: inline-block;\n  margin-right: 5px;\n\n  &:last-of-type {\n    margin-right: 0;\n  }\n\n  > a {\n    display: block;\n    padding: 10px;\n    letter-spacing: 0.075em;\n    text-transform: $navigation-text-transform;\n  }\n\n  &.menu-dropdown {\n    > a:after {\n      @include icon-arrow-down($navigation-color);\n      width: 6px;\n      height: 6px;\n      margin-left: 5px;\n    }\n\n    &.active > a { color: $accent-color; }\n    &.active > a:after { @include icon-arrow-down($accent-color); }\n  }\n}\n\n// Styles for the Dropdown Menus\n.menu-dropdown:not(.nav-submenu-item) {\n  text-align: left;\n\n  &.active > a {\n    position: relative;\n    z-index: index($elements, active-dropdown);\n\n    &:before {\n      position: absolute;\n      top: -2px;\n      right: -10px;\n      bottom: -7px;\n      left: -10px;\n      z-index: -1;\n      display: block;\n      background-color: $body-background-color;\n      content: \"\";\n      box-shadow: 0 -3px 3px -3px $shadow-color,\n                  3px 0 3px -3px $shadow-color,\n                  -3px 0 3px -3px $shadow-color;\n    }\n  }\n\n  > .dropdown {\n    position: absolute;\n    top: calc(100% + 4px);\n    left: -10px;\n    z-index: index($elements, dropdown);\n    display: none;\n    min-width: 220px;\n    max-height: 700px;\n    padding: 20px 20px 15px;\n    overflow-y: auto;\n    background-color: $body-background-color;\n    box-shadow: 0 1px 4px 0 $shadow-color;\n\n    &.animating,\n    &.visible {\n      display: block;\n    }\n  }\n}\n\n// Styles for nested navigations\n.nav-submenu-item {\n  margin-bottom: 13px;\n  font-size: $font-size;\n  font-weight: 400;\n  line-height: 1.1;\n  text-transform: none;\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n\n  a {\n    color: $accent-color;\n  }\n}\n\n.nav-menu-item > .nav-submenu > .nav-submenu-item {\n  font-weight: 700;\n}\n\n.nav-submenu {\n  margin-top: 10px;\n  margin-bottom: 10px;\n  margin-left: 10px;\n}\n\n.nav-menu-item > .nav-submenu {\n  margin-top: 0;\n  margin-bottom: 0;\n  margin-left: 0;\n}\n\n.nav-submenu-item > .nav-submenu {\n  display: none;\n\n  &.animating,\n  &.visible {\n    display: block;\n  }\n\n  // initial state for enter transition\n  &.animating-in {\n    transform: translateX(-5%);\n    transition: transform 0.2s ease;\n  }\n\n  // initial state for leave transition\n  &.animating-out {\n    opacity: 0;\n    transition: opacity 0.2s ease;\n  }\n\n  // final states for both in and out\n  &.visible {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n\n.submenu-trigger.active {\n  font-weight: 700;\n}\n\n.js .nav-menu {\n  visibility: hidden;\n\n  &.show-menu {\n    visibility: visible;\n  }\n}\n\n  /* scss-combine:mega-navigation */\n@media (min-width: 992px) {\n  .show_categories_meganav {\n\n    .meganav-submenu-header {\n      display: none;\n    }\n\n    .menu-meganav {\n      > .nav-submenu.meganav-submenu {\n        min-height: 330px;\n        white-space: nowrap;\n\n        &.active,\n        &.visible {\n          display: flex;\n        }\n\n        > .meganav-submenu-item {\n          flex-shrink: 0;\n          display: inline-block;\n          width: 200px;\n          padding-right: 30px;\n          white-space: normal;\n\n          > .nav-submenu {\n            display: block;\n            margin-left: 0;\n          }\n\n          .meganav-submenu.nav-submenu {\n            // initial state for enter transition\n            &.animating-in {\n              opacity: 0;\n              transform: translateY(-5%);\n              transition: all 0.2s ease;\n            }\n\n            // initial state for leave transition\n            &.animating-out {\n              opacity: 0;\n              transform: translateY(-5%);\n              transition: all 0.2s ease;\n            }\n\n            // final states for both in and out\n            &.visible {\n              transform: translateY(0);\n              opacity: 1;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  .show_categories_meganav_large {\n\n    .menu-meganav {\n      > .nav-submenu.meganav-submenu {\n        width: calc(100vw - 60px);\n        max-width: 1300px;\n        min-height: 330px;\n        padding-top: 50px;\n        box-sizing: border-box;\n\n        .meganav-divider {\n          position: absolute;\n          left: 250px;\n          top: 50px;\n          bottom: 50px;\n          width: 1px;\n          height: calc(100% - 100px);\n          background-color: $border-color;\n        }\n\n        .current > .meganav-submenu-item {\n          padding-right: 120px;\n        }\n\n        > .meganav-submenu-item {\n          max-width: 250px;\n          margin-bottom: 0;\n          padding-bottom: 14px;\n\n          &:last-of-type {\n            margin-bottom: 40px;\n          }\n\n          > a {\n            letter-spacing: 1px;\n            line-height: 1.08;\n            text-transform: uppercase;\n          }\n\n          > .nav-submenu {\n            position: absolute;\n            top: 50px;\n            bottom: 0;\n            left: 300px;\n            margin-top: auto;\n            margin-bottom: auto;\n\n            &.animating,\n            &.visible {\n              display: flex;\n              flex-direction: column;\n              flex-wrap: wrap;\n            }\n\n            // initial state for enter transition\n            &.animating-in {\n              opacity: 0;\n              transform: translateX(10%);\n              transition: transform 0.2s ease, opacity 0.2s ease;\n            }\n\n            // initial state for leave transition\n            &.animating-out {\n              opacity: 0;\n              transform: translateX(10%);\n              transition: transform 0.2s ease, opacity 0.2s ease;\n            }\n\n            &.visible {\n              transform: translateX(0);\n              opacity: 1;\n            }\n\n            > .meganav-submenu-header .meganav-back {\n              display: none;\n            }\n\n            .nav-submenu-item {\n\n              &.hide {\n                display: none;\n              }\n\n              > .submenu-trigger.active {\n                display: none;\n              }\n\n              > .nav-submenu {\n                margin: 0;\n\n                &.animating,\n                &.visible {\n                  display: flex;\n                  flex-direction: column;\n                  flex-wrap: wrap;\n                }\n\n                // initial state for enter transition\n                &.animating-in {\n                  opacity: 0;\n                  transform: translateX(10%);\n                  transition: transform 0.2s ease, opacity 0.2s ease;\n                }\n\n                // initial state for leave transition\n                &.animating-out {\n                  opacity: 0;\n                  transform: translateX(10%);\n                  transition: transform 0.2s ease, opacity 0.2s ease;\n                }\n\n                &.visible {\n                  transform: translateX(0);\n                  opacity: 1;\n                }\n              }\n            }\n\n            .nav-submenu.current {\n              padding-top: 40px;\n            }\n          }\n        }\n\n        > .meganav-submenu-item {\n          > a {\n            color: $accent-color;\n          }\n\n          &.blurred > a {\n            color: $navigation-hover;\n          }\n        }\n      }\n\n      .nav-submenu-item-all {\n        display: none;\n      }\n    }\n\n    .meganav-submenu-header {\n      position: absolute;\n      top: -50px;\n\n      &.hide {\n        display: none;\n      }\n\n      .meganav-back {\n        padding-bottom: 12px;\n        font-size: 12px;\n        letter-spacing: 0.1px;\n        line-height: 1.17;\n        color: $accent-color;\n        cursor: pointer;\n\n        &::before {\n          width: 12px;\n          height: 8px;\n          margin-right: 5px;\n          @include icon-chevron-left($accent-color, 12px);\n        }\n      }\n\n      .meganav-submenu-name {\n        font-size: 18px;\n        font-weight: 700;\n        line-height: 0.78;\n        color: $accent-color;\n      }\n    }\n  }\n}\n}\n\n/* scss-combine:general/header */\n.main-header {\n  position: relative;\n  z-index: index($elements, main-header);\n  height: 220px;\n  font-size: 13px;\n\n  @include breakpoint(m) {\n    color: $white;\n  }\n\n  @include breakpoint(m-up) {\n    height: 328px;\n  }\n\n  @include breakpoint(l-up) {\n    height: 380px;\n    color: $navigation-color;\n  }\n\n  background-color: $header-color;\n\n  &:first-child {\n    @include breakpoint(l-up) {\n      border-top: 4px solid $banner-background-color;\n    }\n  }\n}\n\n.navigation-toggle {\n  @extend %button-reset;\n  position: absolute;\n  top: 50%;\n  left: $gutter;\n  transform: translateY(-50%);\n\n  @include breakpoint(l-up) {\n    display: none;\n  }\n\n  .icon-menu {\n    position: relative;\n    top: 4px;\n    width: 20px;\n    height: 20px;\n  }\n}\n\n.search-form {\n  position: absolute;\n  top: 50%;\n  left: $gutter * 2;\n  transform: translateY(-50%);\n\n  @include breakpoint(m) {\n    left: $gutter * 2 + 24px;\n  }\n\n  .icon-search {\n    position: relative;\n    top: 4px;\n    width: 16px;\n    height: 16px;\n  }\n\n  .search-input {\n    margin-left: 5px;\n    color: $navigation-color;\n    background-color: transparent;\n    border: 0;\n    appearance: none;\n\n    &::placeholder {\n      color: rgba($navigation-color, 0.5);\n\n      @include breakpoint(m) {\n        color: transparent;\n      }\n    }\n\n    &:focus {\n      outline: none;\n    }\n\n    @include breakpoint(m) {\n      color: $white;\n\n      &:focus::placeholder {\n        color: rgba($white, 0.5);\n      }\n    }\n  }\n\n  .search-label {\n    padding-top: 10px;\n    padding-bottom: 10px;\n    cursor: text;\n  }\n}\n\n.header-tools {\n  position: absolute;\n  top: 50%;\n  right: $gutter;\n  transform: translateY(-50%);\n\n  @include breakpoint(l-up) {\n    right: $gutter * 2;\n  }\n\n  .currency-select-wrapper,\n  .customer-links {\n    display: inline-block;\n    margin-right: $gutter;\n\n    @include breakpoint(m) {\n      display: none;\n    }\n  }\n\n  .currency-select-wrapper,\n  .customer-links > a {\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n\n  .cart-preview-trigger {\n    display: inline-block;\n  }\n}\n\n.cart-preview-trigger {\n\n  .icon-cart {\n    position: relative;\n    top: 4px;\n    width: 18px;\n    height: 18px;\n  }\n\n  .cart-preview-label {\n    display: none;\n\n    @include breakpoint(m) {\n      display: inline;\n    }\n  }\n\n  .cart-preview-quantity {\n    @include breakpoint(m) {\n      &:before {\n        content: \"(\";\n      }\n\n      &:after {\n        content: \")\";\n      }\n    }\n  }\n}\n\n.currency-select-wrapper {\n  position: relative;\n  cursor: pointer;\n  transition: color 0.2s $ease-out-quad;\n\n  select {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 2;\n    width: 100%; // needed for Firefox\n    height: 100%; // needed for IE\n    cursor: pointer;\n    opacity: 0;\n    appearance: none;\n  }\n\n  .icon-arrow-down {\n    position: relative;\n    top: -1px;\n    width: 6px;\n    height: 6px;\n    margin-left: 2px;\n  }\n\n  &:hover,\n  &:active {\n    color: $navigation-hover;\n  }\n}\n\n.customer-links {\n  cursor: default;\n\n  .customer-link-logout {\n    color: lighten($navigation-color, 50%);\n\n    @include breakpoint(l-up) {\n      &:before { content: \"(\"; }\n      &:after { content: \")\"; }\n    }\n  }\n}\n\n.branding {\n  position: absolute;\n  top: calc(50% + #{$primary-navigation-height / 4});\n  left: 50%;\n  z-index: index($elements, branding);\n  transform: translate(-50%, -50%);\n\n  @include media($max: 315px) {\n    width: 100%;\n    padding-right: 10px;\n    padding-left: 10px;\n  }\n\n  .logo { display: block; }\n\n  .header-logo-image {\n    max-width: 300px;\n    max-height: 120px;\n\n    @include breakpoint(m-up) {\n      max-width: 100%;\n      max-height: 200px;\n    }\n\n    @include media($max: 315px) {\n      max-width: 100%;\n    }\n  }\n\n  .text {\n    margin-right: $gutter / 2;\n    margin-left: $gutter / 2;\n    text-align: center;\n\n    a {\n      color: $navigation-color;\n\n      // scss-lint:disable NestingDepth\n      &:hover,\n      &:active {\n        color: $navigation-hover;\n      }\n    }\n\n    @include breakpoint(s) {\n      font-size: 1.8em;\n    }\n\n    @include breakpoint(m-up) {\n      margin-right: $gutter * 2;\n      margin-left: $gutter * 2;\n    }\n  }\n}\n\n/* scss-combine:general/footer */\n// Footer Layout\n.main-footer {\n  @extend %clearfix;\n  padding: 40px 30px;\n  color: $footer-color;\n  background-color: $footer-background-color;\n  background-clip: padding-box;\n\n  @if lightness($footer-background-color) < 80% {\n    @extend %antialiased;\n  } @else {\n    border-top: 1px solid $border-color;\n  }\n\n  @include breakpoint(m) {\n    display: flex;\n    flex-direction: column;\n\n    .footer-navigation {\n      margin-right: 0;\n      margin-left: 0;\n    }\n\n    .footer-site-subscribe {\n      order: 1;\n    }\n\n    .footer-bottom-row {\n      order: 2;\n    }\n  }\n\n  @include breakpoint(l-up) {\n    padding: 47px 40px 33px;\n  }\n\n  a {\n    color: inherit;\n\n    &:hover {\n      @if lightness($footer-background-color) < 80% {\n        color: mix($white, $footer-background-color, 50%);\n      } @else {\n        color: mix($accent-color, $footer-background-color, 50%);\n      }\n    }\n  }\n}\n\n// Footer Modules\n\n.site-footer-item {\n  @include breakpoint(m) {\n    margin-bottom: $gutter * 2;\n  }\n}\n\n// Branding\n.footer-branding {\n  @include breakpoint(m) {\n    text-align: center;\n  }\n\n  @include breakpoint(l-up) {\n    @include span(2 of 12);\n    max-width: 100%;\n\n    .social-icons-first & {\n      @include span(last 2 of 12);\n    }\n  }\n\n  .logo { display: block; }\n\n  .footer-logo-image {\n    max-width: 100px;\n  }\n\n  .text {\n    font-size: 20px;\n    color: inherit;\n  }\n}\n\n// Navigation\n.footer-navigation {\n  @include container;\n  font-family: $footer-navigation-font;\n  font-weight: bold;\n\n  @include breakpoint(l-up) {\n    @include span(5 of 12);\n    @include pre(0.5 of 12);\n    @include post(0.5 of 12);\n  }\n}\n\n.footer-menu {\n  font-size: 0;\n  text-transform: uppercase;\n\n  @include breakpoint(s) {\n    @include span(12 of 12);\n    margin-bottom: $gutter * 2;\n  }\n\n  @include breakpoint(m-up) {\n    margin-top: -5px;\n\n    // Sets 3 Columns if there are 3 Menus, 2 Columns if there are 2 Menus\n    &:nth-last-child(3):first-child,\n    &:nth-last-child(3):first-child ~ & {\n      @include span(4 of 12);\n\n      &:last-of-type { @include last; }\n    }\n\n    &:nth-last-child(2):first-child,\n    &:nth-last-child(2):first-child ~ & {\n      @include span(6 of 12);\n\n      &:last-of-type { @include last; }\n    }\n  }\n}\n\n.footer-menu-header,\n.footer-menu-item,\n.footer-menu-catchall {\n  margin-bottom: 5px;\n  font-size: $font-size;\n  letter-spacing: 0.05em;\n\n  @include breakpoint(m) { text-align: center; }\n}\n\n.footer-menu-header {\n  margin-top: 0;\n  margin-bottom: 10px;\n  font-size: $font-size - 1;\n  opacity: $footer-alt-opacity;\n  text-transform: uppercase;\n}\n\n.footer-social-header {\n  margin-top: -4px;\n  font-size: $font-size - 1;\n}\n\n.footer-menu-catchall {\n  margin-top: 5px;\n  font-size: $font-size - 2;\n\n  &:after { content: \"\\203A\";}\n}\n\n.footer-menu-tier-secondary {\n  display: none;\n}\n\n// Subscribe\n.footer-site-subscribe {\n  @include breakpoint(l) {\n    .social-nav {\n      margin-bottom: $gutter * 2;\n    }\n  }\n\n  @include breakpoint(l-up) {\n    @include span(last 4 of 12);\n\n    .social-icons-first & {\n      @include span(first 4 of 12);\n      margin-right: 0;\n    }\n  }\n\n  @include breakpoint(s) {\n    .social-icons-first & {\n      order: 0;\n    }\n  }\n}\n\n.subscription-form {\n  @include breakpoint(m) {\n    text-align: center;\n  }\n\n  .form-input,\n  .button {\n    width: 100%;\n    vertical-align: bottom;\n\n    @include breakpoint(m) {\n      height: 41px;\n      max-width: 215px;\n      margin-right: 5px;\n    }\n\n    @include breakpoint(s) {\n      margin-bottom: $gutter / 2;\n    }\n  }\n\n  .button {\n    min-width: 0;\n    padding-right: $gutter;\n    padding-left: $gutter;\n\n    @include breakpoint(l-up) {\n      margin-top: $gutter;\n    }\n  }\n}\n\n// Social navigation\n\n\n.social-nav-list {\n  font-size: 0;\n\n  @include breakpoint(m) {\n    text-align: center;\n  }\n\n  @include breakpoint(l-up) {\n    margin-top: 20px;\n    margin-bottom: 20px;\n  }\n}\n\n.social-link {\n  display: inline-block;\n  margin-right: $gutter;\n  font-size: $font-size;\n\n  &:last-of-type {\n    margin-right: 0;\n  }\n\n  > a {\n    display: block;\n    width: 20px;\n    height: 20px;\n  }\n\n  svg {\n    width: 100%;\n    height: 100%;\n  }\n}\n\n// Footer bottom row\n\n.footer-bottom-row {\n  @include breakpoint(l-up) {\n    @include span(12 of 12);\n    position: relative;\n    margin-top: 80px;\n  }\n}\n\n.footer-accounts,\n.footer-trademark {\n  @include breakpoint(l-up) {\n    @include span(6 of 12);\n  }\n}\n\n// Accounts\n.footer-accounts {\n  @include breakpoint(m) {\n    margin-top: $gutter;\n    text-align: center;\n  }\n\n  @include breakpoint(l-up) {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    z-index: 1;\n  }\n}\n\n.footer-accounts-list {\n  font-size: 0;\n  opacity: $footer-alt-opacity;\n\n  > li {\n    display: inline-block;\n    margin-right: $gutter;\n    font-size: $font-size;\n\n    &:last-of-type {\n      margin-right: 0;\n    }\n  }\n}\n\n// Trademark\n.footer-trademark {\n  opacity: $footer-alt-opacity;\n\n  @include breakpoint(m) {\n    margin-top: $gutter * 2;\n    text-align: center;\n  }\n\n  @include breakpoint(l-up) {\n    @include last;\n    margin-top: $gutter;\n    text-align: right;\n  }\n}\n\n// Payment Icons\n.footer-payment-icons {\n  @include breakpoint(l-up) {\n    @include span(12 of 12);\n    @include break;\n  }\n}\n\n.footer-payment-icons-list {\n  font-size: 0;\n  opacity: $footer-alt-opacity;\n\n  @include breakpoint(m) {\n    text-align: center;\n  }\n\n  @include breakpoint(l-up) {\n    text-align: right;\n  }\n\n  > li {\n    display: inline-block;\n    margin-right: $gutter;\n    opacity: 0.7;\n\n    &:last-of-type { margin-right: 0; }\n\n    > svg {\n      width: 40px;\n      height: 40px;\n    }\n  }\n}\n\n.footer-copyright {\n  display: block;\n}\n/* scss-combine:general/tabs */\n.tab-content-panel {\n  display: none;\n\n  &.active {\n    display: block;\n  }\n}\n\n.product-tabs-menu {\n  margin-top: 40px;\n  margin-bottom: 25px;\n}\n\n.product-tabs-list {\n  font-size: 0;\n}\n\n.product-tab-title {\n  display: inline-block;\n  margin-right: $gutter * 2;\n  font-family: $primary-font;\n  font-size: 14px;\n  font-weight: bold;\n\n  &:last-of-type {\n    margin-right: 0;\n  }\n}\n\n.product-tab-link {\n  color: $lightest-text;\n\n  .active & {\n    color: $primary-color;\n  }\n}\n\n/* scss-combine:general/blog-index */\n.blog-index {\n  @include container();\n}\n\n.blog-item {\n  margin-bottom: 50px;\n\n  @include breakpoint(l-up) { @include gallery(6 of 12); }\n}\n\n.blog-item-link { display: block; }\n\n.blog-item-featured-image {\n  position: relative;\n  z-index: index($elements, blog-image);\n  overflow: hidden;\n  background-color: $placeholder-image-background;\n  background-position: center;\n  background-size: cover;\n\n  &:before {\n    display: block;\n    width: 100%;\n    padding-top: 55%;\n    content: \"\";\n  }\n}\n\n.blog-item-header {\n  margin-top: 20px;\n  margin-bottom: 10px;\n}\n\n.blog-item-timestamp {\n  font-family: $primary-font;\n  color: $lightest-text;\n}\n\n.blog-item-title {\n  @extend %heading-text-treatment;\n  margin-top: 6px;\n  margin-bottom: 0;\n  font-size: 18px;\n}\n\n.blog-item-footer {\n  margin-top: 25px;\n\n  .read-more {\n    @extend %section-title-text-treatment;\n    font-size: 12px;\n    color: $accent-color;\n    text-transform: uppercase;\n  }\n}\n\n// Latest blog posts - home Page\n.latest-blog-posts {\n  border-top: 1px solid $border-color;\n\n  .section-title {\n    margin-bottom: 40px;\n  }\n}\n\n/* scss-combine:general/blog-post */\n// Thumbnail\n.blog-post-header {\n  position: relative;\n}\n\n.blog-post-featured-image {\n  position: relative;\n  z-index: index($elements, blog-image);\n  overflow: hidden;\n  background-color: $placeholder-image-background;\n  background-position: center;\n  background-size: cover;\n\n  &:before {\n    display: block;\n    width: 100%;\n    padding-top: 55%;\n    content: \"\";\n  }\n}\n\n// Layout\n.blog-post-meta,\n.blog-post-container {\n  padding: ($gutter * 3) ($gutter * 2) ($gutter * 2);\n\n  @include breakpoint(s) {\n    padding-right: $gutter;\n    padding-left: $gutter;\n  }\n\n  @include breakpoint(l-up) {\n    padding-right: $gutter * 4;\n    padding-left: $gutter * 4;\n  }\n}\n\n.blog-post-meta {\n  @include breakpoint(m) { text-align: center; }\n\n  @include breakpoint(l-up) {\n    position: absolute;\n    bottom: $gutter * 3;\n    left: $gutter * 4;\n    z-index: index($elements, blog-title);\n    padding: 0;\n  }\n}\n\n.blog-post-container {\n  @include container();\n}\n\n.blog-post-content {\n  @include breakpoint(m) { margin-bottom: $gutter * 3; }\n  @include breakpoint(l-up) { @include span(first 8 of 12); }\n}\n\n.blog-post-sidebar {\n  @include breakpoint(l-up) {\n    @include span(last 3.5 of 12);\n    @include pull(0.5);\n  }\n\n  .blog-post-sidebar-author,\n  .blog-post-tags,\n  .share-buttons-nav { margin-bottom: $gutter * 2; }\n}\n\n// Text styles\n.blog-post-header-author {\n  display: none;\n\n  @include breakpoint(m) {\n    display: block;\n    color: $lightest-text;\n  }\n}\n\n.blog-post-title,\n.blog-post-timestamp {\n  @include breakpoint(l-up) {\n    color: $white;\n    text-shadow: 0 2px 4px rgba($black, 0.50);\n  }\n}\n\n.blog-post-timestamp {\n  font-family: $primary-font;\n\n  @include breakpoint(m) { color: $lightest-text; }\n}\n\n.blog-post-title {\n  @extend %heading-text-treatment;\n  margin-top: 5px;\n  margin-bottom: 0;\n  font-size: 32px;\n}\n\n.blog-post-sidebar .share-heading,\n.blog-post-sidebar-heading {\n  display: block;\n  margin-bottom: 6px;\n  font-size: $font-size;\n  color: $body-color;\n}\n\n.blog-post-sidebar-author {\n  font-size: 15px;\n\n  @include breakpoint(m) { display: none; }\n}\n\n.blog-post-tag {\n  padding: 4px 8px;\n  color: $body-color;\n  background-color: $input-background-color;\n  border-radius: 2px;\n}\n\n/* scss-combine:general/rte */\n.rte {\n\n  // headings\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    margin-top: 25px;\n    margin-bottom: 25px;\n  }\n\n  h1 {\n    margin-top: 35px;\n    margin-bottom: 35px;\n    font-size: 22px;\n  }\n\n  h2 { font-size: 20px; }\n  h3 { font-size: 15px; }\n  h4 { font-size: 13px; }\n  h5 { font-size: 11px; }\n\n  // Text\n  p {\n    line-height: 1.75;\n  }\n\n  blockquote {\n    padding-left: 18px;\n    margin: 0;\n    letter-spacing: 0.025em;\n    border-left: 2px solid $border-color;\n  }\n\n  code,\n  pre {\n    font-family: $mono-font;\n    background-color: $input-background-color;\n  }\n\n  pre { padding: 20px; }\n\n  ul,\n  ol {\n    margin-bottom: $gutter;\n    margin-left: $gutter * 2;\n\n    ul,\n    ol {\n      margin-bottom: 0;\n      margin-left: $gutter;\n    }\n\n    li {\n      padding: 0;\n      padding-left: 5px;\n      margin-bottom: 3px;\n\n      // scss-lint:disable NestingDepth\n      &:last-of-type { margin-bottom: 0; }\n    }\n  }\n\n  ul { list-style: disc; }\n}\n\n.rss-feed-item {\n  border-bottom: 1px solid $border-color;\n}\n\n/* scss-combine:general/print */\n@media print {\n  .main-menu,\n  .search-form,\n  .navigation-toggle,\n  .products-related,\n  .footer-navigation,\n  .footer-site-subscribe {\n    display: none;\n  }\n}\n\n// Products\n/* scss-combine:product/product-grid */\n.products-featured,\n.products-new,\n.products-related {\n  padding: $gutter * 2;\n\n  @include breakpoint(m) { padding: $gutter;}\n\n  .product-container &,\n  .cart-empty & {\n    @include container(960px);\n    padding-top: $gutter * 3;\n    padding-bottom: $gutter * 5;\n\n    @include breakpoint(l-only) {\n      padding-right: $gutter * 2;\n      padding-left: $gutter * 2;\n    }\n\n    @include breakpoint(xl-up) { @include container(85%) };\n  }\n\n  .section-title {\n    margin-bottom: 40px;\n  }\n}\n\n.product-grid {\n  @include container();\n}\n\n.product-item {\n  .product-grid & {\n    margin-bottom: $gutter * 2;\n\n    // Grid defaults to Small: 2 column, Medium: 3 column, Large: 4 column\n    @include breakpoint(s) { @include with-layout($grid-small) { @include gallery(6 of 12); } }\n    @include breakpoint(m-only) { @include with-layout($grid-small) { @include gallery(6 of 12); } }\n    @include breakpoint(l-up) { @include gallery(3 of 12); }\n  }\n\n  // Grid column overrides\n  .grid-m-2 & { @include breakpoint(m) { @include with-layout($grid-small) { @include gallery(6 of 12); } } }\n  .grid-l-3 & { @include breakpoint(l-up) { @include gallery(4 of 12); } }\n}\n\n// Sale badge\n.sale-badge {\n  padding: 2px 5px;\n  letter-spacing: normal;\n  line-height: 1.62;\n  color: $body-background-color;\n  background-color: $highlight-color;\n}\n\n/* scss-combine:product/product-item */\n.product-item-thumbnail {\n  position: relative;\n}\n\n.product-item-image {\n  display: block;\n\n  .aspect-default-ratio & {\n    background: none !important;\n  }\n\n  img {\n    width: 100%;\n  }\n}\n\n.product-item-title {\n  margin-top: 12px;\n  margin-bottom: 7px;\n  font-family: $primary-font;\n  font-size: 15px;\n}\n\n.product-item-price {\n  margin-top: 7px;\n  margin-bottom: 7px;\n  color: $lighter-text;\n}\n\n// Product Options\n\n// Quickshop link\n.product-item-quickshop {\n  position: absolute;\n  bottom: $gutter;\n  left: 50%;\n  z-index: index($elements, product-item-options);\n  width: calc(100% - (#{$gutter} * 2));\n  transform: translateX(-50%);\n}\n\n.product-item-wishlist,\n.product-item-compare {\n  position: absolute;\n  top: 10px;\n  z-index: index($elements, product-item-options);\n  font-family: $primary-font;\n  font-weight: bold;\n  color: $accent-color;\n}\n\n\n// Wishlist link\n.product-item-wishlist {\n  right: $gutter;\n\n  .icon-wishlist {\n    width: 15px;\n    height: 15px;\n    margin-right: 5px;\n    vertical-align: sub;\n  }\n}\n\n// Compare form\n.product-item-compare {\n  left: $gutter;\n  margin-bottom: 0;\n\n  .form-label-text:before {\n    // scss-lint:disable ImportantRule\n    margin-right: 8px !important;\n  }\n}\n\n// Thumbnail options fade\n.product-item-quickshop,\n.product-item-compare,\n.product-item-wishlist {\n  @include breakpoint(m) { display: none; }\n\n  @include breakpoint(l-up) {\n    opacity: 0;\n    transition: opacity 0.25s $ease-out-quad;\n\n    + .product-item-image:before {\n      position: absolute;\n      position: relative;\n      top: 0;\n      left: 0;\n      z-index: index($elements, product-item-image);\n      display: block;\n      width: 100%;\n      height: 100%;\n      background-color: rgba($white, 0.92);\n      content: \"\";\n      opacity: 0;\n      transition: opacity 0.25s $ease-out-quad;\n    }\n\n    .product-item-thumbnail:hover & {\n      opacity: 1;\n\n      + .product-item-image:before { opacity: 1; }\n    }\n  }\n}\n\n.aspect-one-by-one,\n.aspect-four-by-five,\n.aspect-two-by-three {\n  .product-item-thumbnail {\n    position: relative;\n    width: 100%;\n    overflow: hidden;\n\n    &:before {\n      display: block;\n      width: 100%;\n      content: \"\";\n    }\n\n    .product-item-image {\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      overflow: hidden;\n      background-position: center;\n      background-repeat: no-repeat;\n      background-size: cover;\n\n      .hide-for-ratio {\n        @extend %visually-hidden;\n      }\n    }\n  }\n}\n\n.product-item-thumbnail {\n  &:before {\n    .aspect-one-by-one & {\n      padding-top: 100%;\n    }\n    .aspect-four-by-five & {\n      padding-top: 125%;\n    }\n    .aspect-two-by-three & {\n      padding-top: 150%;\n    }\n  }\n}\n\n/* scss-combine:product/product-rating */\n.rating-stars,\n.rating-stars-readonly {\n  margin-right: 6px;\n  font-size: 0;\n  color: $star-color;\n  vertical-align: text-top;\n\n  .rating-star {\n    display: inline-block;\n    width: 14px;\n    height: 14px;\n    margin-right: 2px;\n\n    &:last-of-type {\n      margin-right: 0;\n    }\n  }\n}\n\n.ratings-count-text {\n  font-size: $font-size;\n}\n\n/* scss-combine:product/product-price */\n.price {\n  font-family: $price-font;\n  color: $lighter-text;\n\n  .product-header & {\n    margin-top: 8px;\n    margin-bottom: 8px;\n    font-size: 18px;\n    line-height: 1.2;\n  }\n}\n\n.price-withouttax,\n.price-withtax,\n.price-saved {\n  display: block;\n  margin-bottom: 4px;\n\n  .product-item & { margin-bottom: 2px; }\n  &:last-of-type { margin-bottom: 5px; }\n}\n\n.price-rrp {\n  margin-right: $gutter / 2;\n  text-decoration: line-through;\n\n  + .price-value {\n    font-weight: bold;\n    color: $highlight-color;\n  }\n}\n\n.price-value {\n  margin-right: $gutter / 2;\n}\n\n.price-tax-label {\n  font-size: 12px;\n  color: $lightest-text;\n}\n\n.price-saved {\n  font-size: 12px;\n  color: $body-color;\n}\n\n// Hides tax labels in the product grid when the store only displays 1 price\n.product-item .price {\n  .price-tax-label {\n    display: none;\n  }\n\n  &.multiple-prices .price-tax-label {\n    display: inline;\n  }\n}\n\n// Call for price\n.product-call-for-price {\n  font-family: $primary-font;\n  font-weight: bold;\n  color: $lighter-text;\n}\n\n/* scss-combine:product/quick-shop */\n.quick-shop-modal {\n\n  opacity: 0;\n  transition: opacity 0.2s $ease-out-quad;\n\n  @include breakpoint(m-up) { max-width: calc(100% - (#{$gutter} * 4)); }\n  @include media($min: 1360px) { max-width: $max-width; }\n\n  // for fading in once the ajax request has completed\n  .modal-wrapper.loaded & { opacity: 1; }\n\n  // Overrides for some product styling\n  .product-details,\n  .product-info .form { border-bottom: 0; }\n\n  .product-main-image {\n    text-align: center;\n\n    .product-image { max-height: 600px; }\n  }\n}\n\n\n// Pages\n/* scss-combine:pages/product */\n.product-details,\n.product-reviews {\n  @extend %content-padding;\n  @include container();\n  padding-top: $gutter * 3;\n  padding-bottom: $gutter * 5;\n}\n\n.product-details,\n.product-reviews-container {\n  border-bottom: 1px solid $border-color;\n}\n\n.product-images {\n  text-align: center;\n\n  @include breakpoint(l-up) {\n    @include with-layout($product) { @include span(first 9 of 16); }\n  }\n}\n\n.product-info {\n  @include breakpoint(l-up) {\n    @include with-layout($product) { @include span(last 7 of 16); }\n  }\n\n  .form {\n    margin-bottom: $gutter * 1.5;\n    border-bottom: 1px solid $border-color;\n  }\n}\n\n.product-header {\n  margin-bottom: 20px;\n}\n\n.product-title {\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 28px;\n\n  @include breakpoint(m) {\n    font-size: 20px;\n  }\n}\n\n.product-brand {\n  display: block;\n  font-family: $primary-font;\n  color: $lighter-text;\n\n  .product-header & {\n    margin-bottom: 8px;\n    font-size: 15px;\n  }\n}\n\n// Product Detail Styles\n.product-detail-container {\n  margin-bottom: $gutter * 1.5;\n}\n\n.product-detail {\n  margin-bottom: $gutter / 3;\n  font-family: $primary-font;\n  color: $lightest-text;\n}\n\n.product-detail-key {\n  font-weight: bold;\n  color: $section-title-color;\n\n  &:after {\n    content: \":\";\n  }\n}\n\n// Product Share & Wishlist\n.product-share-container {\n  @extend %clearfix;\n\n  .share-buttons-nav {\n    float: left;\n  }\n\n  .wishlist {\n    float: right;\n    font-family: $primary-font;\n    font-weight: bold;\n\n    .icon-wishlist {\n      width: 15px;\n      height: 15px;\n      margin-right: 5px;\n      vertical-align: text-bottom;\n    }\n  }\n}\n\n// Custom Fields\n.product-details-name,\n.product-details-value {\n  display: inline-block;\n  margin: 0;\n}\n\n.product-details-name {\n  margin-right: 4px;\n  font-weight: bold;\n}\n\n// Product Image Thumbnails\n// Todo: put a height on the image container so they don't jump up and down\n.product-thumbnails {\n  margin-top: 20px;\n  margin-bottom: $gutter * 2;\n  font-size: 0;\n  text-align: center;\n}\n\n.product-thumbnail {\n  position: relative;\n  z-index: 0;\n  display: inline-block;\n  margin-right: $gutter;\n  margin-bottom: $gutter;\n  cursor: pointer;\n\n  &:last-of-type {\n    margin-right: 0;\n  }\n\n  > img {\n    display: block;\n    max-height: 40px;\n  }\n\n  &.active:after {\n    position: absolute;\n    top: -4px;\n    right: -4px;\n    bottom: -4px;\n    left: -4px;\n    z-index: -1;\n    display: block;\n    border: 2px solid $check-border-color;\n    border-radius: 3px;\n    content: \"\";\n  }\n}\n\n// Product Reviews\n.product-reviews {\n  @include container(900px);\n\n  .product-review-heading {\n    margin-bottom: 10px;\n  }\n\n  > .rating-stars {\n    width: 100%;\n    text-align: center;\n\n    svg {\n      width: 18px;\n      height: 18px;\n    }\n  }\n}\n\n.rating-header {\n  @extend %clearfix;\n  margin-top: 40px;\n  margin-bottom: 10px;\n\n  .rating-summary {\n    @include breakpoint(s) {\n      margin-bottom: 25px;\n    }\n\n    @include breakpoint(m-up) {\n      float: left;\n    }\n  }\n\n  .review-link {\n    @include breakpoint(m-up) {\n      float: right;\n    }\n  }\n}\n\n.review-item {\n  padding-top: 40px;\n  padding-bottom: 40px;\n  font-size: 14px;\n  border-bottom: 1px solid $border-color;\n\n  &.supplementary {\n    display: none;\n\n    .all-reviews-visible & { display: block; }\n  }\n\n  &:last-of-type {\n    padding-bottom: 0;\n    border-bottom: 0;\n  }\n}\n\n.view-all-reviews-button {\n  margin-top: 20px;\n}\n\n.review-item-score {\n  @extend %visually-hidden;\n}\n\n.review-item-title {\n  margin-top: 5px;\n  margin-bottom: 5px;\n  font-size: 18px;\n}\n\n.review-item-meta {\n  margin-bottom: 20px;\n  color: $lightest-text;\n}\n\n// Error container\n.product-review-messages > .alert {\n  margin-bottom: $gutter * 2;\n}\n\n/* scss-combine:pages/collections */\n.collection {\n  position: relative;\n\n  .page-heading {\n    @include breakpoint(m) {\n      margin-top: 15px;\n      margin-bottom: 20px;\n    }\n\n    @include breakpoint(l-up) {\n      margin-top: 0;\n      margin-bottom: 50px;\n    }\n  }\n}\n\n.form-field-product-sort {\n  @include breakpoint(m) { margin-bottom: $gutter / 2; }\n}\n\n.sort-by,\n.facet-clear-all {\n  @include breakpoint(m) {\n    display: block;\n    margin-right: auto;\n    margin-left: auto;\n    text-align: center;\n  }\n}\n\n.sort-by {\n  @include breakpoint(l-up) {\n    position: absolute;\n    top: $gutter * 2;\n    right: $gutter * 2;\n    text-align: right;\n  }\n\n  .form-select-wrapper {\n    display: inline-block;\n    min-height: 30px;\n    padding: 4px ($gutter * 2) 4px ($gutter * 2 / 3);\n    font-size: 13px;\n    text-align: left;\n  }\n}\n\n.facet-clear-all {\n  padding-top: 5px;\n  padding-bottom: 5px;\n  font-family: $primary-font;\n\n  @include breakpoint(m) {\n    max-width: 150px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    text-align: center;\n  }\n\n  @include breakpoint(l-up) {\n    position: absolute;\n    top: $gutter * 2;\n    left: ($gutter * 2) + 10;\n  }\n}\n\n.collection-sidebar {\n  @include breakpoint(m) {\n    @include span(12 of 12);\n    margin-bottom: 40px;\n  }\n\n  @include breakpoint(l-up) {\n    @include span(first 2.5 of 12);\n    padding-right: 10px;\n  }\n}\n\n.collection-product-listing,\n.category-description {\n  @include breakpoint(m) {\n    @include span(12 of 12);\n    margin-bottom: 40px;\n  }\n\n  @include breakpoint(l-up) {\n    @include span(12 of 12);\n\n    &.with-sidebar {\n      @include span(last 9.5 of 12);\n      padding-left: 50px;\n      border-left: 1px solid $border-color;\n    }\n  }\n}\n\n.facet-section-heading,\n.sidebar-section-heading,\n.shop-by-item,\n.category-nav-list-item,\n.facet-option > li,\n.form-range-facet ,\n.nav-list li {\n  @include breakpoint(l-up) {\n    padding-left: 10px;\n  }\n}\n\n.facet-section-heading,\n.sidebar-section-heading {\n  position: relative;\n  margin-top: $gutter;\n  margin-bottom: $gutter;\n  font-size: 14px;\n  user-select: none;\n\n  .facet-toggle {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n}\n\n.shop-by {\n  margin-bottom: 20px;\n  border-bottom: 1px solid $border-color;\n\n  &:last-of-type { border-bottom: 0; }\n}\n\n.facet-toggle {\n  cursor: pointer;\n\n  .icon-close-small {\n    // scss-lint:disable PropertySortOrder\n    position: absolute;\n    top: 50%;\n    right: 0;\n    width: 16px;\n    height: 16px;\n    vertical-align: text-bottom;\n    transform: translateY(-50%) rotate(0);\n    transition: all 0.2s $ease-out-quad;\n\n    // Increase click area size\n    padding: 6px;\n    box-sizing: content-box;\n  }\n\n  &.is-open .icon-close-small {\n    transform: translateY(-50%) rotate(45deg);\n  }\n}\n\n.facet-filter-wrapper {\n  display: none;\n\n  &.is-open {\n    display: block;\n  }\n}\n\n.facet-option,\n.shop-by-list,\n.category-nav-list,\n.nav-list {\n  display: none;\n  margin-bottom: 20px;\n\n  &.is-open {\n    display: block;\n  }\n\n  > li {\n    padding-top: 3px;\n    padding-bottom: 3px;\n    margin-bottom: 2px;\n\n    &:last-of-type { margin-bottom: 0; }\n\n    > a {\n      display: block;\n      letter-spacing: 0.025em;\n      color: $lighter-text;\n    }\n\n    &.facet-selected,\n    &.is-active {\n      background-color: $input-background-color;\n\n      @include breakpoint(m) {\n        padding-right: $gutter / 2;\n        padding-left: $gutter / 2;\n      }\n    }\n  }\n\n  .facet-more {\n    display: none;\n    font-size: 12px;\n    text-transform: uppercase;\n  }\n\n  .hidden + .facet-more { display: block;}\n}\n\n.facet-option {\n  display: block;\n}\n\n.shop-by-list,\n.category-nav-list { display: block; }\n\n.facet-clear {\n  float: right;\n  font-weight: normal;\n}\n\n.facet-filter,\n.category-nav {\n  border-bottom: 1px solid $border-color;\n\n  @include breakpoint(m) { clear: left; }\n\n  &:last-of-type { border-bottom: 0; }\n}\n\n.form-field-range {\n  @include container();\n\n  .field-min { @include span(first 6 of 12); }\n  .field-max { @include span(last 6 of 12); }\n\n  .form-field-control { margin-bottom: $gutter / 2; }\n\n  .form-input {\n    padding-right: 5px;\n    padding-left: 5px;\n    text-align: center;\n\n    &::placeholder { text-align: center;}\n    &::-webkit-outer-spin-button,\n    &::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n    }\n  }\n\n  .button { width: 100%; }\n}\n\n.facet-rating {\n  .product-rating {\n    display: inline-block;\n    vertical-align: text-top;\n  }\n\n  .rating-count {\n    color: $lightest-text;\n  }\n\n  .rating-label {\n    display: block;\n  }\n}\n\n// Collection Empty\n.collection-empty {\n  text-align: center;\n\n  .search-again {\n    margin-bottom: 25px;\n    font-size: $font-size;\n    font-weight: normal;\n  }\n\n  .faceted-search-form {\n    margin-bottom: 100px;\n  }\n\n  .faceted-search-input,\n  .faceted-search-submit {\n    display: inline-block;\n    margin-bottom: $gutter;\n  }\n\n  .faceted-search-input {\n    height: 42px;\n    max-width: 350px;\n    margin-right: $gutter;\n  }\n\n  .faceted-search-input { width: 250px; }\n}\n\n.faceted-show-more-button {\n  display: block;\n  padding-left: 10px;\n  margin-bottom: $gutter;\n\n  .toggle-link-text-on {\n    display: none;\n  }\n}\n\n[data-collection-sidebar] {\n  .loading {\n    display: none;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    background: #fff;\n    opacity: 0.8;\n\n    &.visible {\n      display: block;\n    }\n  }\n}\n\n.category-image {\n  display: block;\n  margin: 0 auto $gutter * 2;\n}\n/* scss-combine:pages/compare */\n.compare-content {\n  @include breakpoint(m) {\n    overflow-x: auto;\n  }\n}\n\n.header-column {\n  background-color: transparent;\n\n  @include breakpoint(m) {\n    display: none;\n  }\n\n  @include breakpoint(l-up) {\n    max-width: 115px;\n  }\n}\n\n.compare-table {\n  text-align: center;\n  border-width: 0;\n\n  .button {\n    width: 100%;\n    max-width: 200px;\n    padding: 11px 0 10px;\n    margin: 10px 0;\n    font-size: 13px;\n  }\n}\n\n.compare-empty-cell { border: 0; }\n\n.compare-table-cell,\n.compare-table-heading,\n.compare-empty-cell {\n  padding: 18px 20px;\n  border-top: 1px solid $border-color;\n  border-left: 0;\n\n  .compare-main-row & {\n    padding-bottom: 0;\n    text-align: left;\n    border-top: 0;\n  }\n\n  .compare-quickshop-row & {\n    padding-top: 0;\n    border-top: 0;\n  }\n}\n\n.compare-table-cell {\n  min-width: 230px;\n\n  &:last-of-type { padding-right: 0; }\n}\n\n.compare-table-heading {\n  padding-left: 0;\n  text-align: left;\n  vertical-align: top;\n}\n\n.compare-remove {\n  display: block;\n}\n\n.compare-description-row,\n.compare-availability-row {\n  text-align: left;\n  vertical-align: top;\n}\n\n.compare-rating-row {\n  .compare-no-rating {\n    opacity: 0.6;\n  }\n}\n\n/* scss-combine:pages/contact */\n.page-message-area {\n  padding-bottom: $gutter;\n  margin-bottom: $gutter * 2;\n  border-bottom: 1px solid $border-color;\n}\n\n.contact-us {\n  .form { @include container; }\n\n  .form-field-text,\n  .form-field-email {\n    @include breakpoint(l-up) {\n      &:nth-of-type(odd) { @include span(first 6 of 12); }\n      &:nth-of-type(even) { @include span(last 6 of 12); }\n    }\n  }\n\n  .form-field-multiline {\n    clear: both;\n  }\n}\n\n// scss-lint:disable PlaceholderInExtend\n.button-contact-submit { @extend .button-primary; }\n\n/* scss-combine:pages/errors */\n.error-page {\n  p { text-align: center; }\n}\n\n.error-search-form {\n  margin-top: $gutter * 2;\n  text-align: center;\n\n  .form-input {\n    display: inline-block;\n    max-width: 350px;\n    height: 42px;\n    margin-right: $gutter;\n  }\n}\n\n/* scss-combine:pages/brands */\n.brands-grid {\n  @include container;\n}\n\n.brand-item {\n  text-align: center;\n\n  @include breakpoint(m) { @include gallery(6 of 12); }\n  @include breakpoint(l-up) { @include gallery(4 of 12); }\n}\n\n/* scss-combine:pages/sitemap */\n.sitemap-content {\n  @include container(960px);\n}\n\n.sitemap-group {\n  @include breakpoint(m-up) {\n    @include gallery(6 of 12);\n  }\n\n  @include breakpoint(l-up) {\n    @include gallery(4 of 12);\n  }\n\n  > ul {\n    margin-bottom: $gutter * 2;\n\n    ul {\n      margin-bottom: $gutter / 2;\n      margin-left: $gutter / 2;\n    }\n  }\n\n  li { margin: $gutter / 4 0; }\n\n  a { color: inherit; }\n}\n\n.sitemap-title {\n  @extend %section-title-text-treatment;\n  font-size: 20px;\n}\n\n\n// Cart\n/* scss-combine:cart/cart-content */\n.cart-container {\n  @extend %content-padding;\n  @include container();\n  margin-top: $gutter * 3;\n  margin-bottom: $gutter * 3;\n}\n\n.cart-header {\n  @extend %section-title-text-treatment;\n  margin-bottom: $gutter * 3;\n  font-size: 11px;\n  font-weight: normal;\n  color: $lightest-text;\n  text-transform: uppercase;\n\n  .cart-product {\n    @include span(first 7 of 12);\n  }\n\n  .cart-each,\n  .cart-quantity,\n  .cart-total {\n    @include breakpoint(s) { display: none; }\n  }\n}\n\n.cart-cell {\n  // Stops empty cells from collapsing\n  min-height: 1px;\n}\n\n.cart-image {\n  @include breakpoint(s) { @include span(first 3 of 12); }\n  @include breakpoint(m-up) { @include span(first 1.5 of 12); }\n}\n\n.cart-product {\n  @include breakpoint(s) { margin-bottom: $gutter; }\n  @include breakpoint(m-up) { @include span(5.5 of 12); }\n}\n\n.cart-product,\n.cart-each,\n.cart-total {\n  @include breakpoint(s) {\n    @include span(last 9 of 12);\n    padding-right: $gutter;\n  }\n}\n\n.cart-header,\n.cart-row {\n  @include container();\n\n  .cart-each,\n  .cart-quantity,\n  .cart-total {\n    @include breakpoint(m-up) {\n      @include span(1.5 of 12);\n      text-align: center;\n    }\n  }\n\n  .cart-remove {\n    @include breakpoint(m-up) { @include span(last 0.5 of 12); }\n  }\n}\n\n.cart-row {\n  position: relative;\n  margin-bottom: $gutter * 2;\n\n  &:last-of-type { margin-bottom: 0; }\n\n  .cart-product,\n  .cart-each,\n  .cart-quantity,\n  .cart-total {\n    font-size: 14px;\n    color: $lighter-text;\n  }\n\n  .cart-each,\n  .cart-total,\n  .cart-remove {\n    @include breakpoint(m-up) { line-height: 40px; };\n  }\n\n  .cart-total {\n    @include breakpoint(s) { margin-bottom: 20px; }\n  }\n\n  .cart-item-name {\n    @extend %heading-text-treatment;\n    display: block;\n    color: $accent-color;\n  }\n\n  .cart-item-options {\n    @extend %clearfix;\n    font-size: 12px;\n    color: $lighter-text;\n\n    dt,\n    dd {\n      display: inline-block;\n      float: left;\n    }\n\n    dt { clear: left; }\n    dd { margin-left: 2px; }\n  }\n\n  .gift-wrap {\n    margin-top: $gutter;\n    font-size: 11px;\n\n    > dt,\n    > dd {\n      display: inline-block;\n      margin: 0;\n    }\n\n    > dt { font-weight: bold; }\n    > dd { margin-right: 2px; }\n  }\n\n  .cart-price-label {\n    margin-right: 5px;\n\n    @include breakpoint(m-up) {\n      display: none;\n    }\n  }\n}\n\n.cart-quantity {\n  @include breakpoint(s) {\n    position: absolute;\n    right: 0;\n    bottom: 0;\n    width: 100px;\n    text-align: center;\n  }\n\n  .form-field-quantity-control {\n    margin-right: 0;\n    margin-bottom: 4px;\n\n    @include breakpoint(s) { display: block; }\n  }\n}\n\n.cart-update-quantity {\n  font-size: 11px;\n  color: $accent-color;\n  cursor: pointer;\n}\n\n.cart-remove {\n  @include breakpoint(s) {\n    position: absolute;\n    top: 0;\n    right: 0;\n  }\n\n  > a { color: $body-color; }\n\n  .icon-close {\n    width: 12px;\n    height: 12px;\n  }\n}\n\n// Empty Cart\n.cart-empty {\n  .cart-container {\n    padding-bottom: 100px;\n    margin-bottom: 0;\n    text-align: center;\n    border-bottom: 1px solid $border-color;\n  }\n}\n\n.empty-cart-message {\n  margin-bottom: $gutter * 2;\n  color: $lighter-text;\n}\n\n.price-discounted {\n  text-decoration: line-through;\n}\n/* scss-combine:cart/cart-footer */\n.cart-footer {\n  @include container();\n  padding-top: $gutter * 2;\n  margin-top: $gutter * 3;\n  font-family: $primary-font;\n  border-top: 1px solid $border-color;\n}\n\n// Continue Shopping\n.continue-shopping {\n  @include breakpoint(s) {\n    @include span(12 of 12);\n    text-align: center;\n  }\n\n  @include breakpoint(m-only) { @include span(first 6 of 12); }\n  @include breakpoint(l-up) { @include span(first 4 of 12); }\n  margin-top: $gutter;\n\n  > a {\n    font-size: 14px;\n    letter-spacing: 0.05em;\n  };\n}\n\n// Cart Totals\n.cart-totals {\n  @include breakpoint(s) { @include span(12 of 12); }\n  @include breakpoint(m-only) { @include span(last 6 of 12); }\n  @include breakpoint(l-up) { @include span(last 4 of 12); }\n  margin-bottom: $gutter * 4;\n}\n\n.cart-totals-rows {\n  margin-bottom: $gutter * 2;\n}\n\n.cart-totals-row {\n  @include container();\n  margin-bottom: $gutter;\n\n  &:last-of-type { margin-bottom: 0; }\n\n  .form-field { @include container(); }\n}\n\n.cart-totals-label {\n  @include span(first 8 of 12);\n  font-size: 14px;\n}\n\n.cart-totals-value {\n  @include span(last 4 of 12);\n  font-size: 15px;\n  color: $lighter-text;\n  text-align: right;\n}\n\n.order-total {\n  padding-top: $gutter;\n  font-weight: bold;\n  border-top: 1px solid $border-color;\n\n  .cart-totals-label {\n    font-size: 11px;\n    letter-spacing: 0.05em;\n    color: $body-color;\n    text-transform: uppercase;\n  }\n\n  .cart-totals-value {\n    font-size: 17px;\n    color: $body-color;\n  }\n}\n\n.cart-actions-row {\n  .button {\n    width: 100%;\n  }\n}\n\n.form-gift-certificate,\n.form-coupon-code {\n  @include container;\n\n  .form-input {\n    @include span(first 9 of 12);\n    height: 38px;\n    line-height: 38px;\n  }\n\n  .button {\n    @include span(last 3 of 12);\n    height: 38px;\n    min-width: 0;\n    padding: 0;\n    line-height: 38px;\n  }\n}\n\n.cart-coupon-codes,\n.cart-gift-certificates {\n  margin-bottom: 5px;\n\n  .cart-code-remove {\n    font-size: 12px;\n  }\n}\n\n.form-shipping {\n  display: none;\n  padding: $gutter;\n  margin-top: $gutter;\n  margin-bottom: $gutter;\n  background-color: lighten($input-background-color, 2.5%);\n\n  .visible & {\n    display: block;\n  }\n\n  .label-state { @include span(first 7 of 12); }\n  .label-zip { @include span(last 5 of 12); }\n\n  .form-input { background: $white; }\n}\n\n.shipping-toggle {\n  float: right;\n  color: $accent-color;\n  cursor: pointer;\n}\n\n.shipping-quotes {\n  .form-field {\n    padding: $gutter;\n    background-color: lighten($input-background-color, 2.5%);\n  }\n\n  .form-label-text {\n    .ups-shipping-badge {\n      vertical-align: middle;\n      margin-top: -2px;\n      margin-right: 3px;\n    }\n  }\n}\n\n// workaround to override funky formatting of paypal button\n.additional-checkout-buttons {\n  @extend %clearfix;\n  text-align: center;\n\n  // scss-lint:disable ImportantRule, QualifyingElement\n  p { float: none !important; }\n\n  form { clear: both;}\n}\n\n/* scss-combine:cart/giftwrap */\n.giftwrap-modal {\n  max-width: 600px;\n  opacity: 0;\n  transition: opacity 0.2s $ease-out-quad;\n\n  // for fading in once the ajax request has completed\n  .modal-wrapper.loaded & { opacity: 1; }\n}\n\n.giftwrap-single,\n.giftwrap-multiple {\n  .form-label {\n    @include container();\n  }\n\n  .form-field-title {\n    @include breakpoint(m-only) { @include span(first 3 of 12); }\n    @include breakpoint(l-up) { @include span(first 2 of 12); }\n  }\n\n  .form-field-control {\n    @include breakpoint(m-only) { @include span(last 9 of 12); }\n    @include breakpoint(l-up) { @include span(last 10 of 12); }\n  }\n\n  .form-select-wrapper,\n  .form-input {\n    max-width: 400px;\n  }\n}\n\n.giftwrap-form {\n  .form-radio + .form-label-text {\n    font-weight: bold;\n  }\n}\n\n.giftwrap-meta {\n  display: block;\n  margin-top: 5px;\n  color: $lighter-text;\n}\n\n/* scss-combine:cart/apple-pay-button */\n.apple-pay-checkout-button {\n  display: none;\n  height: 42px;\n  background: {\n    position: 50% 50%;\n    repeat: no-repeat;\n    size: 100% 60%;\n  }\n  border-radius: 3px;\n\n  @if stencilString(\"apple_pay_style\") == \"white\" {\n    background-color: white;\n    background-image: -webkit-named-image(apple-pay-logo-black);\n  } @else if stencilString(\"apple_pay_style\") == \"white-border\" {\n    background-color: white;\n    background-image: -webkit-named-image(apple-pay-logo-black);\n    border: 0.5px solid black;\n  } @else {\n    background-image: -webkit-named-image(apple-pay-logo-white);\n    background-color: black;\n  }\n\n  .additional-checkout-buttons & {\n    margin-bottom: 15px;\n  }\n\n  .apple-pay-supported & {\n    display: block;\n  }\n}\n\n// Modules\n/* scss-combine:modules/flickity */\n/*! Flickity v2.0.5\nhttp://flickity.metafizzy.co\n---------------------------------------------- */\n\n.flickity-enabled {\n  position: relative;\n}\n\n.flickity-enabled:focus {\n  outline: none;\n}\n\n.flickity-viewport {\n  overflow: hidden;\n  position: relative;\n  height: 100%;\n}\n\n.flickity-slider {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n\n/* draggable */\n\n.flickity-enabled.is-draggable {\n  -webkit-tap-highlight-color: transparent;\n  tap-highlight-color: transparent;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n.flickity-enabled.is-draggable .flickity-viewport {\n  cursor: move;\n  cursor: -webkit-grab;\n  cursor: grab;\n}\n\n.flickity-enabled.is-draggable .flickity-viewport.is-pointer-down {\n  cursor: -webkit-grabbing;\n  cursor: grabbing;\n}\n\n/* ---- previous/next buttons ---- */\n\n.flickity-prev-next-button {\n  position: absolute;\n  top: 50%;\n  width: 44px;\n  height: 44px;\n  border: none;\n  border-radius: 50%;\n  background: white;\n  background: hsla(0, 0%, 100%, 0.75);\n  cursor: pointer;\n  /* vertically center */\n  -webkit-transform: translateY(-50%);\n  transform: translateY(-50%);\n}\n\n.flickity-prev-next-button:hover {\n  background: white;\n}\n\n.flickity-prev-next-button:focus {\n  outline: none;\n  box-shadow: 0 0 0 5px #09F;\n}\n\n.flickity-prev-next-button:active {\n  opacity: 0.6;\n}\n\n.flickity-prev-next-button.previous {\n  left: 10px;\n}\n\n.flickity-prev-next-button.next {\n  right: 10px;\n}\n\n/* right to left */\n.flickity-rtl .flickity-prev-next-button.previous {\n  left: auto;\n  right: 10px;\n}\n\n.flickity-rtl .flickity-prev-next-button.next {\n  right: auto;\n  left: 10px;\n}\n\n.flickity-prev-next-button:disabled {\n  opacity: 0.3;\n  cursor: auto;\n}\n\n.flickity-prev-next-button svg {\n  position: absolute;\n  left: 20%;\n  top: 20%;\n  width: 60%;\n  height: 60%;\n}\n\n.flickity-prev-next-button .arrow {\n  fill: #333;\n}\n\n/* ---- page dots ---- */\n\n.flickity-page-dots {\n  position: absolute;\n  width: 100%;\n  bottom: -25px;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  text-align: center;\n  line-height: 1;\n}\n\n.flickity-rtl .flickity-page-dots {\n  direction: rtl;\n}\n\n.flickity-page-dots .dot {\n  display: inline-block;\n  width: 10px;\n  height: 10px;\n  margin: 0 8px;\n  background: #333;\n  border-radius: 50%;\n  opacity: 0.25;\n  cursor: pointer;\n}\n\n.flickity-page-dots .dot.is-selected {\n  opacity: 1;\n}\n\n/* scss-combine:modules/mosaic */\n// mosaic-item tiles are 0 indexed\n\n// mosaic layout\n.mosaic {\n  position: relative;\n  z-index: index($elements, mosaic);\n  width: 100%;\n  margin-top: -1px;\n}\n\n.mosaic-item {\n  position: absolute;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n.mosaic-count-1 {\n  .mosaic-item-0 {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n}\n\n@include breakpoint(s) {\n  .mosaic-item {\n    position: relative;\n    // scss-lint:disable ImportantRule\n    background-image: none !important;\n  }\n}\n\n@include breakpoint(m-only) {\n  .mosaic {\n    display: block;\n    padding-top: 200%;\n  }\n\n  // initial mosaic item is almost always displayed the same on medium screens\n  .mosaic-item-0 {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 50%;\n  }\n\n  // layout for 1 tile\n  .mosaic-count-1 {\n    padding-top: 100%;\n  }\n\n  // layout for 2 tiles\n  .mosaic-count-2 {\n    .mosaic-item-1 {\n      bottom: 0;\n      left: 0;\n      width: 100%;\n      height: 50%;\n    }\n  }\n\n  // layout for 3 tiles\n  .mosaic-count-3 {\n    padding-top: 150%;\n\n    .mosaic-item-0 { height: 66.7%; }\n\n    .mosaic-item-1,\n    .mosaic-item-2 {\n      bottom: 0;\n      width: 50%;\n      height: 33.3%;\n    }\n\n    .mosaic-item-1 { left: 0; }\n    .mosaic-item-2 { left: 50%; }\n  }\n\n  // layout for 4 tiles\n  .mosaic-count-4 {\n    .mosaic-item-1,\n    .mosaic-item-2,\n    .mosaic-item-3 { height: 25%; }\n\n    .mosaic-item-1,\n    .mosaic-item-2 {\n      bottom: 0;\n      width: 50%;\n    }\n\n    .mosaic-item-1 { left: 0; }\n    .mosaic-item-2 { left: 50%; }\n\n    .mosaic-item-3 {\n      top: 50%;\n      left: 0;\n      width: 100%;\n    }\n  }\n\n  // layout for 5 tiles\n  .mosaic-count-5 {\n    .mosaic-item-1,\n    .mosaic-item-2,\n    .mosaic-item-3,\n    .mosaic-item-4 {\n      width: 50%;\n      height: 25%;\n    }\n\n    .mosaic-item-1,\n    .mosaic-item-2 { top: 50%; }\n\n    .mosaic-item-3,\n    .mosaic-item-4 { bottom: 0; }\n\n    .mosaic-item-1 { left: 0; }\n    .mosaic-item-2 { left: 50%; }\n    .mosaic-item-3 { left: 0; }\n    .mosaic-item-4 { left: 50%; }\n  }\n}\n\n\n@include breakpoint(l-up) {\n  .mosaic {\n    padding-top: 50%;\n  }\n\n  // layout for 2 tiles\n  .mosaic-count-2 {\n    .mosaic-item-0,\n    .mosaic-item-1 {\n      top: 0;\n      width: 50%;\n      height: 100%;\n    }\n\n    .mosaic-item-0 { left: 0; }\n    .mosaic-item-1 { left: 50%; }\n  }\n\n  // layout for 3 tiles\n  .mosaic-count-3 {\n    .mosaic-item-0,\n    .mosaic-item-1,\n    .mosaic-item-2 { width: 50%; }\n\n    .mosaic-item-0 {\n      top: 0;\n      left: 0;\n      height: 100%;\n    }\n\n    .mosaic-item-1,\n    .mosaic-item-2 {\n      left: 50%;\n      height: 50%;\n    }\n\n    .mosaic-item-1 { top: 0; }\n    .mosaic-item-2 { top: 50%; }\n  }\n\n  // layout for 4 tiles\n  .mosaic-count-4 {\n    .mosaic-item-0 {\n      top: 0;\n      left: 0;\n      width: 50%;\n      height: 100%;\n    }\n\n    .mosaic-item-1,\n    .mosaic-item-2,\n    .mosaic-item-3 { height: 50%; }\n\n    .mosaic-item-1,\n    .mosaic-item-2 {\n      top: 0;\n      width: 25%;\n      height: 50%;\n    }\n\n    .mosaic-item-1 { left: 50%; }\n    .mosaic-item-2 { left: 75%; }\n\n    .mosaic-item-3 {\n      top: 50%;\n      left: 50%;\n      width: 50%;\n    }\n  }\n\n  // layout for 5 tiles\n  .mosaic-count-5 {\n    .mosaic-item-0 {\n      top: 0;\n      left: 0;\n      width: 50%;\n      height: 100%;\n    }\n\n    .mosaic-item-1,\n    .mosaic-item-2,\n    .mosaic-item-3,\n    .mosaic-item-4 {\n      width: 25%;\n      height: 50%;\n    }\n\n    .mosaic-item-1,\n    .mosaic-item-2 { top: 0; }\n\n    .mosaic-item-3,\n    .mosaic-item-4 { top: 50%; }\n\n    .mosaic-item-1 { left: 50%; }\n    .mosaic-item-2 { left: 75%; }\n    .mosaic-item-3 { left: 50%; }\n    .mosaic-item-4 { left: 75%; }\n  }\n}\n\n// Mosaic item text\n\n.mosaic-item-heading,\n.mosaic-item-caption {\n  color: $mosaic-text-color;\n}\n\n.mosaic-button {\n  color: $mosaic-button-text;\n  background-color: $mosaic-button-background;\n  border-color: $mosaic-button-background;\n}\n\n.mosaic-item-info {\n  position: absolute;\n  top: 50%;\n  right: $gutter * 2;\n  left: $gutter * 2;\n  text-align: center;\n  transform: translateY(-50%);\n\n  .mosaic-item-heading {\n    margin-top: 0;\n    margin-bottom: 10px;\n    font-size: 30px;\n  }\n\n  .mosaic-item-caption {\n    margin-top: 10px;\n    margin-bottom: 10px;\n    font-size: 20px;\n    @include breakpoint(l-up) { font-size: 15px; }\n  }\n}\n\n.mosaic-item-link {\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  width: 100%;\n  height: 100%;\n}\n\n// Mosaic Image -- Only for Small screens\n\n.mosaic-item-image {\n  display: block;\n  width: 100%;\n  max-width: none;\n\n  @include breakpoint(m-up) {\n    display: none;\n  }\n}\n\n/* scss-combine:modules/slideshow */\n// Carousel\n.slideshow {\n  width: 100%;\n  height: 100%;\n  overflow: visible;\n  clear: both;\n}\n\n.flickity-viewport {\n  position: relative;\n\n  @include maintain-ratio(1.5 1);\n  background-size: cover;\n\n  .ratio-3-1 & {\n    @include maintain-ratio(3 1);\n  }\n\n  .ratio-16-9 & {\n    @include maintain-ratio(16 9);\n  }\n\n  @include breakpoint(xs) {\n    @include maintain-ratio;\n  }\n}\n\n.slideshow-item {\n  background-position: center top;\n  padding-bottom: 0;\n\n  @include maintain-ratio(1.5 1);\n  background-size: cover;\n\n  .ratio-3-1 & {\n    @include maintain-ratio(3 1);\n    background-position: center center;\n  }\n\n  .ratio-16-9 & {\n    @include maintain-ratio(16 9);\n    background-position: center center;\n  }\n\n  @include breakpoint(xs) {\n    @include maintain-ratio;\n    background-position: center center;\n  }\n}\n\n// slideshow item text\n\n.slideshow-item-heading,\n.slideshow-item-caption {\n  color: $mosaic-text-color;\n}\n\n.slideshow-button {\n  color: $mosaic-button-text;\n  background-color: $mosaic-button-background;\n  border-color: $mosaic-button-background;\n}\n\n.slideshow-item-info {\n  position: absolute;\n  top: 50%;\n  right: $gutter * 2;\n  left: $gutter * 2;\n  text-align: center;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 1);\n  transform: translateY(-50%);\n\n  .slideshow-item-heading {\n    margin-top: 0;\n    margin-bottom: 10px;\n    font-size: 30px;\n  }\n\n  .slideshow-item-caption {\n    margin-top: 10px;\n    margin-bottom: 10px;\n    font-size: 20px;\n    @include breakpoint(l-up) {\n      font-size: 15px;\n    }\n  }\n}\n\n.slideshow-item-link {\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  width: 100%;\n  height: 100%;\n}\n\n.flickity-page-dots {\n  bottom: $gutter;\n\n  .dot {\n    background: $accent-color;\n  }\n}\n\n/* scss-combine:modules/account */\n// scss-lint:disable PlaceholderInExtend\n// Variables\n\n$account-light-color: $input-background-color;\n$account-accent-color: $accent-color;\n$account-border-color: $border-color;\n$account-gutter: $gutter;\n$account-font-size: $font-size;\n\n/* scss-combine:../core/account */\n// Default Variables\n\n$account-link-color: #888 !default;\n$account-light-color: #fff !default;\n$account-accent-color: #5dc5e3 !default;\n$account-border-color: #e4e4e4 !default;\n$account-gutter: 30px !default;\n$account-font-size: 15px !default;\n$account-border-radius: 0 !default;\n$account-text-color: #5f5f5f !default;\n\n$account-card-background-color: #f5f5f5 !default;\n\n$giftcard-nav-use-default-styles: true !default;\n\n$account-breakpoint-x-small: 400px !default; // the account table columns change to full-width\n$account-breakpoint-small: 620px !default; // menu changes from full-width to column\n$account-breakpoint-medium: 900px !default; // menu changes from 35% to 25% width\n\n// Internal Variables\n\n$account-font-size-heading: $account-font-size + 2 !default;\n\n$account-text-color-light: lighten($account-text-color,20%) !default;\n\n$account-gutter-inner: $account-gutter / 2 !default;\n\n$auth-gutter: $account-gutter !default;\n$auth-font-size: $account-font-size !default;\n\n// Imports\n\n/* scss-combine:account/components/layout */\n.account-wrapper {\n  @extend %clearfix;\n  font-size: $account-font-size;\n}\n\n.account-nav,\n.account-body {\n  vertical-align: top;\n}\n\n.account-body {\n  @media screen and (min-width: $account-breakpoint-small) {\n    float: right;\n    width: 65%;\n    padding-left: $account-gutter-inner;\n  }\n\n  @media screen and (min-width: $account-breakpoint-medium) {\n    width: 75%;\n  }\n\n  > :first-child {\n    margin-top: 0;\n  }\n\n  .account-nav-hidden & {\n    float: none;\n    width: 100%;\n    padding-left: 0;\n    margin-left: 0;\n  }\n}\n\n.account-nav {\n  @media screen and (max-width: $account-breakpoint-small - 1) {\n    margin-bottom: $account-gutter;\n  }\n\n  @media screen and (min-width: $account-breakpoint-small) {\n    float: left;\n    width: 35%;\n    padding-right: $account-gutter-inner;\n  }\n\n  @media screen and (min-width: $account-breakpoint-medium) {\n    width: 25%;\n  }\n}\n\n/* scss-combine:account/components/forms */\n.account-wrapper {\n  .form-label-text {\n    display: inline-block;\n    width: 100%;\n    margin-bottom: 5px;\n  }\n\n  .form-field-checkbox,\n  .form-field-radio {\n    .form-label-text { width: auto; }\n  }\n\n  .form-field {\n    margin-bottom: $account-gutter-inner;\n  }\n\n  .form-input {\n    width: 100%;\n\n    &.account-form-half {\n      width: 50%;\n    }\n  }\n\n  .form-actions {\n    clear: both;\n  }\n}\n\n.account-form-column-container {\n  @extend %clearfix;\n\n  .form-field {\n    @media screen and (min-width: 480px) {\n      float: left;\n      width: 50%;\n\n      &:nth-child(odd) { padding-right: $account-gutter-inner; }\n      &:nth-child(even) { padding-left: $account-gutter-inner; }\n    }\n  }\n}\n\n/* scss-combine:account/components/table */\n.account-wrapper {\n  table {\n    width: 100%;\n    margin-top: $account-gutter-inner;\n    margin-bottom: $account-gutter-inner;\n  }\n\n  td,\n  th {\n    padding: $account-gutter-inner;\n  }\n}\n\n.account-table-tight {\n  th,\n  td {\n    padding: 10px 0;\n    border-bottom: 1px solid $account-border-color;\n  }\n}\n\n/* scss-combine:account/components/list */\n// Layout\n// Each list item has 3 sections: thumbnail, body, and badge.\n\n.account-items {\n  margin-bottom: $account-gutter;\n}\n\n.account-item {\n  position: relative;\n  display: table;\n  width: 100%;\n  border-bottom: 1px solid $account-border-color;\n\n  &:first-of-type {\n    border-top: 1px solid $account-border-color;\n  }\n}\n\n.account-item-thumbnail,\n.account-item-body,\n.account-item-badge,\n.account-item-actions {\n  padding-top: $account-gutter-inner;\n  padding-bottom: $account-gutter-inner;\n\n  @media screen and (min-width: $account-breakpoint-x-small) {\n    display: table-cell;\n    vertical-align: top;\n  }\n}\n\n// Link\n// Makes the entire item clickable\n\n.account-item-link {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 100;\n}\n\n// Thumbnail\n\n.account-item-thumbnail {\n  min-width: 100px;\n\n  img {\n    height: auto;\n    max-width: 100px;\n  }\n}\n\n// Body\n\n.account-item-body {\n  width: 100%;\n\n  @media screen and (min-width: $account-breakpoint-x-small) {\n    .account-item-thumbnail + & {\n      padding-left: $account-gutter-inner;\n    }\n  }\n}\n\n.account-item-title {\n  margin-top: 3px;\n  font-size: $account-font-size;\n\n  a {\n    color: inherit;\n  }\n}\n\n.account-item-title-large {\n  font-size: $account-font-size * 1.2;\n}\n\n.account-item-description {\n  margin-top: 0;\n  margin-bottom: 5px;\n  color: $account-text-color;\n}\n\n.account-item-details {\n  @extend %clearfix;\n  font-size: $account-font-size;\n  color: $account-text-color;\n}\n\n.account-item-detail {\n  float: left;\n  margin-top: $account-gutter-inner;\n  margin-right: $account-gutter;\n}\n\n//scss-lint:disable VariableForProperty\n.account-item-detail-title {\n  display: block;\n  margin-top: 0;\n  margin-bottom: 3px;\n  font-size: 12px;\n  font-weight: normal;\n  letter-spacing: 1px;\n  color: mix($account-light-color,$account-text-color,60%);\n  text-transform: uppercase;\n}\n\n// Badge\n\n.account-item-badge,\n.account-item-actions {\n  white-space: nowrap;\n}\n\n/* scss-combine:account/components/header */\n.account-header {\n  display: table;\n  width: 100%;\n  margin-bottom: $account-gutter-inner;\n}\n\n.account-heading,\n.account-toolbar {\n  display: table-cell;\n  vertical-align: baseline;\n}\n\n.account-toolbar {\n  text-align: right;\n\n  * {\n    display: inline;\n  }\n}\n\n.account-tool {\n  position: relative;\n  z-index: 10;\n  display: inline-block;\n  padding: 0;\n  background: transparent;\n  margin-left: 10px;\n  cursor: pointer;\n  color: inherit;\n  border: 0;\n\n  &:hover { color: $account-link-color; }\n\n  &:focus { outline: 0; }\n}\n\n/* scss-combine:account/components/navigation */\n.account-nav-list {\n  padding: 0;\n  margin-bottom: $account-gutter-inner;\n  list-style: none;\n  border: 1px solid $account-border-color;\n  border-radius: $account-border-radius;\n}\n\n.account-nav-item {\n  color: $account-link-color;\n  border-top: 1px solid $account-border-color;\n\n  &:first-child {\n    border-top: 0;\n  }\n\n  &.is-active {\n    color: $account-accent-color;\n    border-left: 3px solid $account-accent-color;\n  }\n}\n\n.account-nav-link {\n  display: block;\n  padding: 15px;\n  color: inherit;\n}\n\n.account-nav-badge {\n  float: right;\n}\n\n/* scss-combine:account/components/pagination */\n.account-wrapper .pagination {\n  margin-top: $account-gutter-inner;\n}\n\n/* scss-combine:account/components/card */\n%account-card-style {\n  background: $account-card-background-color;\n\n  .form-input {\n    background-color: $account-light-color;\n  }\n}\n\n.account-card {\n  @extend %account-card-style;\n  padding: $account-gutter-inner;\n  margin: $account-gutter-inner 0;\n  border-radius: $account-border-radius;\n}\n\n/* scss-combine:account/components/toggle */\n// Set the initial toggle state to hidden\n.account-toggle-hidden {\n  display: none;\n}\n\n/* scss-combine:account/components/status */\n// Status\n// A label used to mark the status of an item\n\n.account-status {\n  padding: 6px 10px 5px;\n  margin: 0;\n  font-size: 12px;\n  font-weight: normal;\n  line-height: 1;\n  letter-spacing: 1px;\n  color: $account-light-color;\n  text-align: center;\n  text-transform: uppercase;\n  background: #8e8e8e; // TODO: Colors for each status\n}\n\n/* scss-combine:account/components/shipments */\n// Shipments\n// A list of shipments made for an order. Shown on the Order Details page.\n\n.account-shipments {\n  margin-bottom: $account-gutter;\n}\n\n.account-shipments-table {\n  th,\n  td {\n    padding: 10px 0;\n    text-align: left;\n  }\n\n  th {\n    padding: $account-gutter-inner 0 0;\n    border-top: 1px solid $account-border-color;\n  }\n\n  // Override default margins\n  .account-wrapper & {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n}\n\n\n/* scss-combine:account/pages/address */\n// Address List\n\n.account-page-add-address {\n  .account-content {\n    padding-top: $account-gutter-inner;\n    border-top: 1px solid $account-border-color;\n  }\n}\n\n.account-address-detail {\n  display: block;\n}\n\n// Add Address\n\n.account-address-form {\n  padding-top: $account-gutter-inner;\n\n  @media screen and (min-width: $account-breakpoint-medium) {\n    .form-field {\n      float: left;\n      width: 50%;\n      padding-right: $account-gutter-inner;\n\n      &:nth-of-type(2n) {\n        padding-right: 0;\n        padding-left: $account-gutter-inner;\n      }\n    }\n  }\n\n  .form-actions {\n    padding-top: $account-gutter-inner;\n  }\n}\n\n/* scss-combine:account/pages/orders-receipt */\n.account-page-orders-receipt .account-content {\n  padding-top: $account-gutter-inner;\n  border-top: 1px solid $account-border-color;\n}\n\n// Summary\n\n.account-receipt-summaries {\n  @extend %clearfix;\n}\n\n.account-receipt-summary {\n  float: left;\n  width: 33%;\n  padding-right: $account-gutter;\n}\n\n.account-receipt-summary-title {\n  margin-top: 5px;\n  margin-bottom: 10px;\n  font-size: $account-font-size;\n}\n\n.account-receipt-summary-address {\n  line-height: 1.5;\n}\n\n.account-receipt-detail {\n  margin-bottom: 5px;\n}\n\n.account-receipt-detail-title {\n  color: $account-text-color-light;\n}\n\n// Comments\n\n.account-receipt-comments {\n  white-space: pre-line;\n}\n\n// Receipt Items (products)\n\n.account-receipt-items {\n  padding-top: $account-gutter-inner;\n}\n\n.account-receipt-download {\n  margin: 10px 0;\n}\n\n// Totals\n\n.account-receipt-totals {\n  display: table;\n  width: 50%;\n  margin-left: 50%;\n}\n\n.account-receipt-total {\n  display: table-row;\n  margin-bottom: $account-gutter-inner;\n}\n\n.account-receipt-total-title,\n.account-receipt-total-value {\n  display: table-cell;\n  padding-top: $account-gutter-inner;\n  padding-bottom: $account-gutter-inner;\n  border-top: 1px solid $account-border-color;\n\n  .account-receipt-total:first-of-type & {\n    border-top: 0;\n  }\n}\n\n.account-receipt-total-title {\n  font-weight: normal;\n  letter-spacing: 1px;\n  color: $account-text-color-light;\n}\n\n.account-receipt-total-value {\n  text-align: right;\n}\n\n/* scss-combine:account/pages/recent-items */\n\n/* scss-combine:account/pages/returns */\n// Return form\n\n.account-return-table {\n  th {\n    text-align: left;\n\n    &:last-of-type {\n      text-align: right;\n    }\n  }\n\n  .form-field {\n    margin-bottom: 0;\n  }\n}\n\n.account-return-fields {\n  margin-top: $account-gutter;\n\n  .form-field-select {\n    width: 50%;\n  }\n}\n\n/* scss-combine:account/pages/wishlists */\n.account-wishlists {\n  margin-bottom: 30px;\n}\n\n/* scss-combine:account/pages/messages */\n// Listing\n\n.account-messages-table.table-clean {\n  border-bottom: 1px solid $account-border-color;\n\n  td {\n    padding-right: 0;\n    padding-left: 0;\n    vertical-align: top;\n    border-top: 1px solid $account-border-color;\n  }\n}\n\n.account-messages-table-date {\n  width: 22%;\n  text-align: right;\n}\n\n.account-message-subject {\n  margin-top: 0;\n  margin-bottom: 10px;\n  font-size: $account-font-size-heading;\n  font-weight: 500;\n\n  .account-message-is-reply &:before {\n    padding-right: 5px;\n    content: \"\\21c9\";\n  }\n\n  .account-message-is-read & {\n    color: $account-text-color-light;\n  }\n}\n\n.account-message-content {\n  padding-right: $account-gutter;\n  font-size: $account-font-size;\n  line-height: 1.5;\n  color: $account-text-color;\n  white-space: pre-line;\n\n  .account-message-is-read & {\n    color: lighten($account-text-color-light,10%);\n  }\n}\n\n.account-message-date {\n  color: $account-text-color-light;\n}\n\n// Form\n\n.account-messages-form-subject {\n  width: 50%;\n}\n\n/* scss-combine:account/pages/download */\n// List\n\n.account-download {\n  padding: $account-gutter-inner 0 0;\n  margin: $account-gutter-inner 0;\n  border-top: 1px solid $account-border-color;\n}\n\n.account-download-title {\n  margin: 0;\n  font-size: 1em;\n}\n\n.account-download-link {\n  color: inherit;\n  text-decoration: underline;\n}\n\n.account-download-filename {\n  font-size: 1.2em;\n}\n\n.account-download-filesize {\n  padding-left: 5px;\n  font-weight: normal;\n  color: $account-text-color-light;\n}\n\n.account-download-description {\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n\n.account-download-expiry {\n  font-size: 0.9em;\n  color: $account-text-color-light;\n}\n\n.account-download-expiry-item {\n  display: block;\n  padding-bottom: 5px;\n\n  &:last-of-type {\n    padding-bottom: 0;\n  }\n}\n\n// Gallery\n\n.account-downloads-gallery-image {\n  text-align: center;\n}\n\n.account-downloads-gallery-thumbs {\n  @extend %clearfix;\n  text-align: center;\n}\n\n.account-downloads-gallery-thumb {\n  display: inline-block;\n  width: 10%;\n  height: 10%;\n  padding: 0 2px;\n  vertical-align: middle;\n  cursor: pointer;\n\n  img {\n    width: 100%;\n    height: auto;\n  }\n}\n\n/* scss-combine:account/pages/invoice */\n.account-invoice-date {\n  margin-top: -20px;\n  font-size: $account-font-size;\n}\n\n// Address\n\n.account-invoice-addresses {\n  @extend %clearfix;\n  margin-top: $account-gutter;\n  margin-bottom: $account-gutter;\n}\n\n.account-invoice-address {\n  float: left;\n  margin-right: $account-gutter;\n}\n\n.account-invoice-address-title {\n  margin-top: 5px;\n  margin-bottom: 10px;\n  font-size: $account-font-size;\n}\n\n.account-invoice-address-body {\n  line-height: 1.5;\n}\n\n// List\n\n.account-invoice-table {\n  .account-wrapper & {\n    margin-bottom: 0;\n  }\n\n  th,\n  td {\n    padding-right: $account-gutter-inner;\n    text-align: left;\n    vertical-align: top;\n\n    &:nth-of-type(0n+3) {\n      width: 10%;\n    }\n\n    &:last-of-type {\n      width: 160px;\n      padding-right: 0;\n      text-align: right;\n    }\n  }\n\n  td:first-of-type {\n    width: 60px + 25px;\n  }\n}\n\n.account-invoice-item-thumbnail {\n  width: 60px;\n  height: auto;\n}\n\n.account-invoice-item-name {\n  margin-bottom: 5px;\n  font-weight: bold;\n}\n\n.account-invoice-total-title {\n  font-weight: bold;\n}\n\n// Totals\n\n.account-invoice-totals {\n  .account-wrapper & {\n    width: auto;\n    margin-top: 0;\n    margin-left: auto;\n  }\n\n  th,\n  td {\n    padding-right: $account-gutter-inner;\n\n    &:last-of-type {\n      width: 160px;\n      padding-right: 0;\n      text-align: right;\n    }\n  }\n}\n\n/* scss-combine:account/pages/settings */\n.account-page-settings {\n  .alert:first-of-type {\n    margin-top: 0;\n  }\n\n  .account-content {\n    padding-top: $account-gutter-inner;\n    border-top: 1px solid $account-border-color;\n  }\n}\n\n.account-settings-form {\n  @extend %clearfix;\n  padding-top: $account-gutter-inner;\n\n  .form-field {\n    float: left;\n    width: 50%;\n    padding-right: $account-gutter-inner / 2;\n    vertical-align: top;\n\n    &:nth-of-type(2n+0) {\n      padding-right: 0;\n      padding-left: $account-gutter-inner / 2;\n    }\n  }\n\n  .form-actions {\n    padding-top: $account-gutter-inner;\n  }\n}\n\n\n/* scss-combine:account/pages/auth-login */\n\n.account-page-login .alert {\n  max-width: 860px;\n  margin-top: 0;\n  margin-right: auto;\n  margin-bottom: $account-gutter;\n  margin-left: auto;\n}\n\n.account-login-wrapper {\n  max-width: 860px;\n  margin-right: auto;\n  margin-left: auto;\n\n  @media screen and (min-width: $account-breakpoint-small) {\n    display: table;\n    width: 100%;\n    table-layout: fixed;\n  }\n}\n\n.account-page-login .account-sub-heading {\n  margin: 0 0 20px;\n}\n\n.account-login,\n.account-create {\n  @media screen and (min-width: $account-breakpoint-small) {\n    display: table-cell;\n    vertical-align: top;\n  }\n}\n\n// Login Form\n\n.account-login {\n  @media screen and (max-width: $account-breakpoint-small - 1) {\n    margin-bottom: $account-gutter;\n  }\n\n  @media screen and (min-width: $account-breakpoint-small) {\n    padding: $account-gutter-inner (30px + $account-gutter-inner) $account-gutter-inner 0;\n  }\n}\n\n.account-login-button {\n  margin-right: $account-gutter-inner;\n}\n\n// New Account\n\n.account-create {\n  padding: $account-gutter-inner;\n  background: $account-card-background-color;\n}\n\n.account-create-intro {\n  &:empty {\n    display: none;\n  }\n}\n\n.account-create-facts {\n  padding-left: 20px;\n  margin-bottom: 30px;\n  list-style: disc;\n\n  li:empty {\n    display: none;\n  }\n}\n\n/* scss-combine:account/pages/auth-forgot */\n.account-page-forgot .account-body {\n  width: 100%;\n  max-width: 600px;\n  margin-right: auto;\n  margin-left: auto;\n  text-align: center;\n  float: none;\n}\n\n.account-forgot-form {\n  display: table;\n  width: 100%;\n  margin-top: $account-gutter;\n\n  .form-field,\n  .form-actions {\n    display: table-cell;\n    text-align: left;\n    vertical-align: bottom;\n  }\n\n  .form-actions {\n    width: 1px;\n    padding-left: 10px;\n  }\n}\n\n/* scss-combine:account/pages/auth-create */\n.account-page-create {\n  .account-header {\n    padding-bottom: $account-gutter-inner;\n    margin-bottom: $account-gutter;\n    border-bottom: 1px solid $account-border-color;\n  }\n\n  .account-body {\n    max-width: 860px;\n    margin-right: auto;\n    margin-left: auto;\n  }\n}\n\n.account-create-form {\n  .g-recaptcha > div {\n    margin: 0 auto;\n  }\n\n  @media screen and (min-width: $account-breakpoint-small) {\n    .form-field {\n      float: left;\n      width: 50%;\n      padding-right: $account-gutter-inner;\n\n      &:nth-of-type(2n) {\n        padding-right: 0;\n        padding-left: $account-gutter-inner;\n      }\n    }\n  }\n}\n\n.account-create-details,\n.account-create-address {\n  @extend %clearfix;\n  padding-bottom: $account-gutter-inner;\n  margin-bottom: $account-gutter;\n  border-bottom: 1px solid $account-border-color;\n}\n\n.account-create-form-actions {\n  text-align: center;\n}\n\n.account-create-captcha {\n  display: inline-block;\n  vertical-align: middle;\n\n  @media screen and (max-width: $account-breakpoint-small - 1) {\n    margin-bottom: $account-gutter-inner;\n  }\n\n  @media screen and (min-width: $account-breakpoint-small) {\n    margin-right: $account-gutter-inner;\n  }\n}\n\n/* scss-combine:account/pages/auth-created */\n.account-page-created .account-body {\n  float: none;\n  width: 100%;\n  max-width: 600px;\n  margin-right: auto;\n  margin-left: auto;\n  text-align: center;\n\n  p {\n    margin-bottom: $account-gutter;\n    line-height: 1.5;\n  }\n\n  em {\n    font-family: monospace;\n    font-style: normal;\n    font-weight: bold;\n    background: $account-card-background-color;\n  }\n}\n\n/* scss-combine:account/pages/auth-new-password */\n.account-page-new-password .account-content {\n  width: 100%;\n  max-width: 400px;\n  margin-right: auto;\n  margin-left: auto;\n}\n\n.new-password-requirements {\n  margin-bottom: $account-gutter;\n  text-align: center;\n}\n\n\n/* scss-combine:account/pages/gift-certificate */\n// (optional) gift card nav\n\n@if ($giftcard-nav-use-default-styles) {\n  .giftcard-nav {\n    padding: $account-gutter * 2;\n    margin-bottom: $account-gutter * 2;\n    text-align: center;\n  }\n\n  .giftcard-nav-item {\n    display: inline-block;\n    margin: 0 1em;\n    color: $account-link-color;\n\n    &.is-active { color: $account-text-color; }\n  }\n}\n\n.giftcard-heading-container {\n  margin-bottom: $account-gutter * 2;\n  text-align: center;\n}\n\n\n// Purchase\n\n.giftcard-form-help-message {\n  display: block;\n  margin-top: 6px;\n}\n\n.giftcard-form-preview {\n  iframe { width: 100%; }\n}\n\n.giftcard-single-theme {\n  display: none;\n}\n\n\n// Check balance\n\n.giftcard-balance-container {\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n.form-giftcard-balance {\n  position: relative;\n\n  .form-field-title {\n    position: absolute;\n    left: -9999px;\n  }\n\n  .form-field-control {\n    display: block;\n\n    @media screen and (min-width: 600px + ($account-gutter-inner * 2)) {\n      margin-right: calc(30% + #{$account-gutter-inner});\n    }\n  }\n\n  .form-actions {\n    @media screen and (min-width: 600px + ($account-gutter-inner * 2)) {\n      position: absolute;\n      top: 0;\n      right: 0;\n      width: 30%;\n    }\n  }\n\n  .button {\n    width: 100%;\n  }\n}\n\n\n// Redeem\n\n.giftcard-redeem-steps {\n  line-height: 1.5;\n\n  li { margin-bottom: 0.75em; }\n}\n\n\n\n.account-heading {\n  @extend %heading-text-treatment;\n  padding-bottom: 30px;\n  font-size: 20px;\n  text-align: left;\n\n  .account-page-create &,\n  .account-page-forgot & {\n    @extend %center, %full-width;\n    padding: ($gutter * 3) ($gutter * 2) ($gutter * 4);\n  }\n}\n\n.account-sub-heading,\n.auth-sub-heading {\n  @extend .section-title;\n  margin-top: $gutter;\n  text-align: left;\n}\n\n.account-wrapper {\n  .account-header {\n    margin: 0;\n    border: 0;\n  }\n\n  .form-field {\n    margin-bottom: $gutter * 1.5;\n  }\n}\n\n.account-button-primary { @extend .button-primary; }\n.account-button-secondary { @extend .button-secondary; }\n.account-button-small { @extend .button-small; }\n\n.account-nav + .account-body {\n  @media screen and (min-width: 620px) {\n    padding-left: $gutter;\n    border-left: 1px solid $border-color;\n  }\n\n  @media screen and (min-width: 900px) {\n    padding-left: $gutter * 2;\n  }\n}\n\n// Orders Navigation\n.account-nav-list {\n  padding: 5px $gutter;\n  font-size: 14px;\n  font-weight: bold;\n  border: 2px solid $border-color;\n  border-radius: 3px;\n\n  @media screen and (min-width: 620px) {\n    padding: 0;\n    border: 0;\n  }\n}\n\n.account-nav-item {\n  border-top: 0;\n\n  &.is-active { border-left: 0; }\n}\n\n.account-nav-link { padding: 10px 0; }\n\n// Account Items\n\n.account-item {\n  padding: $gutter 0;\n\n  &:first-of-type {\n    padding-top: 0;\n    border-top: 0;\n  }\n}\n\n.account-item-thumbnail {\n  padding-right: $gutter;\n\n  img { border: 1px solid $border-color; }\n}\n\n.account-receipt-summaries {\n  padding: $gutter 0;\n}\n\n// Recently Viewed\n\n.account-recently-viewed {\n  @include container;\n\n  .account-product-item {\n    // @extend .product-item, .grid-m-2, .grid-l-3;\n    margin-bottom: $gutter * 2;\n    @include breakpoint(m) { @include with-layout($grid-small) { @include gallery(6 of 12); } }\n    @include breakpoint(l-up) { @include gallery(4 of 12); }\n  }\n\n  .account-product-item-title {\n    @extend .product-item-title;\n  }\n\n  .account-product-item-brand {\n    display: block;\n    margin-bottom: 5px;\n  }\n}\n\n// Order Pagination\n.pagination { position: relative; }\n.pagination-count { text-align: center; }\n\n.pagination-next,\n.pagination-previous {\n  position: absolute;\n  bottom: 0;\n}\n\n.pagination-next { right: 0; }\n.pagination-previous { left: 0; }\n\n// Create Account Page\n.account-create-form {\n  .form-field {\n    @include breakpoint(s) {\n      width: 100%;\n      // scss-lint:disable ImportantRule\n      padding: 0 !important;\n    }\n  }\n}\n\n.account-create-address {\n  border-bottom: 0;\n}\n\n// Login Page\n.account-login-wrapper {\n\n  @include breakpoint(m) {\n    .account-button-secondary {\n      margin-top: $gutter;\n      margin-left: 0;\n    }\n  }\n\n  @include breakpoint(s) {\n    margin-top: $gutter * 3;\n    margin-bottom: $gutter * 2;\n  }\n\n  @include breakpoint(m-up) {\n    margin-top: 70px;\n    margin-bottom: 125px;\n  }\n}\n\n.account-create {\n  background-color: transparent;\n\n  @include breakpoint(s) {\n    margin-top: $gutter * 2;\n  }\n\n  @include breakpoint(m-up) {\n    padding-left: 37.5px;\n    border-left: 1px solid $border-color;\n  }\n}\n\n.account-login,\n.account-create {\n  @include breakpoint(s) {\n    display: block;\n  }\n}\n\n/* scss-combine:modules/gift-certificates */\n.giftcard-body {\n  @include container(710px);\n  margin-bottom: 50px;\n\n  .form-select {\n    height: 38px;\n    background-color: $white;\n    border: 1px solid $select-border-color;\n  }\n}\n\n\n// Components\n/* scss-combine:components/alerts */\n// Alerts are fixed at the top of the page\n\n.alert {\n  position: relative;\n  display: block;\n  width: 100%;\n  padding: 10px 45px;\n  margin-top: $gutter;\n  margin-bottom: $gutter;\n  border-radius: 3px;\n}\n\n.alert-dismiss {\n  position: absolute;\n  top: 50%;\n  right: $gutter;\n  font-size: 18px;\n  color: $white;\n  cursor: pointer;\n  transform: translateY(-50%);\n\n  &:hover {\n    color: darken($white, 15%);\n  }\n}\n\n.alert-message {\n  font-family: $primary-font;\n  font-size: 11px;\n  line-height: 1.4;\n  letter-spacing: 0.12em;\n  color: $white;\n  text-transform: uppercase;\n\n  &:before {\n    position: absolute;\n    top: 50%;\n    left: $gutter;\n    display: block;\n    width: 18px;\n    height: 18px;\n    content: \"\";\n    transform: translateY(-50%);\n\n    .alert-success & { @include alert-success; }\n    .alert-error & { @include alert-error; }\n    .alert-info & { @include alert-info; }\n  }\n}\n\n.alert-success { background-color: $alert-success; }\n.alert-error { background-color: $alert-error; }\n.alert-info { background-color: $alert-info; }\n\n/* scss-combine:components/banners */\n.banners {\n  padding-right: $gutter;\n  padding-left: $gutter;\n  background-color: $banner-background-color;\n\n  @include breakpoint(l-up) {\n    padding-right: $gutter * 2;\n    padding-left: $gutter * 2;\n  }\n}\n\n.banner {\n  overflow: auto;\n  border-bottom: 1px solid rgba($white, 0.1);\n\n  &:last-of-type {\n    border-bottom: 0;\n  }\n\n  &.rte {\n    font-family: $primary-font;\n    font-size: 11px;\n    line-height: 1.4;\n    letter-spacing: 0.12em;\n    color: $white;\n    text-align: center;\n    text-transform: uppercase;\n\n    a {\n      color: $banner-link-color;\n\n      &:hover {\n        @include hover($banner-link-color);\n      }\n    }\n  }\n}\n\n/* scss-combine:components/breadcrumbs */\n.breadcrumbs {\n  padding: 13px $gutter * 2;\n  text-align: center;\n  background-color: $breadcrumb-background-color;\n  border-bottom: 1px solid $border-color;\n\n  @include breakpoint(s) {\n    padding-right: $gutter;\n    padding-left: $gutter;\n    text-align: left;\n  }\n}\n\n.breadcrumbs-list {\n  font-size: 0;\n}\n\n.breadcrumb {\n  display: inline-block;\n  font-size: $font-size;\n}\n\n.breadcrumb-label {\n  display: block;\n\n  &.link {\n    color: $accent-color;\n\n    &:after {\n      margin-right: $gutter / 2;\n      margin-left: $gutter / 2;\n      color: $lightest-text;\n      content: \"/\";\n    }\n  }\n\n  &.static {\n    color: $lightest-text;\n  }\n}\n\n/* scss-combine:components/share-buttons */\n.share-heading {\n  @extend %section-title-text-treatment;\n  display: inline-block;\n  margin: 0 $gutter 0 0;\n  font-family: $primary-font;\n  font-size: $font-size;\n\n  &:after {\n    content: \":\";\n  }\n}\n\n.share-buttons {\n  display: inline-block;\n  font-size: 0;\n  vertical-align: text-bottom;\n\n  .social-link {\n    margin-right: 12px;\n\n    &:last-of-type {\n      margin-right: 0;\n    }\n\n    > a {\n      width: 15px;\n      height: 15px;\n      color: $lightest-text;\n\n      // scss-lint:disable NestingDepth\n      &:hover,\n      &:active {\n        color: $primary-color;\n      }\n    }\n  }\n}\n\n/* scss-combine:components/cart-preview */\n.cart-preview-container {\n  position: absolute;\n  top: -($gutter / 2);\n  right: 0;\n  z-index: index($elements, cart-preview);\n  display: none;\n  width: 380px;\n  padding: $gutter ($gutter + 5);\n  font-family: $primary-font;\n  font-weight: normal;\n  color: $body-color;\n  background-color: $white;\n  box-shadow: 0 1px 4px 0 $shadow-color;\n\n  &.animating,\n  &.visible {\n    display: block;\n\n    @include breakpoint(s) {\n      display: none;\n    }\n  }\n}\n\n.cart-preview {\n  position: relative;\n}\n\n.cart-preview-title {\n  @extend %section-title-text-treatment;\n  padding-bottom: 15px;\n  margin: 0;\n  font-size: 16px;\n  border-bottom: 1px solid $border-color;\n}\n\n.cart-preview-close {\n  @extend %button-reset;\n  position: absolute;\n  top: 21px;\n  right: $gutter + 5;\n  color: $body-color;\n\n  svg {\n    width: 12px;\n    height: 12px;\n  }\n}\n\n.cart-preview-body {\n  padding-top: 25px;\n\n  &.scroll {\n    max-height: 300px;\n    overflow-y: auto;\n  }\n}\n\n.cart-preview-list-item {\n  @include container();\n  margin-bottom: $gutter * 2;\n\n  &:last-of-type {\n    margin-bottom: $gutter * 3;\n  }\n}\n\n.cart-preview-list-item-image {\n  @include with-layout($cart-preview) { @include span(first 2 of 12); }\n  a {\n    display: block;\n\n    img {\n      max-height: 65px;\n    }\n  }\n}\n\n.cart-preview-list-item-details {\n  @include with-layout($cart-preview) { @include span(7 of 12); }\n}\n\n.cart-preview-list-item-price {\n  @include with-layout($cart-preview) { @include span(last 3 of 12); }\n  color: $lighter-text;\n  text-align: right;\n}\n\n.cart-preview-list-item-name {\n  font-family: $primary-font;\n  font-size: 14px;\n  font-weight: bold;\n  line-height: 1.4;\n\n  > a {\n    color: $primary-color;\n  }\n}\n\n.cart-preview-list-item-options,\n.cart-preview-list-item-quantity {\n  font-family: $secondary-font;\n  font-size: 12px;\n  color: $lighter-text;\n}\n\n.cart-preview-list-item-remove {\n  font-size: 10px;\n\n  .primary-navigation & {\n    color: $primary-color;\n  }\n}\n\n.cart-preview-footer {\n  .button {\n    width: 100%;\n    margin: 0;\n  }\n\n  .tertiary {\n    margin-bottom: $gutter / 2;\n  }\n}\n\n.cart-preview-pricing {\n  @extend %clearfix;\n  margin-bottom: 10px;\n  border-top: 1px solid $border-color;\n  border-bottom: 1px solid $border-color;\n}\n\n.cart-preview-discount {\n  @extend %clearfix;\n  border-top: 1px solid $border-color;\n}\n\n.cart-preview-total-price-label,\n.cart-preview-total-price {\n  height: 45px;\n  line-height: 45px;\n}\n\n.cart-preview-total-price-label {\n  float: left;\n  font-size: 12px;\n  color: $lighter-text;\n  text-transform: uppercase;\n}\n\n.cart-preview-total-price {\n  float: right;\n  font-size: 15px;\n  color: $body-color;\n}\n\n.cart-preview-empty {\n  padding-top: $gutter * 2;\n  padding-bottom: $gutter * 2;\n  font-size: $font-size;\n  font-weight: bold;\n  line-height: $font-size;\n  color: $lighter-text;\n  text-align: center;\n}\n\n/* scss-combine:components/pagination */\n.pagination {\n  @extend %clearfix;\n  float: left;\n  width: 100%;\n  margin-top: 100px;\n  margin-bottom: 65px;\n\n  .content & {\n    margin-top: 70px;\n    margin-bottom: 35px;\n  }\n}\n\n.pagination-list {\n  font-size: 0;\n  text-align: center;\n}\n\n.pagination-label,\n.pagination-item,\n.pagination-previous,\n.pagination-next {\n  display: inline-block;\n  margin-right: $gutter;\n  font-family: $secondary-font;\n  font-size: $font-size;\n  font-weight: bold;\n\n  &:last-of-type { margin-right: 0;}\n}\n\n.pagination-previous { float: left; }\n.pagination-next { float: right; }\n\n/* scss-combine:components/promos */\n.promo-message {\n  padding: 10px;\n  font-family: $primary-font;\n  font-size: 11px;\n  font-weight: bold;\n  line-height: 1.4;\n  letter-spacing: 0.12em;\n  text-align: center;\n  text-transform: uppercase;\n  background-color: $promo-color;\n  border-radius: 3px;\n\n  .main-content > & {\n    margin-top: -1px;\n    border-radius: 0;\n  }\n\n  + .mosaic { margin-top: 0; }\n\n  .product-container & {\n    margin-top: -$gutter;\n    margin-bottom: $gutter * 2;\n  }\n\n  .cart-messages & {\n    margin-top: $gutter * 2;\n    margin-bottom: -$gutter;\n  }\n}\n\n.cart-messages {\n  padding-right: $gutter * 2;\n  padding-left: $gutter * 2;\n}\n\n/* scss-combine:components/compare-bar */\n.compare-tab {\n  @extend %clearfix;\n  position: fixed;\n  bottom: 0;\n  left: 50%;\n  z-index: index($elements, compare-tab);\n  display: none;\n  min-width: 580px;\n  padding: 13px 19px;\n  font-size: $font-size;\n  background: $white;\n  box-shadow: 0 0 4px 0 $shadow-color;\n\n  @include breakpoint(m) {\n    // scss-lint:disable ImportantRule\n    display: none !important;\n  }\n\n  &.animating,\n  &.visible {\n    display: block;\n    transform: translateY(100%);\n    transition: transform 0.2s ease;\n  }\n\n  &.visible {\n    transform: translateY(0);\n  }\n}\n\n.compare-tab-left {\n  float: left;\n  margin-right: $gutter;\n\n  .item-limit { font-weight: bold; }\n  .clear-compare { font-size: 12px; }\n}\n\n.compare-submit {\n  position: absolute;\n  right: 15px;\n  bottom: 13px;\n  height: 40px;\n}\n\n.compare-items-list {\n  margin-right: 120px;\n  font-size: 0;\n}\n\n.compare-tab-item,\n.compare-tab-item-empty {\n  position: relative;\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  margin-right: 20px;\n  text-align: center;\n  border: 1px dashed transparent;\n}\n\n.compare-tab-item-empty {\n  border-color: $border-color;\n}\n\n.compare-tab-item-number {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  font-size: 16px;\n  font-weight: bold;\n  color: lighten($lightest-text, 25%);\n  transform: translate(-50%, -50%);\n}\n\n.compare-tab-item-remove {\n  position: absolute;\n  top: -4px;\n  right: -4px;\n  cursor: pointer;\n\n  .icon-remove {\n    width: 14px;\n    height: 14px;\n  }\n\n  &:hover {\n    color: $accent-color;\n  }\n}\n\n.compare-tab-item-image {\n  > img {\n    max-height: 40px;\n  }\n}\n\n/* scss-combine:components/loading */\n/*! Theme: Capacity v1.14.1 */\n.loading {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 100;\n  display: none;\n  background-color: $body-background-color;\n  background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32' width='50' height='50' fill='#{escape-hex($navigation-color)}'%3E %3Cpath opacity='.25' d='M16 0 A16 16 0 0 0 16 32 A16 16 0 0 0 16 0 M16 4 A12 12 0 0 1 16 28 A12 12 0 0 1 16 4'/%3E %3Cpath d='M16 0 A16 16 0 0 1 32 16 L28 16 A12 12 0 0 0 16 4z'%3E %3CanimateTransform attributeName='transform' type='rotate' from='0 16 16' to='360 16 16' dur='0.8s' repeatCount='indefinite' /%3E %3C/path%3E %3C/svg%3E \");\n  background-position: center;\n  background-repeat: no-repeat;\n  opacity: 0.7;\n\n  &.visible {\n    display: block;\n  }\n}\n\n"}